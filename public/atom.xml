<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小熊猫的花园</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jane66.com/"/>
  <updated>2019-04-22T09:15:00.303Z</updated>
  <id>https://jane66.com/</id>
  
  <author>
    <name>Jiao Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬爬好累啊</title>
    <link href="https://jane66.com/2019/04/09/%E7%88%AC%E7%88%AC%E5%A5%BD%E7%B4%AF%E5%95%8A/"/>
    <id>https://jane66.com/2019/04/09/爬爬好累啊/</id>
    <published>2019-04-09T01:09:53.000Z</published>
    <updated>2019-04-22T09:15:00.303Z</updated>
    
    <content type="html"><![CDATA[<p><em>以自然之道，养自然之身。</em></p><a id="more"></a><p>运动热身 💪：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/28.mp4" frameborder="0" allowfullscreen></iframe><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/29.mp4" frameborder="0" allowfullscreen></iframe><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/30.mp4" frameborder="0" allowfullscreen></iframe><p>木马+狗熊：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/31.mp4" frameborder="0" allowfullscreen></iframe><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/32.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;以自然之道，养自然之身。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>爱吃白果</title>
    <link href="https://jane66.com/2019/03/21/%E7%88%B1%E5%90%83%E7%99%BD%E6%9E%9C/"/>
    <id>https://jane66.com/2019/03/21/爱吃白果/</id>
    <published>2019-03-21T01:25:27.000Z</published>
    <updated>2019-03-21T01:36:28.393Z</updated>
    
    <content type="html"><![CDATA[<p>不想吃饭了：</p><p><img src="/gallary/IMG_0160.jpg" alt=""></p><a id="more"></a><p>球球真好玩：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/282.mp4" frameborder="0" allowfullscreen></iframe><p>听我在说什么？</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/284.mp4" frameborder="0" allowfullscreen></iframe><p>我要吃零食：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/285.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不想吃饭了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0160.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>周末快乐</title>
    <link href="https://jane66.com/2019/03/16/%E5%91%A8%E6%9C%AB%E5%BF%AB%E4%B9%90/"/>
    <id>https://jane66.com/2019/03/16/周末快乐/</id>
    <published>2019-03-16T01:24:19.000Z</published>
    <updated>2019-03-19T01:34:06.574Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，我是小熊猫 😊：</p><p><img src="/gallary/IMG_0149.jpg" alt=""><br><img src="/gallary/IMG_0150.jpg" alt=""><br><img src="/gallary/IMG_0151.jpg" alt=""></p><p>坐火车：</p><p><img src="/gallary/IMG_0154.jpg" alt=""></p><a id="more"></a><p>看我爬得怎么样：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/75.mp4" frameborder="0" allowfullscreen></iframe><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/76.mp4" frameborder="0" allowfullscreen></iframe><p>玩具店真好玩：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/77.mp4" frameborder="0" allowfullscreen></iframe><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/78.mp4" frameborder="0" allowfullscreen></iframe><p>开跑车咯：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/79.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好，我是小熊猫 😊：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0149.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/gallary/IMG_0150.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/gallary/IMG_0151.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;坐火车：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0154.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>出门晒太阳咯</title>
    <link href="https://jane66.com/2019/03/03/%E5%87%BA%E9%97%A8%E6%99%92%E5%A4%AA%E9%98%B3%E5%92%AF/"/>
    <id>https://jane66.com/2019/03/03/出门晒太阳咯/</id>
    <published>2019-03-03T02:00:14.000Z</published>
    <updated>2019-03-07T02:07:59.493Z</updated>
    
    <content type="html"><![CDATA[<p>今天天气好，出门晒个太阳，把头哥不好当：</p><p><img src="/gallary/IMG_0141.jpg" alt=""></p><a id="more"></a><p>和兄弟姐妹排排坐：</p><p><img src="/gallary/IMG_0138.jpg" alt=""></p><p>妹儿，你的围巾还好看呢，给我看一哈嘛：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/26.mp4" frameborder="0" allowfullscreen></iframe><p>爬呀爬：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/27.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天天气好，出门晒个太阳，把头哥不好当：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0141.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>半岁照</title>
    <link href="https://jane66.com/2019/02/28/%E5%8D%8A%E5%B2%81%E7%85%A7/"/>
    <id>https://jane66.com/2019/02/28/半岁照/</id>
    <published>2019-02-28T07:48:56.000Z</published>
    <updated>2019-02-28T08:10:40.299Z</updated>
    
    <content type="html"><![CDATA[<p>我的半岁照，萌萌哒：</p><p><img src="/gallary/IMG_0115.jpg" alt=""><br><img src="/gallary/IMG_0116.jpg" alt=""></p><a id="more"></a><p>我最爱的面条：</p><p><img src="/gallary/IMG_0119.jpg" alt=""></p><p>好开心:</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/216.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的半岁照，萌萌哒：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0115.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/gallary/IMG_0116.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>元宵快乐</title>
    <link href="https://jane66.com/2019/02/19/%E5%85%83%E5%AE%B5%E5%BF%AB%E4%B9%90/"/>
    <id>https://jane66.com/2019/02/19/元宵快乐/</id>
    <published>2019-02-19T08:42:46.000Z</published>
    <updated>2019-02-20T08:53:00.241Z</updated>
    
    <content type="html"><![CDATA[<p>听说今天成都放烟花了 🎆。</p><a id="more"></a><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/74.mp4" frameborder="0" allowfullscreen></iframe><p>招财和我日常扯皮，顺便祝大家元宵节快乐 🧨。</p><p><img src="/gallary/IMG_0104.jpg" alt=""><br><img src="/gallary/IMG_0106.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说今天成都放烟花了 🎆。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
      <category term="招财" scheme="https://jane66.com/tags/%E6%8B%9B%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>独自看家</title>
    <link href="https://jane66.com/2019/02/06/%E7%8B%AC%E8%87%AA%E7%9C%8B%E5%AE%B6/"/>
    <id>https://jane66.com/2019/02/06/独自看家/</id>
    <published>2019-02-06T08:21:00.000Z</published>
    <updated>2019-02-20T08:24:11.365Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="/gallary/IMG_0102.jpg" alt=""></p><p>都回老家过年了，本喵一个人在家，想怎么样就怎么样 😄。<br>还有人上门给服务，伸个懒腰，真舒服啊。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0102.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;都回老家过年了，本喵一个人在家，想怎么样就怎么样 😄。&lt;br&gt;
还有人上门给服务，伸个懒腰，真舒服啊。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="招财" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E6%8B%9B%E8%B4%A2/"/>
    
    
      <category term="招财" scheme="https://jane66.com/tags/%E6%8B%9B%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>新年快乐</title>
    <link href="https://jane66.com/2019/02/04/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/"/>
    <id>https://jane66.com/2019/02/04/新年快乐/</id>
    <published>2019-02-04T07:33:26.000Z</published>
    <updated>2019-02-20T08:17:15.887Z</updated>
    
    <content type="html"><![CDATA[<p>摆个 pose</p><p><img src="/gallary/IMG_0098.jpg" alt=""></p><p>祝大家猪年快乐 🎆，恭喜发财、🧧 红包拿来！！！</p><a id="more"></a><p><img src="/gallary/IMG_0093.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摆个 pose&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0098.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;祝大家猪年快乐 🎆，恭喜发财、🧧 红包拿来！！！&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>今天马杀鸡</title>
    <link href="https://jane66.com/2019/01/16/%E4%BB%8A%E5%A4%A9%E9%A9%AC%E6%9D%80%E9%B8%A1/"/>
    <id>https://jane66.com/2019/01/16/今天马杀鸡/</id>
    <published>2019-01-16T07:33:26.000Z</published>
    <updated>2019-01-16T07:38:21.384Z</updated>
    
    <content type="html"><![CDATA[<p>本宝宝今天体验 Massage，好舒服啊 😄。</p><a id="more"></a><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/72.mp4" frameborder="0" allowfullscreen></iframe><p>阿姨你轻点 😂。</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/73.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本宝宝今天体验 Massage，好舒服啊 😄。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>做客朋友家</title>
    <link href="https://jane66.com/2019/01/10/%E5%81%9A%E5%AE%A2%E6%9C%8B%E5%8F%8B%E5%AE%B6/"/>
    <id>https://jane66.com/2019/01/10/做客朋友家/</id>
    <published>2019-01-10T05:20:01.000Z</published>
    <updated>2019-01-11T05:26:10.064Z</updated>
    
    <content type="html"><![CDATA[<p>本宝宝今天到 👬 朋友家 🏠 做客，好开心 😄。</p><p><img src="/gallary/IMG_0041.jpg" alt=""></p><a id="more"></a><p>坐车车：</p><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/25.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本宝宝今天到 👬 朋友家 🏠 做客，好开心 😄。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0041.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个证书</title>
    <link href="https://jane66.com/2019/01/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%AF%81%E4%B9%A6/"/>
    <id>https://jane66.com/2019/01/08/我的第一个证书/</id>
    <published>2019-01-08T05:44:49.000Z</published>
    <updated>2019-01-09T05:51:45.753Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/gallary/IMG_0033.jpg" alt=""></p><p>今天潜水 🏊‍♀️ 成功，获得的人生第一个证书 😄。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/gallary/IMG_0033.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天潜水 🏊‍♀️ 成功，获得的人生第一个证书 😄。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>又吃辅食了啦😊</title>
    <link href="https://jane66.com/2019/01/06/%E5%8F%88%E5%90%83%E8%BE%85%E9%A3%9F%E4%BA%86%E5%95%A6%F0%9F%98%8A/"/>
    <id>https://jane66.com/2019/01/06/又吃辅食了啦😊/</id>
    <published>2019-01-06T05:24:35.000Z</published>
    <updated>2019-01-09T05:29:55.919Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/gallary/IMG_0028.jpg" alt=""></p><p>今天吃胡萝卜 🥕+ 米粉 🍚，连续吃了 10 多天胡萝卜后终于不抗拒了，做个不挑食的乖宝宝。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/gallary/IMG_0028.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天吃胡萝卜 🥕+ 米粉 🍚，连续吃了 10 多天胡萝卜后终于不抗拒了，做个不挑食的乖宝宝。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>努力努力</title>
    <link href="https://jane66.com/2019/01/02/%E5%8A%AA%E5%8A%9B%E5%8A%AA%E5%8A%9B/"/>
    <id>https://jane66.com/2019/01/02/努力努力/</id>
    <published>2019-01-02T10:07:45.000Z</published>
    <updated>2019-01-08T10:09:00.848Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/gallary/IMG_0024.jpg" alt=""></p><p>努力学习，快快成长 💪。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/gallary/IMG_0024.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;努力学习，快快成长 💪。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>减肥</title>
    <link href="https://jane66.com/2018/11/08/%E5%87%8F%E8%82%A5/"/>
    <id>https://jane66.com/2018/11/08/减肥/</id>
    <published>2018-11-08T09:36:39.000Z</published>
    <updated>2019-01-08T09:53:41.285Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/gallary/IMG_0003.jpg" alt=""></p><p>13 斤的肥猫了 🐱，是时候减肥了！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/gallary/IMG_0003.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;13 斤的肥猫了 🐱，是时候减肥了！！！&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="招财" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E6%8B%9B%E8%B4%A2/"/>
    
    
      <category term="招财" scheme="https://jane66.com/tags/%E6%8B%9B%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>招财捣蛋日常</title>
    <link href="https://jane66.com/2018/11/08/%E6%8B%9B%E8%B4%A2%E6%8D%A3%E8%9B%8B%E6%97%A5%E5%B8%B8/"/>
    <id>https://jane66.com/2018/11/08/招财捣蛋日常/</id>
    <published>2018-11-08T09:15:09.000Z</published>
    <updated>2019-01-08T09:32:16.301Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="/gallary/IMG_0001.jpg" alt=""></p><p>招财蔑视、千翻儿、抢妹妹的床睡。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/gallary/IMG_0001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;招财蔑视、千翻儿、抢妹妹的床睡。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="招财" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E6%8B%9B%E8%B4%A2/"/>
    
    
      <category term="招财" scheme="https://jane66.com/tags/%E6%8B%9B%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>开荤</title>
    <link href="https://jane66.com/2018/10/01/%E5%BC%80%E8%8D%A4/"/>
    <id>https://jane66.com/2018/10/01/开荤/</id>
    <published>2018-10-01T09:44:41.000Z</published>
    <updated>2019-01-08T10:01:25.843Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/gallary/IMG_0023.jpg" alt=""></p><p>今天是祖国生日，小熊猫也过节，开荤了 😛。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/gallary/IMG_0023.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天是祖国生日，小熊猫也过节，开荤了 😛。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>百天party</title>
    <link href="https://jane66.com/2018/09/21/%E7%99%BE%E5%A4%A9party/"/>
    <id>https://jane66.com/2018/09/21/百天party/</id>
    <published>2018-09-21T09:52:15.000Z</published>
    <updated>2019-01-09T01:32:56.180Z</updated>
    
    <content type="html"><![CDATA[<p>今天小熊猫和哥哥、姐姐、弟弟、妹妹一起 party go 😄：</p><a id="more"></a><iframe scrolling="no" width="100%" height="100%" onload="iFrameHeight()" src="/gallary/v001.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天小熊猫和哥哥、姐姐、弟弟、妹妹一起 party go 😄：&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序中绘制雷达图</title>
    <link href="https://jane66.com/2018/08/29/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%BB%98%E5%88%B6%E9%9B%B7%E8%BE%BE%E5%9B%BE/"/>
    <id>https://jane66.com/2018/08/29/微信小程序中绘制雷达图/</id>
    <published>2018-08-29T01:50:00.000Z</published>
    <updated>2019-01-08T05:32:48.949Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><p>雷达图（Radar Chart），又可称为戴布拉图、蜘蛛网图（Spider Chart），是财务分析报表的一种。使用者能一目了然的了解各项指标的变动情形及其好坏趋向。<br>本文介绍如何在微信小程序中实现雷达图绘制。</p><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="雷达图"></p><h2 id="绘制背景"><a class="header-anchor" href="#绘制背景">¶</a>绘制背景</h2><p>首先我们需要绘制出雷达图后面的“蜘蛛网”。具体原理就是一层一层将多边形画出来，根据数据长度决定每一个点的位置和半径长度。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var angle = Math.PI * 2 / length;</span><br><span class="line">for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class="line">        context.beginPath();</span><br><span class="line">        context.setGlobalAlpha(1);</span><br><span class="line">        context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class="line">        if (layer % 2 != 0) &#123;</span><br><span class="line">          context.setFillStyle(&quot;white&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        var currentRad = layer / 5 * radius;</span><br><span class="line">        context.moveTo(center.x, center.y - currentRad);</span><br><span class="line">        var currentAngle = -Math.PI / 2;</span><br><span class="line">        for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class="line">          currentAngle += angle;</span><br><span class="line">        &#125;</span><br><span class="line">        context.fill();</span><br><span class="line">        context.closePath();</span><br><span class="line">        context.stroke();</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>如代码所示，<code>angle</code>是根据数据长度决定的，这里为了好看，一共画五层，并且交替涂抹颜色。下图是<code>length=6</code>的效果：<br><img src="https://upload-images.jianshu.io/upload_images/2641798-482cb08a73db4b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="蜘蛛网"></p><h2 id="绘制轴"><a class="header-anchor" href="#绘制轴">¶</a>绘制轴</h2><p>接下来就是将各个顶点与圆心连接起来。有了“蜘蛛网”的经验，画轴就简单多了，只需要知道最外层顶点位置然后<code>lineTo</code>圆心就行了。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// draw Axis</span><br><span class="line">context.beginPath();</span><br><span class="line">var currentAngle = -Math.PI / 2;</span><br><span class="line">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">  context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class="line">  context.lineTo(center.x, center.y);</span><br><span class="line">  currentAngle += angle;</span><br><span class="line">&#125;</span><br><span class="line">context.closePath();</span><br><span class="line">context.stroke();</span><br></pre></td></tr></table></figure><p>以下是加上轴线后的效果：<br><img src="https://upload-images.jianshu.io/upload_images/2641798-fd3a8dd75cc634c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数轴"></p><h2 id="绘制指标"><a class="header-anchor" href="#绘制指标">¶</a>绘制指标</h2><p>接下来是将各个维度指标名字添加到图表上。同数轴一样，首先需要确定最外层顶点的位置，然后根据位置调整文字显示的基准，将文字写上去。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// draw Index</span><br><span class="line">context.beginPath();</span><br><span class="line">context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class="line">context.setFontSize(14);</span><br><span class="line">var currentAngle = -Math.PI / 2;</span><br><span class="line">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">  var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class="line">  var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class="line">  if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class="line">  else context.setTextAlign(&quot;left&quot;);</span><br><span class="line">  if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class="line">  else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class="line">  context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class="line">  currentAngle += angle;</span><br><span class="line">&#125;</span><br><span class="line">context.closePath();</span><br></pre></td></tr></table></figure><p>这里为了好看，对于文字要显示的位置小于中心点 x 坐标的靠右对齐，否则靠左对齐；对于文字位置大于中心点 y 坐标的基准设置在上方，否则在下方。以下是加上指标后的效果：<br><img src="https://upload-images.jianshu.io/upload_images/2641798-896f6d32eda04d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="指标"></p><h2 id="绘制数据"><a class="header-anchor" href="#绘制数据">¶</a>绘制数据</h2><p>最后，我们将数据绘制到图表上。首先，我们要确定所有数据的最大值，如果最大值大于 10，那么取 10 的倍数。然后同画“蜘蛛网”一样，将各个数据点的半径根据相对于最大值比例换算出来，然后绘制在图表上。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// draw data</span><br><span class="line">var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class="line">that.options.data.forEach(function(val) &#123;</span><br><span class="line">  var temp = Math.max.apply(null, val.value);</span><br><span class="line">  if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class="line">&#125;);</span><br><span class="line">if (MaxValue &gt; 10) &#123;</span><br><span class="line">  MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">that.options.data.forEach(function(val) &#123;</span><br><span class="line">  context.beginPath();</span><br><span class="line">  context.setStrokeStyle(val.color);</span><br><span class="line">  var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class="line">  context.moveTo(center.x, center.y - currentRad);</span><br><span class="line">  var currentAngle = -Math.PI / 2;</span><br><span class="line">  for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">    currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class="line">    context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class="line">    currentAngle += angle;</span><br><span class="line">  &#125;</span><br><span class="line">  currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class="line">  context.lineTo(center.x, center.y - currentRad);</span><br><span class="line">  context.stroke();</span><br><span class="line">  if (that.options.area) &#123;</span><br><span class="line">    context.setFillStyle(val.color);</span><br><span class="line">    context.setGlobalAlpha(0.5);</span><br><span class="line">    context.fill();</span><br><span class="line">  &#125;</span><br><span class="line">  context.closePath();</span><br><span class="line">&#125;);</span><br><span class="line">context.draw();</span><br></pre></td></tr></table></figure><p>以下就是添加数据后的完整效果：<br><img src="https://upload-images.jianshu.io/upload_images/2641798-cb22523fbd815021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据"></p><h2 id="添加绘制动画"><a class="header-anchor" href="#添加绘制动画">¶</a>添加绘制动画</h2><p>为了显示效果更佳，我们可以给绘制图表加上动画，具体实现如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">var angle = Math.PI * 2 / length;</span><br><span class="line"></span><br><span class="line">var step = 1;</span><br><span class="line">var MaxStep = that.options.animation ? 50 : 1;</span><br><span class="line">var animation = function() &#123;</span><br><span class="line">  if (step &lt;= MaxStep) &#123;</span><br><span class="line">    // draw background</span><br><span class="line">    for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class="line">      context.beginPath();</span><br><span class="line">      context.setGlobalAlpha(1);</span><br><span class="line">      context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class="line">      if (layer % 2 != 0) &#123;</span><br><span class="line">        context.setFillStyle(&quot;white&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      var currentRad = layer / 5 * radius;</span><br><span class="line">      context.moveTo(center.x, center.y - currentRad);</span><br><span class="line">      var currentAngle = -Math.PI / 2;</span><br><span class="line">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class="line">        currentAngle += angle;</span><br><span class="line">      &#125;</span><br><span class="line">      context.fill();</span><br><span class="line">      context.closePath();</span><br><span class="line">      context.stroke();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // draw Axis</span><br><span class="line">    context.beginPath();</span><br><span class="line">    var currentAngle = -Math.PI / 2;</span><br><span class="line">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">      context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class="line">      context.lineTo(center.x, center.y);</span><br><span class="line">      currentAngle += angle;</span><br><span class="line">    &#125;</span><br><span class="line">    context.closePath();</span><br><span class="line">    context.stroke();</span><br><span class="line"></span><br><span class="line">    // draw Index</span><br><span class="line">    context.beginPath();</span><br><span class="line">    context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class="line">    context.setFontSize(14);</span><br><span class="line">    var currentAngle = -Math.PI / 2;</span><br><span class="line">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">      var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class="line">      var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class="line">      if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class="line">      else context.setTextAlign(&quot;left&quot;);</span><br><span class="line">      if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class="line">      else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class="line">      context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class="line">      currentAngle += angle;</span><br><span class="line">    &#125;</span><br><span class="line">    context.closePath();</span><br><span class="line"></span><br><span class="line">    // draw data</span><br><span class="line">    var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class="line">    that.options.data.forEach(function(val) &#123;</span><br><span class="line">      var temp = Math.max.apply(null, val.value);</span><br><span class="line">      if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class="line">    &#125;);</span><br><span class="line">    if (MaxValue &gt; 10) &#123;</span><br><span class="line">      MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    that.options.data.forEach(function(val) &#123;</span><br><span class="line">      context.beginPath();</span><br><span class="line">      context.setStrokeStyle(val.color);</span><br><span class="line">      var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class="line">      context.moveTo(center.x, center.y - currentRad);</span><br><span class="line">      var currentAngle = -Math.PI / 2;</span><br><span class="line">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class="line">        currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class="line">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class="line">        currentAngle += angle;</span><br><span class="line">      &#125;</span><br><span class="line">      currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class="line">      context.lineTo(center.x, center.y - currentRad);</span><br><span class="line">      context.stroke();</span><br><span class="line">      if (that.options.area) &#123;</span><br><span class="line">        context.setFillStyle(val.color);</span><br><span class="line">        context.setGlobalAlpha(0.5);</span><br><span class="line">        context.fill();</span><br><span class="line">      &#125;</span><br><span class="line">      context.closePath();</span><br><span class="line">    &#125;);</span><br><span class="line">    context.draw();</span><br><span class="line">    step++;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    clearInterval(aniName);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">var aniName = setInterval(animation, 10);</span><br></pre></td></tr></table></figure><p>最终效果如下：<br><img src="https://upload-images.jianshu.io/upload_images/2641798-d476058258f845d5.gif?imageMogr2/auto-orient/strip" alt="动画效果"></p><h2 id="结语"><a class="header-anchor" href="#结语">¶</a>结语</h2><p>😊 以上就是在微信小程序中绘制雷达图的方法。如有兴趣了解更多，可以查看完整代码：<a href="https://github.com/chmini-app/CHCharts-wechat" target="_blank" rel="noopener">https://github.com/chmini-app/CHCharts-wechat</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#前言&quot;&gt;¶&lt;/a&gt;前言&lt;/h2&gt;
&lt;p&gt;雷达图（Radar Chart），又可称为戴布拉图、蜘蛛网图（Spider Chart），是财务分析报表的一种。使用者能一目了然的了解各项指标的变动情形及其好坏趋向。&lt;br&gt;
本文介绍如何在微信小程序中实现雷达图绘制。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="https://jane66.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="小程序" scheme="https://jane66.com/categories/%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://jane66.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="html" scheme="https://jane66.com/tags/html/"/>
    
      <category term="前端" scheme="https://jane66.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>小熊猫来到这个世界</title>
    <link href="https://jane66.com/2018/06/21/%E5%B0%8F%E7%86%8A%E7%8C%AB%E6%9D%A5%E5%88%B0%E4%B8%96%E7%95%8C/"/>
    <id>https://jane66.com/2018/06/21/小熊猫来到世界/</id>
    <published>2018-06-20T16:02:08.000Z</published>
    <updated>2019-01-09T05:25:20.082Z</updated>
    
    <content type="html"><![CDATA[<p>公元 2018 年 6 月 21 日，夏至，凌晨 2 点 08 分，成都华西附二院一声啼哭，小熊猫 🐼 来到了这个世界。</p><hr><a id="more"></a><p><img src="/gallary/IMG_0004.jpg" alt=""></p><p>似乎上天知道你八字缺水，出生的时候窗外下着淅沥沥的小雨。<br>似乎你知道自己叫“小熊猫”，一出生就握紧拳头，蜷着小手卖萌 😊。</p><hr><p><img src="/gallary/IMG_0005.jpg" alt=""></p><p>天使宝宝 👼，爸爸妈妈希望你永远健康快乐。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公元 2018 年 6 月 21 日，夏至，凌晨 2 点 08 分，成都华西附二院一声啼哭，小熊猫 🐼 来到了这个世界。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="生活" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="小熊猫" scheme="https://jane66.com/categories/%E7%94%9F%E6%B4%BB/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
    
      <category term="小熊猫" scheme="https://jane66.com/tags/%E5%B0%8F%E7%86%8A%E7%8C%AB/"/>
    
      <category term="新生" scheme="https://jane66.com/tags/%E6%96%B0%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>iOS实现类Prisma软件</title>
    <link href="https://jane66.com/2017/04/28/iOS%E5%AE%9E%E7%8E%B0%E7%B1%BBPrisma%E8%BD%AF%E4%BB%B6/"/>
    <id>https://jane66.com/2017/04/28/iOS实现类Prisma软件/</id>
    <published>2017-04-28T02:42:21.000Z</published>
    <updated>2019-01-10T02:18:05.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><hr><p>Prisma 在 2016 上线后就大火，该 APP 是利用<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" target="_blank" rel="noopener">神经网络</a>和<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD" target="_blank" rel="noopener">人工智能</a>技术，为普通照片加入艺术效果的照片编辑软件。</p><p>同年 Google 也发布了一篇《A LEARNED REPRESENTATION FOR ARTISTIC STYLE》论文，实现了前向运算一次为照片整合多种艺术风格的功能，并且优化了内存使用和运算速度，可以在移动设备上快速运算。</p><p>最近在研究 Tensorflow 整合 iOS 过程中，发现 google 公开了论文实现的源码和训练数据，也就是说我们可以通过自己写一个前向运算图，整合其训练参数就可以快速实现类 Prisma 的应用。</p><p>下面就介绍一下如何在 iPhone 上跑一个自己的**“Prisma”**。</p><a id="more"></a><p><img src="http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="招财和咕噜"></p><h2 id="准备工作"><a class="header-anchor" href="#准备工作">¶</a>准备工作</h2><hr><ol><li>安装<a href="https://www.tensorflow.org/versions/r0.12/get_started/os_setup.html#download-and-setup" target="_blank" rel="noopener">Tensorflow</a>，这个官网上有详细教程这里就不多说了。</li><li>搭建<a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/ios_examples/" target="_blank" rel="noopener">iOS+Tensorflow</a>工程，这个可以根据 Git 上的步骤实现，也可以参考官方的 Demo 程序配置。（这个过程有很多坑，多次尝试，应该可以配置成功）</li><li>下载模型，本次使用的模型是<a href="https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization" target="_blank" rel="noopener">image_stylization</a>，google 已开源在 GitHub 上。</li><li>下载训练好的参数，Google 提供了 2 个：<br><a href="http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-monet.ckpt" target="_blank" rel="noopener">Monet</a><br><a href="http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-varied.ckpt" target="_blank" rel="noopener">Varied</a><br>Monet 训练了 10 种艺术图片，Varied 训练了 32 种。<br>当然你也可以自己训练艺术图片，但是得下载 VGG 的训练参数和 ImageNet 数据，然后自己训练，比较花时间。</li></ol><h2 id="构建计算图"><a class="header-anchor" href="#构建计算图">¶</a>构建计算图</h2><hr><p>虽然 Google 提供了模型的源码，但是并没有在源码中输出运算图已方便迁移到移动设备中使用，Android 的 Demo 中倒是提供了生成的 pb，如何觉得自己写计算图麻烦可以直接拷到自己 iOS 工程中使用。</p><p>我这里创建了一个 python 的工程，然后把 Google 源码中 <a href="http://model.py" target="_blank" rel="noopener">model.py</a> 相关的文件都加入了工程。<br>我的建图代码如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import tensorflow as tf</span><br><span class="line">import ast</span><br><span class="line">import os</span><br><span class="line">from tensorflow.python import pywrap_tensorflow</span><br><span class="line"></span><br><span class="line">from matplotlib import pyplot</span><br><span class="line">from matplotlib.pyplot import imshow</span><br><span class="line"></span><br><span class="line">import image_utils</span><br><span class="line">import model</span><br><span class="line">import ops</span><br><span class="line">import argparse</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num_styles = 32</span><br><span class="line">imgWidth = 512</span><br><span class="line">imgHeight = 512</span><br><span class="line">channel = 3</span><br><span class="line">checkpoint = &quot;/Users/Jiao/Desktop/TFProject/style-image/checkpoint/multistyle-pastiche-generator-varied.ckpt&quot;</span><br><span class="line"></span><br><span class="line">inputImage = tf.placeholder(tf.float32,shape=[None,imgWidth,imgHeight,channel],name=&quot;input&quot;)</span><br><span class="line">styles = tf.placeholder(tf.float32,shape=[num_styles],name=&quot;style&quot;)</span><br><span class="line"></span><br><span class="line">with tf.name_scope(&quot;&quot;):</span><br><span class="line">    transform = model.transform(inputImage,</span><br><span class="line">                            normalizer_fn=ops.weighted_instance_norm,</span><br><span class="line">                            normalizer_params=&#123;</span><br><span class="line">                                # &apos;weights&apos;: tf.constant(mixture),</span><br><span class="line">                                &apos;weights&apos; : styles,</span><br><span class="line">                                &apos;num_categories&apos;: num_styles,</span><br><span class="line">                                &apos;center&apos;: True,</span><br><span class="line">                                &apos;scale&apos;: True&#125;)</span><br><span class="line"></span><br><span class="line">model_saver = tf.train.Saver(tf.global_variables())</span><br><span class="line"></span><br><span class="line">with tf.Session() as sess:</span><br><span class="line">    tf.train.write_graph(sess.graph_def, &quot;/Users/Jiao/Desktop/TFProject/style-image/protobuf&quot;, &quot;input.pb&quot;)</span><br><span class="line">    #checkpoint = os.path.expanduser(checkpoint)</span><br><span class="line">    #if tf.gfile.IsDirectory(checkpoint):</span><br><span class="line">    #    checkpoint = tf.train.latest_checkpoint(checkpoint)</span><br><span class="line">    #    tf.logging.info(&apos;loading latest checkpoint file: &#123;&#125;&apos;.format(checkpoint))</span><br><span class="line">    #model_saver.restore(sess, checkpoint)</span><br><span class="line"></span><br><span class="line">    #newstyle = np.zeros([num_styles], dtype=np.float32)</span><br><span class="line">    #newstyle[18] = 0.5</span><br><span class="line">    #newstyle[17] = 0.5</span><br><span class="line">    #newImage = np.zeros((1,imgWidth,imgHeight,channel))</span><br><span class="line">    #style_image = transform.eval(feed_dict=&#123;inputImage:newImage,styles:newstyle&#125;)</span><br><span class="line">    #style_image = style_image[0]</span><br><span class="line">    #imshow(style_image)</span><br><span class="line">    #pyplot.show()</span><br></pre></td></tr></table></figure><p>这里输入节点是<code>input</code>和<code>style</code>，输出节点是 model 中的<code>transformer/expand/conv3/conv/Sigmoid</code>。</p><p>到此就将模型的计算图保存到了本地文件夹中。<br>接下来就是将图和 ckpt 中的参数合并，并且生成移动端的可以使用的 pb 文件，这一步可以参考我上一篇文章<a href="http://www.jianshu.com/p/f096fe2212ce" target="_blank" rel="noopener">《iOS+Tensorflow 实现图像识别》</a>，很容易就实现。</p><h2 id="ios-工程"><a class="header-anchor" href="#ios-工程">¶</a>iOS 工程</h2><hr><p>在上面准备工作中，如果你已经按步骤搭建好 iOS+TF 的工程，这里你只需要导入生成的最终 pb 文件就行了。工程结构如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/2641798-ca34abd1c875504c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="XCode工程"></p><p>然后在 iOS 使用 pb 文件，我这里直接导入了 Google 提供的<code>tensorflow_utils</code>，使用这个类里面的 LoadModel 方法可以很快的生成含有计算图的 session。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    tensorflow::Status load_status;</span><br><span class="line">    load_status = LoadModel(@&quot;rounded_graph&quot;, @&quot;pb&quot;, &amp;tf_session);</span><br><span class="line">    if (!load_status.ok()) &#123;</span><br><span class="line">        LOG(FATAL) &lt;&lt; &quot;Couldn&apos;t load model: &quot; &lt;&lt; load_status;</span><br><span class="line">    &#125;</span><br><span class="line">    currentStyle = 0;</span><br><span class="line">    isDone = true;</span><br><span class="line">    _styleImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class="line">    _styleImageView.layer.borderWidth = 0.5;</span><br><span class="line">    _ogImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class="line">    _ogImageView.layer.borderWidth = 0.5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后就是获取图片，执行运算，生成艺术图片展示。这里图片需要转换成 bitmap 然后获取 data 值，展示图片也是相识的过程。具体代码如下：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">- (void)runCnn:(UIImage *)compressedImg</span><br><span class="line">&#123;</span><br><span class="line">    unsigned char *pixels = [self getImagePixel:compressedImg];</span><br><span class="line">    int image_channels = 4;</span><br><span class="line">    tensorflow::Tensor image_tensor(</span><br><span class="line">                                    tensorflow::DT_FLOAT,</span><br><span class="line">                                    tensorflow::TensorShape(</span><br><span class="line">                                                            &#123;1, wanted_input_height, wanted_input_width, wanted_input_channels&#125;));</span><br><span class="line">    auto image_tensor_mapped = image_tensor.tensor&lt;float, 4&gt;();</span><br><span class="line">    tensorflow::uint8 *in = pixels;</span><br><span class="line">    float *out = image_tensor_mapped.data();</span><br><span class="line">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class="line">        float *out_row = out + (y * wanted_input_width * wanted_input_channels);</span><br><span class="line">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class="line">            tensorflow::uint8 *in_pixel =</span><br><span class="line">            in + (x * wanted_input_width * image_channels) + (y * image_channels);</span><br><span class="line">            float *out_pixel = out_row + (x * wanted_input_channels);</span><br><span class="line">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class="line">                out_pixel[c] = in_pixel[c];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    tensorflow::Tensor style(tensorflow::DT_FLOAT, tensorflow::TensorShape(&#123;32&#125;));</span><br><span class="line">    float *style_data = style.tensor&lt;float, 1&gt;().data();</span><br><span class="line">    memset(style_data, 0, sizeof(float) * 32);</span><br><span class="line">    style_data[currentStyle] = 1;</span><br><span class="line"></span><br><span class="line">    if (tf_session.get()) &#123;</span><br><span class="line">        std::vector&lt;tensorflow::Tensor&gt; outputs;</span><br><span class="line">        tensorflow::Status run_status = tf_session-&gt;Run(</span><br><span class="line">                                                        &#123;&#123;contentNode, image_tensor&#125;,</span><br><span class="line">                                                            &#123;styleNode, style&#125;&#125;,</span><br><span class="line">                                                        &#123;outputNode&#125;,</span><br><span class="line">                                                        &#123;&#125;,</span><br><span class="line">                                                        &amp;outputs);</span><br><span class="line">        if (!run_status.ok()) &#123;</span><br><span class="line">            LOG(ERROR) &lt;&lt; &quot;Running model failed:&quot; &lt;&lt; run_status;</span><br><span class="line">            isDone = true;</span><br><span class="line">            free(pixels);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            float *styledData = outputs[0].tensor&lt;float,4&gt;().data();</span><br><span class="line">            UIImage *styledImg = [self createImage:styledData];</span><br><span class="line">            dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                _styleImageView.image = styledImg;</span><br><span class="line">                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                    isDone = true;</span><br><span class="line">                    free(pixels);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (unsigned char *)getImagePixel:(UIImage *)image</span><br><span class="line">&#123;</span><br><span class="line">    int width = image.size.width;</span><br><span class="line">    int height = image.size.height;</span><br><span class="line">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class="line">    unsigned char *rawData = (unsigned char*) calloc(height * width * 4, sizeof(unsigned char));</span><br><span class="line">    NSUInteger bytesPerPixel = 4;</span><br><span class="line">    NSUInteger bytesPerRow = bytesPerPixel * width;</span><br><span class="line">    NSUInteger bitsPerComponent = 8;</span><br><span class="line">    CGContextRef context = CGBitmapContextCreate(rawData, width, height,</span><br><span class="line"></span><br><span class="line">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class="line"></span><br><span class="line">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class="line"></span><br><span class="line">    CGColorSpaceRelease(colorSpace);</span><br><span class="line">    CGContextDrawImage(context, CGRectMake(0, 0, width, height), image.CGImage);</span><br><span class="line">    UIImage *ogImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class="line">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        _ogImageView.image = ogImg;</span><br><span class="line">    &#125;);</span><br><span class="line">    CGContextRelease(context);</span><br><span class="line">    return rawData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (UIImage *)createImage:(float *)pixels</span><br><span class="line">&#123;</span><br><span class="line">    unsigned char *rawData = (unsigned char*) calloc(wanted_input_height * wanted_input_width * 4, sizeof(unsigned char));</span><br><span class="line">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class="line">        unsigned char *out_row = rawData + (y * wanted_input_width * 4);</span><br><span class="line">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class="line">            float *in_pixel =</span><br><span class="line">            pixels + (x * wanted_input_width * 3) + (y * 3);</span><br><span class="line">            unsigned char *out_pixel = out_row + (x * 4);</span><br><span class="line">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class="line">                out_pixel[c] = in_pixel[c] * 255;</span><br><span class="line">            &#125;</span><br><span class="line">            out_pixel[3] = UINT8_MAX;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class="line">    NSUInteger bytesPerPixel = 4;</span><br><span class="line">    NSUInteger bytesPerRow = bytesPerPixel * wanted_input_width;</span><br><span class="line">    NSUInteger bitsPerComponent = 8;</span><br><span class="line">    CGContextRef context = CGBitmapContextCreate(rawData, wanted_input_width, wanted_input_height,</span><br><span class="line"></span><br><span class="line">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class="line"></span><br><span class="line">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class="line"></span><br><span class="line">    CGColorSpaceRelease(colorSpace);</span><br><span class="line">    UIImage *retImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class="line">    CGContextRelease(context);</span><br><span class="line">    free(rawData);</span><br><span class="line">    return retImg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>这里说明一下，前面 python 工程已经定义了，我的输入和输出图片的大小是 512✕512。</em></p><h2 id="连接-iphone-运行工程"><a class="header-anchor" href="#连接-iphone-运行工程">¶</a>连接 iPhone，运行工程</h2><hr><p>最后连上手机运行，就可以自己创建自己的艺术类图片了。😊</p><p>放几张运行效果图：<br><img src="http://upload-images.jianshu.io/upload_images/2641798-d105c1089f62c634.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="截图1"></p><p><img src="http://upload-images.jianshu.io/upload_images/2641798-6b722e433ca66c5b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="截图2"></p><p><img src="http://upload-images.jianshu.io/upload_images/2641798-1b5acd6620b5b447.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="截图3"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#前言&quot;&gt;¶&lt;/a&gt;前言&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Prisma 在 2016 上线后就大火，该 APP 是利用&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;神经网络&lt;/a&gt;和&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;人工智能&lt;/a&gt;技术，为普通照片加入艺术效果的照片编辑软件。&lt;/p&gt;
&lt;p&gt;同年 Google 也发布了一篇《A LEARNED REPRESENTATION FOR ARTISTIC STYLE》论文，实现了前向运算一次为照片整合多种艺术风格的功能，并且优化了内存使用和运算速度，可以在移动设备上快速运算。&lt;/p&gt;
&lt;p&gt;最近在研究 Tensorflow 整合 iOS 过程中，发现 google 公开了论文实现的源码和训练数据，也就是说我们可以通过自己写一个前向运算图，整合其训练参数就可以快速实现类 Prisma 的应用。&lt;/p&gt;
&lt;p&gt;下面就介绍一下如何在 iPhone 上跑一个自己的**“Prisma”**。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="https://jane66.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="iOS" scheme="https://jane66.com/categories/%E5%B7%A5%E4%BD%9C/iOS/"/>
    
    
      <category term="移动端" scheme="https://jane66.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="机器学习" scheme="https://jane66.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="tensorflow" scheme="https://jane66.com/tags/tensorflow/"/>
    
  </entry>
  
</feed>
