{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/gallary/39.jpg","path":"gallary/39.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0010.jpg","path":"gallary/IMG_0010.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0027.jpg","path":"gallary/IMG_0027.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0032.jpg","path":"gallary/IMG_0032.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0099.jpg","path":"gallary/IMG_0099.jpg","modified":0,"renderable":0},{"_id":"source/gallary/100party.jpg","path":"gallary/100party.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0006.jpg","path":"gallary/IMG_0006.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/back-to-top.css","path":"css/back-to-top.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/insight.css","path":"css/insight.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/progressbar.css","path":"css/progressbar.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/search.css","path":"css/search.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/favicon144.png","path":"images/favicon144.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/thumbnail.svg","path":"images/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back-to-top.js","path":"js/back-to-top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/clipboard.js","path":"js/clipboard.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/gallary/IMG_0005.jpg","path":"gallary/IMG_0005.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0093.jpg","path":"gallary/IMG_0093.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"source/gallary/IMG_0038.jpg","path":"gallary/IMG_0038.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/images/wepay.jpg","path":"images/wepay.jpg","modified":0,"renderable":1},{"_id":"source/gallary/IMG_0004.jpg","path":"gallary/IMG_0004.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0014.jpg","path":"gallary/IMG_0014.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0028.jpg","path":"gallary/IMG_0028.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"source/gallary/IMG_0002.jpg","path":"gallary/IMG_0002.jpg","modified":0,"renderable":0},{"_id":"source/gallary/about.jpg","path":"gallary/about.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0024.jpg","path":"gallary/IMG_0024.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0098.jpg","path":"gallary/IMG_0098.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0023.jpg","path":"gallary/IMG_0023.jpg","modified":0,"renderable":0},{"_id":"source/gallary/v001.mp4","path":"gallary/v001.mp4","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0033.jpg","path":"gallary/IMG_0033.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0001.jpg","path":"gallary/IMG_0001.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0102.jpg","path":"gallary/IMG_0102.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0041.jpg","path":"gallary/IMG_0041.jpg","modified":0,"renderable":0},{"_id":"source/gallary/IMG_0003.jpg","path":"gallary/IMG_0003.jpg","modified":0,"renderable":0},{"_id":"source/gallary/73.mp4","path":"gallary/73.mp4","modified":0,"renderable":0},{"_id":"source/gallary/72.mp4","path":"gallary/72.mp4","modified":0,"renderable":0},{"_id":"source/gallary/25.mp4","path":"gallary/25.mp4","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"bbf7c2565c54bf4fb471e7e333d444e28449da95","modified":1547011864808},{"_id":"source/CNAME","hash":"4074d1c1526a3e19e5a89beded014c4f6d7ea266","modified":1546574439019},{"_id":"themes/icarus/.DS_Store","hash":"aed97db55c8482b3ab312f0a3f870061f11c857d","modified":1546829426744},{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1546580096601},{"_id":"themes/icarus/LICENSE","hash":"41f72cd544612bc4589c924c776422b800a4eff7","modified":1546831901249},{"_id":"themes/icarus/README.md","hash":"4409383fbd7422800049d6597e9b26aa8db66b66","modified":1546580096601},{"_id":"themes/icarus/_config.yml","hash":"e4d6aebce6c98bc2e43d8a25f36b3640ed16a938","modified":1547802093795},{"_id":"themes/icarus/package.json","hash":"4167e65682af257bdf8531a05730e6c42339996d","modified":1546580096627},{"_id":"source/_posts/2016ÂæÆËΩØÊé¢Êòü-Constraint-Checker.md","hash":"176b9ffee1e0f7737e3c2dac1a56d824f1975a13","modified":1546925603263},{"_id":"source/_posts/iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂.md","hash":"b9281ddb6f1659849c59bf4c8f2a9e6baae1efc2","modified":1547086685708},{"_id":"source/_posts/‰ªäÂ§©È©¨ÊùÄÈ∏°.md","hash":"905af21279387642a3a4093575ca30adae587138","modified":1547624301384},{"_id":"source/_posts/ÂÅöÂÆ¢ÊúãÂèãÂÆ∂.md","hash":"9e9d04ab3ff0f573c4f996326a0dd9fe94b125db","modified":1547184370064},{"_id":"source/_posts/ÂáèËÇ•.md","hash":"cb8277cbf230a95a34eb81412c8fe3dd7a0453cb","modified":1546941221285},{"_id":"source/_posts/ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂.md","hash":"656e8093fa115a11f395e06e96f50e09ae560387","modified":1546925584554},{"_id":"source/_posts/Âä™ÂäõÂä™Âäõ.md","hash":"b1c8ab99a83ea10dafa79a864114cc2a7d287ea1","modified":1546942140848},{"_id":"source/_posts/ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶üòä.md","hash":"630352ecc7b6d6388d64dc5e7f089355cabf7379","modified":1547011795919},{"_id":"source/_posts/Â∞èÁÜäÁå´Êù•Âà∞‰∏ñÁïå.md","hash":"73ae16eccb4a710027bb43ebb00337d115b9084c","modified":1547011520082},{"_id":"source/_posts/ÂºÄËç§.md","hash":"8c4d4ff32eb0fb0994bc6ecda0ad5ad507fccac7","modified":1546941685843},{"_id":"source/_posts/ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ.md","hash":"2f289fc65fff82c8c0d4da441fca3722b2495a38","modified":1546925568949},{"_id":"source/_posts/ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶.md","hash":"7eb75772cc47a8af5179cb88b8ddaed53489dd7a","modified":1547013105753},{"_id":"source/_posts/ÊãõË¥¢Êç£ËõãÊó•Â∏∏.md","hash":"e5ad19f9d435539fc39f652cd5d2f808d98a57f7","modified":1546939936301},{"_id":"source/_posts/Êñ∞Âπ¥Âø´‰πê.md","hash":"1ac71eabb7ca4328def8e7aa3f81922b1b95f54d","modified":1550650635887},{"_id":"source/_posts/Áã¨Ëá™ÁúãÂÆ∂.md","hash":"4921b8ec70c1b15dc5f57681e7a126fb6260ee5e","modified":1550651051365},{"_id":"source/_posts/Áî®DFSÊù•ÊéíÂ∫ß‰Ωç.md","hash":"d47bcd9af6c0b4856ce7fa23a2f6b762950600f2","modified":1546925566651},{"_id":"source/_posts/ÁôæÂ§©party.md","hash":"b96be6765acf9e7c95ec6b37bedffdf0e5984871","modified":1546997576180},{"_id":"source/about/index.md","hash":"88a7c8411e92f759989c0b0a26b69ade537cb8cd","modified":1547011009222},{"_id":"source/gallary/39.jpg","hash":"80c27a66d67aa3023b26753b1b1f0a4e54c347d3","modified":1547624042515},{"_id":"themes/icarus/languages/en.yml","hash":"5da835936340aede5bbe3158767d0d6b5802dfe8","modified":1546580096609},{"_id":"themes/icarus/languages/es.yml","hash":"8827823e5b2ce967566854c9bfebc7c69098b4ac","modified":1546580096609},{"_id":"themes/icarus/languages/fr.yml","hash":"0017f93a5d491a9c0e55911cdc35316762c5a94e","modified":1546580096610},{"_id":"themes/icarus/languages/id.yml","hash":"92d2d19a62a17b6e99f82a014309bbf6c13c9ae8","modified":1546580096610},{"_id":"themes/icarus/languages/ja.yml","hash":"6eed7771de2353d71b720c6e605cceb3f230b12e","modified":1546580096610},{"_id":"themes/icarus/languages/ko.yml","hash":"06d2bb8b66f68f780218e0ba7edffe1e57fac268","modified":1546580096610},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"bcf5bc81ca855d26bbc3b3bfabc7d84429e74b85","modified":1546580096611},{"_id":"themes/icarus/languages/ru.yml","hash":"ba8b4f7d77eb1d1e28aa1f9107bd0bbbdc4cba99","modified":1546580096611},{"_id":"themes/icarus/languages/tr.yml","hash":"eff1c0b3d5c4b328f6dd74a195ff378c898f4d29","modified":1546580096611},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"aeb71fce547cfe9e7aa8073ccc6907034aa13b2f","modified":1546580096611},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"79fab0bff625634fb6bb6cadf9c547bd36226dcf","modified":1546580096612},{"_id":"themes/icarus/layout/archive.ejs","hash":"64a81f4c6ca9517169413408d076371e8e09c63a","modified":1546580096612},{"_id":"themes/icarus/layout/categories.ejs","hash":"29d304f2b95a04fbc5e7529f9bdce9648e3545ef","modified":1546580096613},{"_id":"themes/icarus/layout/category.ejs","hash":"bda344da0e6c03899f53abc20ae2a2efab5ab243","modified":1546580096613},{"_id":"themes/icarus/layout/index.ejs","hash":"71120f41d019bf2866a5556747e5e671c8147f85","modified":1546580096618},{"_id":"themes/icarus/layout/layout.ejs","hash":"b0db86ae64507ba3db1f21b7d69eed4db32c0ce4","modified":1547105774212},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1546580096618},{"_id":"themes/icarus/layout/post.ejs","hash":"a5d1d6670aa328abff36f36e0a55e978b055f67f","modified":1546925248444},{"_id":"themes/icarus/layout/tag.ejs","hash":"1feac7aa842882757a479b8ad427f6a72fce70c4","modified":1546580096624},{"_id":"themes/icarus/layout/tags.ejs","hash":"f4479ae049be088bee16365c6b6346302e93851d","modified":1546580096624},{"_id":"themes/icarus/scripts/index.js","hash":"9203e2ba1f821d945edf20fc277f3c58d22bfd00","modified":1546580096627},{"_id":"themes/icarus/source/.DS_Store","hash":"505d0e863f8c6a0e59d1d29b5170132bab9eb50a","modified":1547104433179},{"_id":"source/gallary/IMG_0010.jpg","hash":"643f17203e5fbef8340f4a6032f25b00b7384cfa","modified":1546942009646},{"_id":"source/gallary/IMG_0027.jpg","hash":"9c00e2f413684d819f28d484457d832b17b44260","modified":1547011965551},{"_id":"source/gallary/IMG_0032.jpg","hash":"785bb6fce6d32ef9ee4249d139e0729105961e0f","modified":1547012765531},{"_id":"source/gallary/IMG_0099.jpg","hash":"4de5d5d0c7c5bdca40acc7fcab08eb09b60b87b3","modified":1550650831988},{"_id":"source/gallary/100party.jpg","hash":"c80988ba44870704165b141e201e70f67fb4e6ae","modified":1546941589952},{"_id":"source/gallary/IMG_0006.jpg","hash":"0e2e529eea72d103709ded3189e4a0a42b55b6a6","modified":1546938843761},{"_id":"themes/icarus/includes/common/ConfigGenerator.js","hash":"451397efc7808787419fa3eb6b043c0bd8bbdf30","modified":1546580096602},{"_id":"themes/icarus/includes/common/ConfigValidator.js","hash":"cd3cd12bc042b401825fd7bfd9a6434c8b14e092","modified":1546580096602},{"_id":"themes/icarus/includes/common/utils.js","hash":"c0aeaeb57a42bcc71a92da2249762f91abd83ffe","modified":1546580096602},{"_id":"themes/icarus/includes/filters/highlight.js","hash":"19a4dcd2dee7388544b57e473cfb0fc9eea9623e","modified":1546580096602},{"_id":"themes/icarus/includes/generators/categories.js","hash":"7cb370ac53a05d6b1b9203579716c0ca83d35c36","modified":1546580096602},{"_id":"themes/icarus/includes/generators/category.js","hash":"313e170e55d74526c4e1be7181ef7a21439147c9","modified":1546580096603},{"_id":"themes/icarus/includes/generators/insight.js","hash":"c4b981443927b87cc14a3a583029e13f819d6d71","modified":1546580096603},{"_id":"themes/icarus/includes/generators/tags.js","hash":"8195322c208706427a1cf56361669dca4d86f6f1","modified":1546580096603},{"_id":"themes/icarus/includes/helpers/cdn.js","hash":"7d34ea6400cb3611c374c135304abcb65ef291b7","modified":1546580096603},{"_id":"themes/icarus/includes/helpers/config.js","hash":"173e02987e7a7d5df1e686f6ee4edd8cf494bdd3","modified":1546580096604},{"_id":"themes/icarus/includes/helpers/layout.js","hash":"afdf5e9704cfc087526b4a0403fe7eb04f22190e","modified":1546580096604},{"_id":"themes/icarus/includes/helpers/override.js","hash":"726cf99612fd060753d9da08db2776aec1802e20","modified":1546580096604},{"_id":"themes/icarus/includes/helpers/page.js","hash":"25aeed6449ca381661cec528fe96bbb993026ca9","modified":1546580096604},{"_id":"themes/icarus/includes/helpers/site.js","hash":"f154ddb0dac79fd28ced2b518f8052b42555d0c9","modified":1546580096605},{"_id":"themes/icarus/includes/specs/article.spec.js","hash":"a805c1a6f03ccb07d73512aef40d38541ddbb0eb","modified":1546580096605},{"_id":"themes/icarus/includes/specs/comment.spec.js","hash":"02af67eb87482028b223299b20a129756b1c122b","modified":1546580096605},{"_id":"themes/icarus/includes/specs/config.spec.js","hash":"7a9bac384a73cf9f39173fdb2dfc2813784d8891","modified":1546580096605},{"_id":"themes/icarus/includes/specs/donate.spec.js","hash":"639b405c9e5dac04c2dc168c2754e50a5c13d197","modified":1546580096606},{"_id":"themes/icarus/includes/specs/footer.spec.js","hash":"49fabe9c03f3124f0253fa1ee3e69328373ad117","modified":1546580096606},{"_id":"themes/icarus/includes/specs/icon_link.spec.js","hash":"f2a83ac5ccb74fc6f3dfbd25430e142297d8491c","modified":1546580096606},{"_id":"themes/icarus/includes/specs/meta.spec.js","hash":"70abe77d3664176ec977316522014ce7e0aa439d","modified":1546580096606},{"_id":"themes/icarus/includes/specs/navbar.spec.js","hash":"67ebd05fb378439a094a7906f4ea04fbedd8c1b5","modified":1546580096607},{"_id":"themes/icarus/includes/specs/plugins.spec.js","hash":"67212011baaa0590847ca689e0d31146054ead16","modified":1546580096607},{"_id":"themes/icarus/includes/specs/providers.spec.js","hash":"e29473155a35f391fbc53349bdc256cb7600855e","modified":1546580096607},{"_id":"themes/icarus/includes/specs/search.spec.js","hash":"d981ad203a2002c35d710d33e304f9e99f31cab0","modified":1546580096607},{"_id":"themes/icarus/includes/specs/share.spec.js","hash":"6c04cccec13a656189ab2d917d69d059027d0343","modified":1546580096607},{"_id":"themes/icarus/includes/specs/sidebar.spec.js","hash":"bd500be763486918894e731ce14bc9c4047fb76d","modified":1546580096608},{"_id":"themes/icarus/includes/specs/widgets.spec.js","hash":"b58dc5402d45a3c78111e8f4cf0185c6ce087361","modified":1546580096608},{"_id":"themes/icarus/includes/tasks/check_config.js","hash":"ce7626d643737c90dee6b75435ccdec26b89dacf","modified":1546580096608},{"_id":"themes/icarus/includes/tasks/check_deps.js","hash":"435d02d78a0201446934fa85247fa9055e5c7c95","modified":1547086893953},{"_id":"themes/icarus/includes/tasks/welcome.js","hash":"00d1ef8c9609552b82e9a5140b838a9057c59508","modified":1546580096609},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"9ccc7ec354b968e60bdcfcd1dba451d38de61f12","modified":1546580096613},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"b5fff46e453d58baa20028a47fd85923494bb85c","modified":1546580096613},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"b38ea86a1cae48f671501af74d7f109f63fb3d72","modified":1546580096614},{"_id":"themes/icarus/layout/comment/gitalk.ejs","hash":"ef01396e64ab4f6e62155f0b357bcd903138d611","modified":1546580096614},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"a6211d122c434cacb5d6d65051b92ed98abab9f5","modified":1546855723068},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1546580096614},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1546580096615},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"9ed89b4b40bdf4ae2212e3d197cd7834b59e2eff","modified":1546580096615},{"_id":"themes/icarus/layout/common/article.ejs","hash":"ca9ad568362bd7bd3c2ae84a524c4a2e00ba8e03","modified":1546580096615},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"8eb9efae8d7789a7af5776da0d515416560e71db","modified":1546917646971},{"_id":"themes/icarus/layout/common/head.ejs","hash":"bd72ffd5942bb2fd18319d551bbaa59647e33f3c","modified":1546580096616},{"_id":"themes/icarus/layout/common/navbar.ejs","hash":"5082ea45df0f79f955143177287d92bcf3832fcf","modified":1546580096616},{"_id":"themes/icarus/layout/common/paginator.ejs","hash":"7837d80b27f166161b3deeffb571680025c7d723","modified":1546580096616},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"5414d6bfbf88efa7e72ccf7e44a79d0378ddeb77","modified":1546580096616},{"_id":"themes/icarus/layout/common/widget.ejs","hash":"5417af9f208d2fb5aaeb96031caa261e9683557c","modified":1546580096617},{"_id":"themes/icarus/layout/donate/alipay.ejs","hash":"3290058879973e403a05472a0fe2ac0219d5b961","modified":1546580096617},{"_id":"themes/icarus/layout/donate/patreon.ejs","hash":"8e52a9c28ffaf4b0b786a20977b848c5f60f2274","modified":1546580096617},{"_id":"themes/icarus/layout/donate/paypal.ejs","hash":"3975dee39f9378975b9c10f37d118ad7cb6f5bf6","modified":1546580096618},{"_id":"themes/icarus/layout/donate/wechat.ejs","hash":"051b873e1fc28c1d7c2d6443991b6a2f43813e6b","modified":1546580096618},{"_id":"themes/icarus/layout/plugin/animejs.ejs","hash":"198062ef863c96aa4d6a8225d575afcb60dfb1d1","modified":1546580096619},{"_id":"themes/icarus/layout/plugin/back-to-top.ejs","hash":"79d1118a3d3ebc521ffce452b986b504f0e7d6b7","modified":1546580096619},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"eb66e313ad43ec4424b2d75bae94e5c8a7568428","modified":1546580096620},{"_id":"themes/icarus/layout/plugin/clipboard.ejs","hash":"8662ed9c211f3993b93eedcf5e41c2a1ddbede57","modified":1546580096620},{"_id":"themes/icarus/layout/plugin/gallery.ejs","hash":"ad68fafd923747d6b7c1b5873d00989d1639678c","modified":1546580096620},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"282cecb28ac458b71b56cf429c72ffac0f820199","modified":1546580096620},{"_id":"themes/icarus/layout/plugin/hotjar.ejs","hash":"2b97737d802984750a7b4461fcf68818a57a2439","modified":1546580096621},{"_id":"themes/icarus/layout/plugin/mathjax.ejs","hash":"ec0d09220cf9dcbeb07b5ad900a36214924e7d0c","modified":1546580096621},{"_id":"themes/icarus/layout/plugin/outdated-browser.ejs","hash":"fe051093893c64c8575bcc67dc1c146d409e8e80","modified":1546580096621},{"_id":"themes/icarus/layout/plugin/progressbar.ejs","hash":"e594ed6705bccbef27f49d84b6153f6443efbecd","modified":1546580096621},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"850aa91778100d693a52b10eaa8586c8e3215ee6","modified":1546580096622},{"_id":"themes/icarus/layout/search/google-cse.ejs","hash":"4b881a99325a6a0cebf97ac53e09d8fc67f87d29","modified":1546580096622},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"9a27db2a007582ceee7ca4b1eebddbd456893568","modified":1546580096623},{"_id":"themes/icarus/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1546580096623},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"04cb247d8c83ca7c5b52f3b11bb3ac155b1bc3ab","modified":1546580096623},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"f14c8084b7ee16a091f0bd2ae9039e3bfff7e7b7","modified":1546580096623},{"_id":"themes/icarus/layout/share/sharejs.ejs","hash":"65d08316cc479910ea4f526cd1c299d0104daf7f","modified":1546580096624},{"_id":"themes/icarus/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1546580096624},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"eb738a2ac2935ce7a542964d90088613b281dd15","modified":1546580096625},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"c2a9f2211a21a168c54b0563cdfd58bd25fa39fe","modified":1546580096625},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"2b707fd65c94b00d8b4c6755fbc6c19709f3d49a","modified":1546580096625},{"_id":"themes/icarus/layout/widget/profile.ejs","hash":"eb47b4c5fbb17fdbaf22d57e520e514e1f25e4c2","modified":1547100350226},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"2166f3190e47bf4746775b5d16654564a88c2041","modified":1546580096626},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"8c5b8020ca776cc3ebbc7b723915f3173efc28d4","modified":1546580096626},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"d32e7c56e8e2074da16d9141f9a597841d28d07d","modified":1546580096626},{"_id":"themes/icarus/layout/widget/toc.ejs","hash":"bdc6f22602cdabe7c740f1818e0681ff8508fb64","modified":1546580096626},{"_id":"themes/icarus/source/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1546580096627},{"_id":"themes/icarus/source/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1546580096627},{"_id":"themes/icarus/source/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1546580096627},{"_id":"themes/icarus/source/css/search.css","hash":"c1cb306e075386517ac15bf4ef37c647d37ec6b5","modified":1546580096628},{"_id":"themes/icarus/source/css/style.styl","hash":"d5523162591a97cbff766d21c9be9888ceda98b2","modified":1546580096628},{"_id":"themes/icarus/source/images/.DS_Store","hash":"aba2f745cda9a4545ca8c3a7ee0447b9be1960e2","modified":1546856376336},{"_id":"themes/icarus/source/images/favicon.png","hash":"071021a5336ecd08bd20280d5d868cb6fab23d73","modified":1546592059517},{"_id":"themes/icarus/source/images/favicon144.png","hash":"e74244a83c1aade9b6f8417d815f5f4d8afbbe7f","modified":1547105513566},{"_id":"themes/icarus/source/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1546580096629},{"_id":"themes/icarus/source/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1546580096629},{"_id":"themes/icarus/source/js/back-to-top.js","hash":"899f85171fece905f3f4c490b05f0d94a98dbdae","modified":1546580096630},{"_id":"themes/icarus/source/js/clipboard.js","hash":"6fdd602268727744b6b2c8ad79d684aab3cffda5","modified":1546580096630},{"_id":"themes/icarus/source/js/gallery.js","hash":"88b23abfc3b519413be54533ed0f39e0c68fcdd1","modified":1546580096630},{"_id":"themes/icarus/source/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1546580096630},{"_id":"themes/icarus/source/js/main.js","hash":"3357a1798a994afad0a849a679ca2ed6e0ce2424","modified":1546580096631},{"_id":"source/gallary/IMG_0005.jpg","hash":"4bf54c0253a9c6abf096f573e3917e4ec4859c7f","modified":1546936983258},{"_id":"source/gallary/IMG_0093.jpg","hash":"0433342c4133ef3e43796b680a8346a1b2b92f9c","modified":1550650179340},{"_id":"themes/icarus/source/images/alipay.jpg","hash":"e58dc1d5077d644a5d6a03a9b6c206c23249d116","modified":1546856321811},{"_id":"themes/icarus/source/images/avatar.png","hash":"7b23b428747a3e573f721ec24f43ce7038fe99d1","modified":1546832402237},{"_id":"source/gallary/IMG_0038.jpg","hash":"efe694149e66838744ed74f648fcb2c192c64ce4","modified":1547184112400},{"_id":"themes/icarus/source/images/wepay.jpg","hash":"52b6ce11793972cac8e39b41de514a57a358a9c7","modified":1546856321893},{"_id":"source/gallary/IMG_0004.jpg","hash":"dc48de8f5c8a3029742eedafc44c4ed8105cf338","modified":1546936983163},{"_id":"source/gallary/IMG_0014.jpg","hash":"42c104c6aa18f330dcf6bad44fbed9ecdd774cdf","modified":1546940729067},{"_id":"source/gallary/IMG_0028.jpg","hash":"a69fc54982a1cdb4d1e00e376060da07fc0583a5","modified":1547011511909},{"_id":"themes/icarus/source/images/logo.png","hash":"302a48113e4fc521c40492ffc09ea4db699b44ca","modified":1546844970885},{"_id":"source/gallary/IMG_0002.jpg","hash":"d0513e6be76c3994e211bfb31823bc007d1b6127","modified":1546940184261},{"_id":"source/gallary/about.jpg","hash":"5a7ff761957dd3cd56c0d9151a27d1df74e4e905","modified":1547010238811},{"_id":"source/gallary/IMG_0024.jpg","hash":"d43d38fca131ae992682b3688357eea424e5d253","modified":1546942009766},{"_id":"source/gallary/IMG_0098.jpg","hash":"7283d4719aed1a5e84d6f564c1dd49ddb74a85b2","modified":1550650561714},{"_id":"source/gallary/IMG_0023.jpg","hash":"96c1608de93a22d40390657e68c678f654e6c7d3","modified":1546940729118},{"_id":"source/gallary/v001.mp4","hash":"a9e0f1e9a70c7030040e1faf55009eb0aeeab011","modified":1546940961874},{"_id":"source/gallary/IMG_0033.jpg","hash":"e23ce7388f74a24d73230beec58a192c9e3f6fc9","modified":1547012765671},{"_id":"source/gallary/IMG_0001.jpg","hash":"4da253d1d6cb47dcbca537b4e1bb7930257f4c72","modified":1546939694185},{"_id":"source/gallary/IMG_0102.jpg","hash":"4ed9a393ca19905ac60a1ff8c59c52d8e60af6d7","modified":1550650799786},{"_id":"source/gallary/IMG_0041.jpg","hash":"d8dfdaac9d9c004c7bfb6b021ac6fb5bfa2628fe","modified":1547184112456},{"_id":"source/gallary/IMG_0003.jpg","hash":"a23d1630e521c2595600feb5cf44fcfa8e7bf00d","modified":1546940178866},{"_id":"source/gallary/73.mp4","hash":"6e1f11444de0228eb1d2dfa4b6d556e88429c85e","modified":1547624085837},{"_id":"source/gallary/72.mp4","hash":"968cc994157d7f9f6aa0014adcf84d3785fc15fc","modified":1547624085717},{"_id":"source/gallary/25.mp4","hash":"3810fe521f401eac0d4461b3981cd3b573b2bf0a","modified":1547184165242},{"_id":"public/atom.xml","hash":"2e4fdc414e9d5f76c884d4ceafb6659a774c2e69","modified":1550651058424},{"_id":"public/content.json","hash":"a9ac305a01519f87ddd1653977c5aaeed8569413","modified":1550651058426},{"_id":"public/about/index.html","hash":"29bcf1d99996f81dfb0e3f30fc80bfb14a601a68","modified":1550651061537},{"_id":"public/2019/02/04/Êñ∞Âπ¥Âø´‰πê/index.html","hash":"0b0efd0a39637c7e5e6b21fa40fde1ec924622ed","modified":1550651061537},{"_id":"public/2019/01/16/‰ªäÂ§©È©¨ÊùÄÈ∏°/index.html","hash":"7212c976cc78f25251ef5e28cf8090cef026854d","modified":1550651061620},{"_id":"public/2019/01/10/ÂÅöÂÆ¢ÊúãÂèãÂÆ∂/index.html","hash":"df7df4fd9aa599cbe584e4be8382afbec2f2a5d7","modified":1550651061621},{"_id":"public/2019/01/08/ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶/index.html","hash":"a399aaa257b771109ad25fe69359fbea0d409e9e","modified":1550651061621},{"_id":"public/2019/01/06/ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶üòä/index.html","hash":"e730c1dd108f310b1d8fdcbdbe6063760702e28d","modified":1550651061621},{"_id":"public/2019/01/02/Âä™ÂäõÂä™Âäõ/index.html","hash":"b4aa4ec7b39d677fa3e38396cd331967fa26c4df","modified":1550651061621},{"_id":"public/2018/11/08/ÂáèËÇ•/index.html","hash":"594bb5f1e4e93b2f763fef46d5509671571b088f","modified":1550651061621},{"_id":"public/2018/11/08/ÊãõË¥¢Êç£ËõãÊó•Â∏∏/index.html","hash":"c1a3b7b983dfa4c3a25253d5c76f3802b3d80883","modified":1550651061621},{"_id":"public/2018/10/01/ÂºÄËç§/index.html","hash":"206ac63ff1cef17fe1ca23a6b64f05996451292b","modified":1550651061621},{"_id":"public/2018/09/21/ÁôæÂ§©party/index.html","hash":"dda5b40f0991831ef344e7252a1f2cc76a9ce97d","modified":1550651061622},{"_id":"public/2018/08/29/ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ/index.html","hash":"8afbd406ab7c1fceea78630de92eab8dc9c24321","modified":1550651061622},{"_id":"public/2018/06/21/Â∞èÁÜäÁå´Êù•Âà∞‰∏ñÁïå/index.html","hash":"2e3e77cc2cfd1067612394f5a9fccc8ebee2b13e","modified":1550651061622},{"_id":"public/2017/04/28/iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂/index.html","hash":"a6f4f20c40b9127f08973b7cf8aa7e0db7cd8841","modified":1550651061622},{"_id":"public/2016/08/22/ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂/index.html","hash":"0f907f717ed97eb95cc7eb636aa8287cefb721fa","modified":1550651061622},{"_id":"public/2016/08/04/2016ÂæÆËΩØÊé¢Êòü-Constraint-Checker/index.html","hash":"66aa887c52f534cf1bc67b0f78e12466a713c5b4","modified":1550651061622},{"_id":"public/2016/08/02/Áî®DFSÊù•ÊéíÂ∫ß‰Ωç/index.html","hash":"50da74bb15faf52f41d3daab7b0756655a88c4dc","modified":1550651061622},{"_id":"public/archives/index.html","hash":"5361a5e1093b8fb48795f6a0e4ec3880f6d731f1","modified":1550651061622},{"_id":"public/archives/page/2/index.html","hash":"ea8bf079ab4a9e2aee0010b41ef0c857d93d6593","modified":1550651061622},{"_id":"public/archives/2016/index.html","hash":"38e4b2d3c328bc3d2cf8ad0eb7cc6458e1661be4","modified":1550651061622},{"_id":"public/archives/2016/08/index.html","hash":"8f33dbcfe5415cdd14c6b200d695bd00b6540058","modified":1550651061623},{"_id":"public/archives/2017/index.html","hash":"076b66f5068385d0a71da3e61974fb5c202b035b","modified":1550651061623},{"_id":"public/archives/2017/04/index.html","hash":"1c7e215b776bb4ab4d617b97ef3bf2924213927b","modified":1550651061623},{"_id":"public/archives/2018/index.html","hash":"ed6fb268a92193ebd4e1062acc15fb87e1eec992","modified":1550651061623},{"_id":"public/archives/2018/06/index.html","hash":"83c81fc0101f5619a1516dc7150c92c60658a209","modified":1550651061623},{"_id":"public/archives/2018/08/index.html","hash":"11798b3b7251bf90e29f0debd082f43cf0f8a75f","modified":1550651061623},{"_id":"public/archives/2018/09/index.html","hash":"8a1eaccfe21a973ceb210306f394025e891a3abe","modified":1550651061623},{"_id":"public/archives/2018/10/index.html","hash":"df2c153adc59b679c43f606017863514cbc4118c","modified":1550651061623},{"_id":"public/archives/2018/11/index.html","hash":"47623bb3f5f52bcb89e808281c44a265e41a2ee4","modified":1550651061623},{"_id":"public/archives/2019/index.html","hash":"087a7737f42aa80c1f5cc01d535153359959a62d","modified":1550651061623},{"_id":"public/archives/2019/01/index.html","hash":"7342b6a06844e609bc65e3d437a2f8cdee290703","modified":1550651061623},{"_id":"public/archives/2019/02/index.html","hash":"f7c020ac54e9a554c4b412bed05653d0fc5d6c73","modified":1550651061623},{"_id":"public/categories/ÁîüÊ¥ª/index.html","hash":"5e8fbd4d118173f31b3a3a588cfa9e6af6fbd658","modified":1550651061624},{"_id":"public/categories/ÁîüÊ¥ª/page/2/index.html","hash":"b8374bab001eeec5bc6ad3c65ce2dcc1135bca69","modified":1550651061624},{"_id":"public/categories/ÁîüÊ¥ª/Â∞èÁÜäÁå´/index.html","hash":"a83ed9286b5820ddb5dcc854e61398a9602c75a0","modified":1550651061624},{"_id":"public/categories/ÁîüÊ¥ª/ÊãõË¥¢/index.html","hash":"c3da5dd8615ccd2d34ab7272625860d0460a8023","modified":1550651061624},{"_id":"public/categories/Â∑•‰Ωú/index.html","hash":"57e0ef4f9cd7f186313c473cd55e354488cc9263","modified":1550651061624},{"_id":"public/categories/Â∑•‰Ωú/ACM/index.html","hash":"c191111546ac3c20f65859dfad7647e33a791e03","modified":1550651061624},{"_id":"public/categories/Â∑•‰Ωú/iOS/index.html","hash":"df3a7b611f2044cb31efbcb43fc919dc24f8d046","modified":1550651061624},{"_id":"public/categories/Â∑•‰Ωú/Â∞èÁ®ãÂ∫è/index.html","hash":"b486cbe1583aaf6c056fa6e3d6389cb9e03f51d6","modified":1550651061624},{"_id":"public/index.html","hash":"6c841fcf1404bcd4ff7acb11095086487eda1eb0","modified":1550651061624},{"_id":"public/page/2/index.html","hash":"74f671ab2e3678581d6b009f11a23bc5084b1ce6","modified":1550651061625},{"_id":"public/page/3/index.html","hash":"a7f14ce28a310ccd1e48c56252d6525b2e56ee4a","modified":1550651061625},{"_id":"public/page/4/index.html","hash":"03db9d560d664559d08ffc5c66f32749f404ac31","modified":1550651061625},{"_id":"public/tags/Â∞èÁÜäÁå´/index.html","hash":"e27a00f18ff676f5d5428bd9748dc91a9224b0e2","modified":1550651061625},{"_id":"public/tags/ÊãõË¥¢/index.html","hash":"403daa5c2ac4d68ab5dba42e7ca5001d84f66bd9","modified":1550651061625},{"_id":"public/tags/Êñ∞Áîü/index.html","hash":"6e2ce7598fd684a200a62cc3125ae5227ab3b1c0","modified":1550651061625},{"_id":"public/tags/ÁÆóÊ≥ï/index.html","hash":"9db38d9e507fa06fe1929c3ce6f790373a269686","modified":1550651061625},{"_id":"public/tags/ÁßªÂä®Á´Ø/index.html","hash":"ce6fa40f8d2cf7189760d6dad08013080f8fc66e","modified":1550651061626},{"_id":"public/tags/Êú∫Âô®Â≠¶‰π†/index.html","hash":"36fe4c37f489e2545489c314a5b5e4ba51e82b68","modified":1550651061626},{"_id":"public/tags/tensorflow/index.html","hash":"69ed83fb3e32334ccb92b5254198cf21402f31ac","modified":1550651061626},{"_id":"public/tags/Â∞èÁ®ãÂ∫è/index.html","hash":"894042a559e25a7148e2870a9e6d46765656d334","modified":1550651061626},{"_id":"public/tags/html/index.html","hash":"2d24ffc86559e4dcc4a4a387761ccb0623c87153","modified":1550651061626},{"_id":"public/tags/ÂâçÁ´Ø/index.html","hash":"d5e7393c15a732d517190651f3b33f4bf60efcaf","modified":1550651061626},{"_id":"public/tags/GCJ/index.html","hash":"869fe1729d8a7d606944dced7df7eedf0bfacd8b","modified":1550651061626},{"_id":"public/categories/index.html","hash":"a6ff083ffb20e7e170c61d8935906e1d6396b60b","modified":1550651061626},{"_id":"public/tags/index.html","hash":"bb588c2e2060296d8ea6ddc123a743016e433d17","modified":1550651061626},{"_id":"public/2019/02/06/Áã¨Ëá™ÁúãÂÆ∂/index.html","hash":"dd9f23887dd22d52cd81b4b9d61703f617ef6c8d","modified":1550651061632},{"_id":"public/CNAME","hash":"4074d1c1526a3e19e5a89beded014c4f6d7ea266","modified":1550651061636},{"_id":"public/gallary/39.jpg","hash":"80c27a66d67aa3023b26753b1b1f0a4e54c347d3","modified":1550651061636},{"_id":"public/images/favicon.png","hash":"071021a5336ecd08bd20280d5d868cb6fab23d73","modified":1550651061636},{"_id":"public/images/favicon144.png","hash":"e74244a83c1aade9b6f8417d815f5f4d8afbbe7f","modified":1550651061636},{"_id":"public/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1550651061636},{"_id":"public/gallary/IMG_0010.jpg","hash":"643f17203e5fbef8340f4a6032f25b00b7384cfa","modified":1550651061649},{"_id":"public/gallary/IMG_0027.jpg","hash":"9c00e2f413684d819f28d484457d832b17b44260","modified":1550651061649},{"_id":"public/images/alipay.jpg","hash":"e58dc1d5077d644a5d6a03a9b6c206c23249d116","modified":1550651061650},{"_id":"public/images/avatar.png","hash":"7b23b428747a3e573f721ec24f43ce7038fe99d1","modified":1550651061650},{"_id":"public/gallary/IMG_0032.jpg","hash":"785bb6fce6d32ef9ee4249d139e0729105961e0f","modified":1550651061650},{"_id":"public/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1550651061866},{"_id":"public/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1550651061866},{"_id":"public/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1550651061866},{"_id":"public/css/search.css","hash":"c1cb306e075386517ac15bf4ef37c647d37ec6b5","modified":1550651061867},{"_id":"public/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1550651061867},{"_id":"public/js/clipboard.js","hash":"6fdd602268727744b6b2c8ad79d684aab3cffda5","modified":1550651061867},{"_id":"public/js/back-to-top.js","hash":"899f85171fece905f3f4c490b05f0d94a98dbdae","modified":1550651061867},{"_id":"public/js/gallery.js","hash":"88b23abfc3b519413be54533ed0f39e0c68fcdd1","modified":1550651061867},{"_id":"public/js/main.js","hash":"3357a1798a994afad0a849a679ca2ed6e0ce2424","modified":1550651061867},{"_id":"public/gallary/IMG_0099.jpg","hash":"4de5d5d0c7c5bdca40acc7fcab08eb09b60b87b3","modified":1550651061867},{"_id":"public/gallary/IMG_0093.jpg","hash":"0433342c4133ef3e43796b680a8346a1b2b92f9c","modified":1550651061867},{"_id":"public/images/wepay.jpg","hash":"52b6ce11793972cac8e39b41de514a57a358a9c7","modified":1550651061867},{"_id":"public/css/style.css","hash":"3a791b01be3b330e533ced2b8022a24d640706f6","modified":1550651061905},{"_id":"public/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1550651061905},{"_id":"public/gallary/IMG_0005.jpg","hash":"4bf54c0253a9c6abf096f573e3917e4ec4859c7f","modified":1550651061906},{"_id":"public/gallary/100party.jpg","hash":"c80988ba44870704165b141e201e70f67fb4e6ae","modified":1550651061914},{"_id":"public/gallary/IMG_0006.jpg","hash":"0e2e529eea72d103709ded3189e4a0a42b55b6a6","modified":1550651061914},{"_id":"public/gallary/IMG_0028.jpg","hash":"a69fc54982a1cdb4d1e00e376060da07fc0583a5","modified":1550651061915},{"_id":"public/images/logo.png","hash":"302a48113e4fc521c40492ffc09ea4db699b44ca","modified":1550651061915},{"_id":"public/gallary/IMG_0014.jpg","hash":"42c104c6aa18f330dcf6bad44fbed9ecdd774cdf","modified":1550651061925},{"_id":"public/gallary/IMG_0004.jpg","hash":"dc48de8f5c8a3029742eedafc44c4ed8105cf338","modified":1550651061925},{"_id":"public/gallary/IMG_0038.jpg","hash":"efe694149e66838744ed74f648fcb2c192c64ce4","modified":1550651061950},{"_id":"public/gallary/IMG_0002.jpg","hash":"d0513e6be76c3994e211bfb31823bc007d1b6127","modified":1550651061950},{"_id":"public/gallary/IMG_0024.jpg","hash":"d43d38fca131ae992682b3688357eea424e5d253","modified":1550651061950},{"_id":"public/gallary/about.jpg","hash":"5a7ff761957dd3cd56c0d9151a27d1df74e4e905","modified":1550651061955},{"_id":"public/gallary/IMG_0098.jpg","hash":"7283d4719aed1a5e84d6f564c1dd49ddb74a85b2","modified":1550651061961},{"_id":"public/gallary/IMG_0023.jpg","hash":"96c1608de93a22d40390657e68c678f654e6c7d3","modified":1550651061975},{"_id":"public/gallary/v001.mp4","hash":"a9e0f1e9a70c7030040e1faf55009eb0aeeab011","modified":1550651061980},{"_id":"public/gallary/IMG_0033.jpg","hash":"e23ce7388f74a24d73230beec58a192c9e3f6fc9","modified":1550651061992},{"_id":"public/gallary/IMG_0102.jpg","hash":"4ed9a393ca19905ac60a1ff8c59c52d8e60af6d7","modified":1550651062000},{"_id":"public/gallary/IMG_0001.jpg","hash":"4da253d1d6cb47dcbca537b4e1bb7930257f4c72","modified":1550651062000},{"_id":"public/gallary/IMG_0041.jpg","hash":"d8dfdaac9d9c004c7bfb6b021ac6fb5bfa2628fe","modified":1550651062001},{"_id":"public/gallary/IMG_0003.jpg","hash":"a23d1630e521c2595600feb5cf44fcfa8e7bf00d","modified":1550651062023},{"_id":"public/gallary/72.mp4","hash":"968cc994157d7f9f6aa0014adcf84d3785fc15fc","modified":1550651062032},{"_id":"public/gallary/73.mp4","hash":"6e1f11444de0228eb1d2dfa4b6d556e88429c85e","modified":1550651062042},{"_id":"public/gallary/25.mp4","hash":"3810fe521f401eac0d4461b3981cd3b573b2bf0a","modified":1550651062053}],"Category":[{"name":"ÁîüÊ¥ª","_id":"cjscxlphn0003hqox3ejahvub"},{"name":"Â∞èÁÜäÁå´","parent":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpi3000khqoxzah5ixey"},{"name":"ÊãõË¥¢","parent":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpic001ehqoxk3de39t5"},{"name":"Â∑•‰Ωú","_id":"cjscxlpj2001xhqoxyp595jub"},{"name":"ACM","parent":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpj90026hqoxn101j8yx"},{"name":"iOS","parent":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpja002bhqox7nwust5u"},{"name":"Â∞èÁ®ãÂ∫è","parent":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpjc002ihqoxyc8luzxp"}],"Data":[],"Page":[{"title":"","date":"2019-01-08T06:27:18.000Z","thumbnail":"/gallary/about.jpg","_content":"\n# <center>Ê¨¢ËøéÊù•Âà∞Â∞èÁÜäÁå´ÁöÑËä±Âõ≠ üëè</center>\n\n<center>Ëøô‰∏™ÊòØ‰∏Ä‰∏™ÊúâÊÉÖÊÄÄ‰∏éÁà±ÂøÉÁöÑ\b‰πêÂõ≠üè°\b\b\b\b\b\b\bÔºåËÆ∞ÂΩïÂ∞èÁÜäÁå´üêºÂíåÊãõË¥¢üê±ÁîüÊ¥ªÁöÑÁÇπÁÇπÊª¥Êª¥„ÄÇ</center>\n<center>Â§ßÂÆ∂Êúâ‰ªÄ‰πàÂª∫ËÆÆÊàñÂ∏ÆÂä©ÔºåÂèØ‰ª•ÈÄöËøá‰∏ãÊñπ\bÂ§öÁßçÊñπÂºèüëáËÅîÁ≥ªÊàë</center>\n","source":"about/index.md","raw":"---\ntitle:\ndate: 2019-01-08 14:27:18\nthumbnail: /gallary/about.jpg\n---\n\n# <center>Ê¨¢ËøéÊù•Âà∞Â∞èÁÜäÁå´ÁöÑËä±Âõ≠ üëè</center>\n\n<center>Ëøô‰∏™ÊòØ‰∏Ä‰∏™ÊúâÊÉÖÊÄÄ‰∏éÁà±ÂøÉÁöÑ\b‰πêÂõ≠üè°\b\b\b\b\b\b\bÔºåËÆ∞ÂΩïÂ∞èÁÜäÁå´üêºÂíåÊãõË¥¢üê±ÁîüÊ¥ªÁöÑÁÇπÁÇπÊª¥Êª¥„ÄÇ</center>\n<center>Â§ßÂÆ∂Êúâ‰ªÄ‰πàÂª∫ËÆÆÊàñÂ∏ÆÂä©ÔºåÂèØ‰ª•ÈÄöËøá‰∏ãÊñπ\bÂ§öÁßçÊñπÂºèüëáËÅîÁ≥ªÊàë</center>\n","updated":"2019-01-09T05:16:49.222Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjscxlphk0001hqoxv2jmk9mq","content":"<h1><center>Ê¨¢ËøéÊù•Âà∞Â∞èÁÜäÁå´ÁöÑËä±Âõ≠ üëè</center></h1>\n<center>Ëøô‰∏™ÊòØ‰∏Ä‰∏™ÊúâÊÉÖÊÄÄ‰∏éÁà±ÂøÉÁöÑ\b‰πêÂõ≠üè°\b\b\b\b\b\b\bÔºåËÆ∞ÂΩïÂ∞èÁÜäÁå´üêºÂíåÊãõË¥¢üê±ÁîüÊ¥ªÁöÑÁÇπÁÇπÊª¥Êª¥„ÄÇ</center>\n<center>Â§ßÂÆ∂Êúâ‰ªÄ‰πàÂª∫ËÆÆÊàñÂ∏ÆÂä©ÔºåÂèØ‰ª•ÈÄöËøá‰∏ãÊñπ\bÂ§öÁßçÊñπÂºèüëáËÅîÁ≥ªÊàë</center>\n","site":{"data":{}},"excerpt":"","more":"<h1><center>Ê¨¢ËøéÊù•Âà∞Â∞èÁÜäÁå´ÁöÑËä±Âõ≠ üëè</center></h1>\n<center>Ëøô‰∏™ÊòØ‰∏Ä‰∏™ÊúâÊÉÖÊÄÄ‰∏éÁà±ÂøÉÁöÑ\b‰πêÂõ≠üè°\b\b\b\b\b\b\bÔºåËÆ∞ÂΩïÂ∞èÁÜäÁå´üêºÂíåÊãõË¥¢üê±ÁîüÊ¥ªÁöÑÁÇπÁÇπÊª¥Êª¥„ÄÇ</center>\n<center>Â§ßÂÆ∂Êúâ‰ªÄ‰πàÂª∫ËÆÆÊàñÂ∏ÆÂä©ÔºåÂèØ‰ª•ÈÄöËøá‰∏ãÊñπ\bÂ§öÁßçÊñπÂºèüëáËÅîÁ≥ªÊàë</center>\n"}],"Post":[{"title":"‰ªäÂ§©È©¨ÊùÄÈ∏°","date":"2019-01-16T07:33:26.000Z","thumbnail":"/gallary/39.jpg","_content":"\nÊú¨ÂÆùÂÆù‰ªäÂ§©‰ΩìÈ™å MassageÔºåÂ•ΩËàíÊúçÂïä üòÑ„ÄÇ\n\n<!-- more -->\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/72.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n\nÈòøÂß®‰Ω†ËΩªÁÇπ üòÇ„ÄÇ\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/73.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","source":"_posts/‰ªäÂ§©È©¨ÊùÄÈ∏°.md","raw":"---\ntitle: ‰ªäÂ§©È©¨ÊùÄÈ∏°\ndate: 2019-01-16 15:33:26\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/39.jpg\n---\n\nÊú¨ÂÆùÂÆù‰ªäÂ§©‰ΩìÈ™å MassageÔºåÂ•ΩËàíÊúçÂïä üòÑ„ÄÇ\n\n<!-- more -->\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/72.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n\nÈòøÂß®‰Ω†ËΩªÁÇπ üòÇ„ÄÇ\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/73.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","slug":"‰ªäÂ§©È©¨ÊùÄÈ∏°","published":1,"updated":"2019-01-16T07:38:21.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphf0000hqoxx558ulqv","content":"<p>Êú¨ÂÆùÂÆù‰ªäÂ§©‰ΩìÈ™å MassageÔºåÂ•ΩËàíÊúçÂïä üòÑ„ÄÇ</p>\n<a id=\"more\"></a>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/72.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n<p>ÈòøÂß®‰Ω†ËΩªÁÇπ üòÇ„ÄÇ</p>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/73.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n","site":{"data":{}},"excerpt":"<p>Êú¨ÂÆùÂÆù‰ªäÂ§©‰ΩìÈ™å MassageÔºåÂ•ΩËàíÊúçÂïä üòÑ„ÄÇ</p>","more":"<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/72.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n<p>ÈòøÂß®‰Ω†ËΩªÁÇπ üòÇ„ÄÇ</p>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/73.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>"},{"title":"ÂÅöÂÆ¢ÊúãÂèãÂÆ∂","date":"2019-01-10T05:20:01.000Z","thumbnail":"/gallary/IMG_0038.jpg","_content":"\nÊú¨ÂÆùÂÆù‰ªäÂ§©Âà∞ üë¨ ÊúãÂèãÂÆ∂ üè† ÂÅöÂÆ¢ÔºåÂ•ΩÂºÄÂøÉ üòÑ„ÄÇ\n\n![](/gallary/IMG_0041.jpg)\n\n<!-- more -->\n\nÂùêËΩ¶ËΩ¶Ôºö\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/25.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","source":"_posts/ÂÅöÂÆ¢ÊúãÂèãÂÆ∂.md","raw":"---\ntitle: ÂÅöÂÆ¢ÊúãÂèãÂÆ∂\ndate: 2019-01-10 13:20:01\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0038.jpg\n---\n\nÊú¨ÂÆùÂÆù‰ªäÂ§©Âà∞ üë¨ ÊúãÂèãÂÆ∂ üè† ÂÅöÂÆ¢ÔºåÂ•ΩÂºÄÂøÉ üòÑ„ÄÇ\n\n![](/gallary/IMG_0041.jpg)\n\n<!-- more -->\n\nÂùêËΩ¶ËΩ¶Ôºö\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/25.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","slug":"ÂÅöÂÆ¢ÊúãÂèãÂÆ∂","published":1,"updated":"2019-01-11T05:26:10.064Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphl0002hqox48njsinf","content":"<p>Êú¨ÂÆùÂÆù‰ªäÂ§©Âà∞ üë¨ ÊúãÂèãÂÆ∂ üè† ÂÅöÂÆ¢ÔºåÂ•ΩÂºÄÂøÉ üòÑ„ÄÇ</p>\n<p><img src=\"/gallary/IMG_0041.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>ÂùêËΩ¶ËΩ¶Ôºö</p>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/25.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n","site":{"data":{}},"excerpt":"<p>Êú¨ÂÆùÂÆù‰ªäÂ§©Âà∞ üë¨ ÊúãÂèãÂÆ∂ üè† ÂÅöÂÆ¢ÔºåÂ•ΩÂºÄÂøÉ üòÑ„ÄÇ</p>\n<p><img src=\"/gallary/IMG_0041.jpg\" alt=\"\"></p>","more":"<p>ÂùêËΩ¶ËΩ¶Ôºö</p>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/25.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>"},{"title":"ÂáèËÇ•","date":"2018-11-08T09:36:39.000Z","thumbnail":"/gallary/IMG_0002.jpg","_content":"\n![](/gallary/IMG_0003.jpg)\n\n13 Êñ§ÁöÑËÇ•Áå´‰∫Ü üê±ÔºåÊòØÊó∂ÂÄôÂáèËÇ•‰∫ÜÔºÅÔºÅÔºÅ\n","source":"_posts/ÂáèËÇ•.md","raw":"---\ntitle: ÂáèËÇ•\ndate: 2018-11-08 17:36:39\ntags: ÊãõË¥¢\ncategories:\n  - ÁîüÊ¥ª\n  - ÊãõË¥¢\nthumbnail: /gallary/IMG_0002.jpg\n---\n\n![](/gallary/IMG_0003.jpg)\n\n13 Êñ§ÁöÑËÇ•Áå´‰∫Ü üê±ÔºåÊòØÊó∂ÂÄôÂáèËÇ•‰∫ÜÔºÅÔºÅÔºÅ\n","slug":"ÂáèËÇ•","published":1,"updated":"2019-01-08T09:53:41.285Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphp0005hqoxmkatvc7o","content":"<p><img src=\"/gallary/IMG_0003.jpg\" alt=\"\"></p>\n<p>13 Êñ§ÁöÑËÇ•Áå´‰∫Ü üê±ÔºåÊòØÊó∂ÂÄôÂáèËÇ•‰∫ÜÔºÅÔºÅÔºÅ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0003.jpg\" alt=\"\"></p>\n<p>13 Êñ§ÁöÑËÇ•Áå´‰∫Ü üê±ÔºåÊòØÊó∂ÂÄôÂáèËÇ•‰∫ÜÔºÅÔºÅÔºÅ</p>\n"},{"title":"Âä™ÂäõÂä™Âäõ","date":"2019-01-02T10:07:45.000Z","thumbnail":"/gallary/IMG_0010.jpg","_content":"\n![](/gallary/IMG_0024.jpg)\n\nÂä™ÂäõÂ≠¶‰π†ÔºåÂø´Âø´ÊàêÈïø üí™„ÄÇ\n","source":"_posts/Âä™ÂäõÂä™Âäõ.md","raw":"---\ntitle: Âä™ÂäõÂä™Âäõ\ndate: 2019-01-02 18:07:45\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0010.jpg\n---\n\n![](/gallary/IMG_0024.jpg)\n\nÂä™ÂäõÂ≠¶‰π†ÔºåÂø´Âø´ÊàêÈïø üí™„ÄÇ\n","slug":"Âä™ÂäõÂä™Âäõ","published":1,"updated":"2019-01-08T10:09:00.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphr0006hqoxb6yegl0k","content":"<p><img src=\"/gallary/IMG_0024.jpg\" alt=\"\"></p>\n<p>Âä™ÂäõÂ≠¶‰π†ÔºåÂø´Âø´ÊàêÈïø üí™„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0024.jpg\" alt=\"\"></p>\n<p>Âä™ÂäõÂ≠¶‰π†ÔºåÂø´Âø´ÊàêÈïø üí™„ÄÇ</p>\n"},{"title":"ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶üòä","date":"2019-01-06T05:24:35.000Z","thumbnail":"/gallary/IMG_0027.jpg","_content":"\n![](/gallary/IMG_0028.jpg)\n\n‰ªäÂ§©ÂêÉËÉ°ËêùÂçú ü•ï+ Á±≥Á≤â üçöÔºåËøûÁª≠ÂêÉ‰∫Ü 10 Â§öÂ§©ËÉ°ËêùÂçúÂêéÁªà‰∫é‰∏çÊäóÊãí‰∫ÜÔºåÂÅö‰∏™‰∏çÊåëÈ£üÁöÑ‰πñÂÆùÂÆù„ÄÇ\n","source":"_posts/ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶üòä.md","raw":"---\ntitle: \"ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶\\U0001F60A\"\ndate: 2019-01-06 13:24:35\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0027.jpg\n---\n\n![](/gallary/IMG_0028.jpg)\n\n‰ªäÂ§©ÂêÉËÉ°ËêùÂçú ü•ï+ Á±≥Á≤â üçöÔºåËøûÁª≠ÂêÉ‰∫Ü 10 Â§öÂ§©ËÉ°ËêùÂçúÂêéÁªà‰∫é‰∏çÊäóÊãí‰∫ÜÔºåÂÅö‰∏™‰∏çÊåëÈ£üÁöÑ‰πñÂÆùÂÆù„ÄÇ\n","slug":"ÂèàÂêÉËæÖÈ£ü‰∫ÜÂï¶üòä","published":1,"updated":"2019-01-09T05:29:55.919Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphs0007hqoxehu7z483","content":"<p><img src=\"/gallary/IMG_0028.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÂêÉËÉ°ËêùÂçú ü•ï+ Á±≥Á≤â üçöÔºåËøûÁª≠ÂêÉ‰∫Ü 10 Â§öÂ§©ËÉ°ËêùÂçúÂêéÁªà‰∫é‰∏çÊäóÊãí‰∫ÜÔºåÂÅö‰∏™‰∏çÊåëÈ£üÁöÑ‰πñÂÆùÂÆù„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0028.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÂêÉËÉ°ËêùÂçú ü•ï+ Á±≥Á≤â üçöÔºåËøûÁª≠ÂêÉ‰∫Ü 10 Â§öÂ§©ËÉ°ËêùÂçúÂêéÁªà‰∫é‰∏çÊäóÊãí‰∫ÜÔºåÂÅö‰∏™‰∏çÊåëÈ£üÁöÑ‰πñÂÆùÂÆù„ÄÇ</p>\n"},{"title":"Â∞èÁÜäÁå´Êù•Âà∞Ëøô‰∏™‰∏ñÁïå","date":"2018-06-20T16:02:08.000Z","thumbnail":"/gallary/IMG_0005.jpg","_content":"\nÂÖ¨ÂÖÉ 2018 Âπ¥ 6 Êúà 21 Êó•ÔºåÂ§èËá≥ÔºåÂáåÊô® 2 ÁÇπ 08 ÂàÜÔºåÊàêÈÉΩÂçéË•øÈôÑ‰∫åÈô¢‰∏ÄÂ£∞ÂïºÂì≠ÔºåÂ∞èÁÜäÁå´ üêº Êù•Âà∞‰∫ÜËøô‰∏™‰∏ñÁïå„ÄÇ\n\n---\n\n<!-- more -->\n\n![](/gallary/IMG_0004.jpg)\n\n‰ºº‰πé‰∏äÂ§©Áü•ÈÅì‰Ω†ÂÖ´Â≠óÁº∫Ê∞¥ÔºåÂá∫ÁîüÁöÑÊó∂ÂÄôÁ™óÂ§ñ‰∏ãÁùÄÊ∑ÖÊ≤•Ê≤•ÁöÑÂ∞èÈõ®„ÄÇ\n‰ºº‰πé‰Ω†Áü•ÈÅìËá™Â∑±Âè´‚ÄúÂ∞èÁÜäÁå´‚ÄùÔºå‰∏ÄÂá∫ÁîüÂ∞±Êè°Á¥ßÊã≥Â§¥ÔºåËú∑ÁùÄÂ∞èÊâãÂçñËêå üòä„ÄÇ\n\n---\n\n![](/gallary/IMG_0005.jpg)\n\nÂ§©‰ΩøÂÆùÂÆù üëºÔºåÁà∏Áà∏Â¶àÂ¶àÂ∏åÊúõ‰Ω†Ê∞∏ËøúÂÅ•Â∫∑Âø´‰πê„ÄÇ\n","source":"_posts/Â∞èÁÜäÁå´Êù•Âà∞‰∏ñÁïå.md","raw":"---\ntitle: Â∞èÁÜäÁå´Êù•Âà∞Ëøô‰∏™‰∏ñÁïå\ndate: 2018-06-21 00:02:08\ntags: [Â∞èÁÜäÁå´, Êñ∞Áîü]\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0005.jpg\n---\n\nÂÖ¨ÂÖÉ 2018 Âπ¥ 6 Êúà 21 Êó•ÔºåÂ§èËá≥ÔºåÂáåÊô® 2 ÁÇπ 08 ÂàÜÔºåÊàêÈÉΩÂçéË•øÈôÑ‰∫åÈô¢‰∏ÄÂ£∞ÂïºÂì≠ÔºåÂ∞èÁÜäÁå´ üêº Êù•Âà∞‰∫ÜËøô‰∏™‰∏ñÁïå„ÄÇ\n\n---\n\n<!-- more -->\n\n![](/gallary/IMG_0004.jpg)\n\n‰ºº‰πé‰∏äÂ§©Áü•ÈÅì‰Ω†ÂÖ´Â≠óÁº∫Ê∞¥ÔºåÂá∫ÁîüÁöÑÊó∂ÂÄôÁ™óÂ§ñ‰∏ãÁùÄÊ∑ÖÊ≤•Ê≤•ÁöÑÂ∞èÈõ®„ÄÇ\n‰ºº‰πé‰Ω†Áü•ÈÅìËá™Â∑±Âè´‚ÄúÂ∞èÁÜäÁå´‚ÄùÔºå‰∏ÄÂá∫ÁîüÂ∞±Êè°Á¥ßÊã≥Â§¥ÔºåËú∑ÁùÄÂ∞èÊâãÂçñËêå üòä„ÄÇ\n\n---\n\n![](/gallary/IMG_0005.jpg)\n\nÂ§©‰ΩøÂÆùÂÆù üëºÔºåÁà∏Áà∏Â¶àÂ¶àÂ∏åÊúõ‰Ω†Ê∞∏ËøúÂÅ•Â∫∑Âø´‰πê„ÄÇ\n","slug":"Â∞èÁÜäÁå´Êù•Âà∞‰∏ñÁïå","published":1,"updated":"2019-01-09T05:25:20.082Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphv000bhqoxttz3v2i3","content":"<p>ÂÖ¨ÂÖÉ 2018 Âπ¥ 6 Êúà 21 Êó•ÔºåÂ§èËá≥ÔºåÂáåÊô® 2 ÁÇπ 08 ÂàÜÔºåÊàêÈÉΩÂçéË•øÈôÑ‰∫åÈô¢‰∏ÄÂ£∞ÂïºÂì≠ÔºåÂ∞èÁÜäÁå´ üêº Êù•Âà∞‰∫ÜËøô‰∏™‰∏ñÁïå„ÄÇ</p>\n<hr>\n<a id=\"more\"></a>\n<p><img src=\"/gallary/IMG_0004.jpg\" alt=\"\"></p>\n<p>‰ºº‰πé‰∏äÂ§©Áü•ÈÅì‰Ω†ÂÖ´Â≠óÁº∫Ê∞¥ÔºåÂá∫ÁîüÁöÑÊó∂ÂÄôÁ™óÂ§ñ‰∏ãÁùÄÊ∑ÖÊ≤•Ê≤•ÁöÑÂ∞èÈõ®„ÄÇ<br>\n‰ºº‰πé‰Ω†Áü•ÈÅìËá™Â∑±Âè´‚ÄúÂ∞èÁÜäÁå´‚ÄùÔºå‰∏ÄÂá∫ÁîüÂ∞±Êè°Á¥ßÊã≥Â§¥ÔºåËú∑ÁùÄÂ∞èÊâãÂçñËêå üòä„ÄÇ</p>\n<hr>\n<p><img src=\"/gallary/IMG_0005.jpg\" alt=\"\"></p>\n<p>Â§©‰ΩøÂÆùÂÆù üëºÔºåÁà∏Áà∏Â¶àÂ¶àÂ∏åÊúõ‰Ω†Ê∞∏ËøúÂÅ•Â∫∑Âø´‰πê„ÄÇ</p>\n","site":{"data":{}},"excerpt":"<p>ÂÖ¨ÂÖÉ 2018 Âπ¥ 6 Êúà 21 Êó•ÔºåÂ§èËá≥ÔºåÂáåÊô® 2 ÁÇπ 08 ÂàÜÔºåÊàêÈÉΩÂçéË•øÈôÑ‰∫åÈô¢‰∏ÄÂ£∞ÂïºÂì≠ÔºåÂ∞èÁÜäÁå´ üêº Êù•Âà∞‰∫ÜËøô‰∏™‰∏ñÁïå„ÄÇ</p>\n<hr>","more":"<p><img src=\"/gallary/IMG_0004.jpg\" alt=\"\"></p>\n<p>‰ºº‰πé‰∏äÂ§©Áü•ÈÅì‰Ω†ÂÖ´Â≠óÁº∫Ê∞¥ÔºåÂá∫ÁîüÁöÑÊó∂ÂÄôÁ™óÂ§ñ‰∏ãÁùÄÊ∑ÖÊ≤•Ê≤•ÁöÑÂ∞èÈõ®„ÄÇ<br>\n‰ºº‰πé‰Ω†Áü•ÈÅìËá™Â∑±Âè´‚ÄúÂ∞èÁÜäÁå´‚ÄùÔºå‰∏ÄÂá∫ÁîüÂ∞±Êè°Á¥ßÊã≥Â§¥ÔºåËú∑ÁùÄÂ∞èÊâãÂçñËêå üòä„ÄÇ</p>\n<hr>\n<p><img src=\"/gallary/IMG_0005.jpg\" alt=\"\"></p>\n<p>Â§©‰ΩøÂÆùÂÆù üëºÔºåÁà∏Áà∏Â¶àÂ¶àÂ∏åÊúõ‰Ω†Ê∞∏ËøúÂÅ•Â∫∑Âø´‰πê„ÄÇ</p>"},{"title":"ÂºÄËç§","date":"2018-10-01T09:44:41.000Z","thumbnail":"/gallary/IMG_0014.jpg","_content":"\n![](/gallary/IMG_0023.jpg)\n\n‰ªäÂ§©ÊòØÁ•ñÂõΩÁîüÊó•ÔºåÂ∞èÁÜäÁå´‰πüËøáËäÇÔºåÂºÄËç§‰∫Ü üòõ„ÄÇ\n","source":"_posts/ÂºÄËç§.md","raw":"---\ntitle: ÂºÄËç§\ndate: 2018-10-01 17:44:41\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0014.jpg\n---\n\n![](/gallary/IMG_0023.jpg)\n\n‰ªäÂ§©ÊòØÁ•ñÂõΩÁîüÊó•ÔºåÂ∞èÁÜäÁå´‰πüËøáËäÇÔºåÂºÄËç§‰∫Ü üòõ„ÄÇ\n","slug":"ÂºÄËç§","published":1,"updated":"2019-01-08T10:01:25.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphx000dhqoxtz0lrvyo","content":"<p><img src=\"/gallary/IMG_0023.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÊòØÁ•ñÂõΩÁîüÊó•ÔºåÂ∞èÁÜäÁå´‰πüËøáËäÇÔºåÂºÄËç§‰∫Ü üòõ„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0023.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÊòØÁ•ñÂõΩÁîüÊó•ÔºåÂ∞èÁÜäÁå´‰πüËøáËäÇÔºåÂºÄËç§‰∫Ü üòõ„ÄÇ</p>\n"},{"title":"ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶","date":"2019-01-08T05:44:49.000Z","thumbnail":"/gallary/IMG_0032.jpg","_content":"\n![](/gallary/IMG_0033.jpg)\n\n‰ªäÂ§©ÊΩúÊ∞¥ üèä‚Äç‚ôÄÔ∏è ÊàêÂäüÔºåËé∑ÂæóÁöÑ‰∫∫ÁîüÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ üòÑ„ÄÇ\n","source":"_posts/ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶.md","raw":"---\ntitle: ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶\ndate: 2019-01-08 13:44:49\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0032.jpg\n---\n\n![](/gallary/IMG_0033.jpg)\n\n‰ªäÂ§©ÊΩúÊ∞¥ üèä‚Äç‚ôÄÔ∏è ÊàêÂäüÔºåËé∑ÂæóÁöÑ‰∫∫ÁîüÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ üòÑ„ÄÇ\n","slug":"ÊàëÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶","published":1,"updated":"2019-01-09T05:51:45.753Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlphz000hhqoxyyxcynj4","content":"<p><img src=\"/gallary/IMG_0033.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÊΩúÊ∞¥ üèä‚Äç‚ôÄÔ∏è ÊàêÂäüÔºåËé∑ÂæóÁöÑ‰∫∫ÁîüÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ üòÑ„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0033.jpg\" alt=\"\"></p>\n<p>‰ªäÂ§©ÊΩúÊ∞¥ üèä‚Äç‚ôÄÔ∏è ÊàêÂäüÔºåËé∑ÂæóÁöÑ‰∫∫ÁîüÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ üòÑ„ÄÇ</p>\n"},{"title":"ÊãõË¥¢Êç£ËõãÊó•Â∏∏","date":"2018-11-08T09:15:09.000Z","thumbnail":"/gallary/IMG_0006.jpg","_content":"\n<!-- more -->\n\n![](/gallary/IMG_0001.jpg)\n\nÊãõË¥¢ËîëËßÜ„ÄÅÂçÉÁøªÂÑø„ÄÅÊä¢Â¶πÂ¶πÁöÑÂ∫äÁù°„ÄÇ\n","source":"_posts/ÊãõË¥¢Êç£ËõãÊó•Â∏∏.md","raw":"---\ntitle: ÊãõË¥¢Êç£ËõãÊó•Â∏∏\ndate: 2018-11-08 17:15:09\ntags: ÊãõË¥¢\ncategories:\n  - ÁîüÊ¥ª\n  - ÊãõË¥¢\nthumbnail: /gallary/IMG_0006.jpg\n---\n\n<!-- more -->\n\n![](/gallary/IMG_0001.jpg)\n\nÊãõË¥¢ËîëËßÜ„ÄÅÂçÉÁøªÂÑø„ÄÅÊä¢Â¶πÂ¶πÁöÑÂ∫äÁù°„ÄÇ\n","slug":"ÊãõË¥¢Êç£ËõãÊó•Â∏∏","published":1,"updated":"2019-01-08T09:32:16.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpi1000jhqoxdphuz7q2","content":"<a id=\"more\"></a>\n<p><img src=\"/gallary/IMG_0001.jpg\" alt=\"\"></p>\n<p>ÊãõË¥¢ËîëËßÜ„ÄÅÂçÉÁøªÂÑø„ÄÅÊä¢Â¶πÂ¶πÁöÑÂ∫äÁù°„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0001.jpg\" alt=\"\"></p>\n<p>ÊãõË¥¢ËîëËßÜ„ÄÅÂçÉÁøªÂÑø„ÄÅÊä¢Â¶πÂ¶πÁöÑÂ∫äÁù°„ÄÇ</p>"},{"title":"Áã¨Ëá™ÁúãÂÆ∂","date":"2019-02-06T08:21:00.000Z","thumbnail":"/gallary/IMG_0099.jpg","_content":"\n<!-- more -->\n\n![](/gallary/IMG_0102.jpg)\n\nÈÉΩÂõûËÄÅÂÆ∂ËøáÂπ¥‰∫ÜÔºåÊú¨Âñµ‰∏Ä‰∏™‰∫∫Âú®ÂÆ∂ÔºåÊÉ≥ÊÄé‰πàÊ†∑Â∞±ÊÄé‰πàÊ†∑ üòÑ„ÄÇ\nËøòÊúâ‰∫∫‰∏äÈó®ÁªôÊúçÂä°Ôºå‰º∏‰∏™ÊáíËÖ∞ÔºåÁúüËàíÊúçÂïä„ÄÇ\n","source":"_posts/Áã¨Ëá™ÁúãÂÆ∂.md","raw":"---\ntitle: Áã¨Ëá™ÁúãÂÆ∂\ndate: 2019-02-06 16:21:00\ntags: ÊãõË¥¢\ncategories:\n  - ÁîüÊ¥ª\n  - ÊãõË¥¢\nthumbnail: /gallary/IMG_0099.jpg\n---\n\n<!-- more -->\n\n![](/gallary/IMG_0102.jpg)\n\nÈÉΩÂõûËÄÅÂÆ∂ËøáÂπ¥‰∫ÜÔºåÊú¨Âñµ‰∏Ä‰∏™‰∫∫Âú®ÂÆ∂ÔºåÊÉ≥ÊÄé‰πàÊ†∑Â∞±ÊÄé‰πàÊ†∑ üòÑ„ÄÇ\nËøòÊúâ‰∫∫‰∏äÈó®ÁªôÊúçÂä°Ôºå‰º∏‰∏™ÊáíËÖ∞ÔºåÁúüËàíÊúçÂïä„ÄÇ\n","slug":"Áã¨Ëá™ÁúãÂÆ∂","published":1,"updated":"2019-02-20T08:24:11.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpi4000nhqox57dt4tqj","content":"<a id=\"more\"></a>\n<p><img src=\"/gallary/IMG_0102.jpg\" alt=\"\"></p>\n<p>ÈÉΩÂõûËÄÅÂÆ∂ËøáÂπ¥‰∫ÜÔºåÊú¨Âñµ‰∏Ä‰∏™‰∫∫Âú®ÂÆ∂ÔºåÊÉ≥ÊÄé‰πàÊ†∑Â∞±ÊÄé‰πàÊ†∑ üòÑ„ÄÇ<br>\nËøòÊúâ‰∫∫‰∏äÈó®ÁªôÊúçÂä°Ôºå‰º∏‰∏™ÊáíËÖ∞ÔºåÁúüËàíÊúçÂïä„ÄÇ</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/gallary/IMG_0102.jpg\" alt=\"\"></p>\n<p>ÈÉΩÂõûËÄÅÂÆ∂ËøáÂπ¥‰∫ÜÔºåÊú¨Âñµ‰∏Ä‰∏™‰∫∫Âú®ÂÆ∂ÔºåÊÉ≥ÊÄé‰πàÊ†∑Â∞±ÊÄé‰πàÊ†∑ üòÑ„ÄÇ<br>\nËøòÊúâ‰∫∫‰∏äÈó®ÁªôÊúçÂä°Ôºå‰º∏‰∏™ÊáíËÖ∞ÔºåÁúüËàíÊúçÂïä„ÄÇ</p>"},{"title":"Êñ∞Âπ¥Âø´‰πê","date":"2019-02-04T07:33:26.000Z","thumbnail":"/gallary/IMG_0093.jpg","_content":"\nÊëÜ‰∏™ pose\n\n![](/gallary/IMG_0098.jpg)\n\nÁ•ùÂ§ßÂÆ∂Áå™Âπ¥Âø´‰πê üéÜÔºåÊÅ≠ÂñúÂèëË¥¢„ÄÅüßß Á∫¢ÂåÖÊãøÊù•ÔºÅÔºÅÔºÅ\n\n<!-- more -->\n\n![](/gallary/IMG_0093.jpg)\n","source":"_posts/Êñ∞Âπ¥Âø´‰πê.md","raw":"---\ntitle: Êñ∞Âπ¥Âø´‰πê\ndate: 2019-02-04 15:33:26\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/IMG_0093.jpg\n---\n\nÊëÜ‰∏™ pose\n\n![](/gallary/IMG_0098.jpg)\n\nÁ•ùÂ§ßÂÆ∂Áå™Âπ¥Âø´‰πê üéÜÔºåÊÅ≠ÂñúÂèëË¥¢„ÄÅüßß Á∫¢ÂåÖÊãøÊù•ÔºÅÔºÅÔºÅ\n\n<!-- more -->\n\n![](/gallary/IMG_0093.jpg)\n","slug":"Êñ∞Âπ¥Âø´‰πê","published":1,"updated":"2019-02-20T08:17:15.887Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpi5000phqoxwkiq3mw5","content":"<p>ÊëÜ‰∏™ pose</p>\n<p><img src=\"/gallary/IMG_0098.jpg\" alt=\"\"></p>\n<p>Á•ùÂ§ßÂÆ∂Áå™Âπ¥Âø´‰πê üéÜÔºåÊÅ≠ÂñúÂèëË¥¢„ÄÅüßß Á∫¢ÂåÖÊãøÊù•ÔºÅÔºÅÔºÅ</p>\n<a id=\"more\"></a>\n<p><img src=\"/gallary/IMG_0093.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>ÊëÜ‰∏™ pose</p>\n<p><img src=\"/gallary/IMG_0098.jpg\" alt=\"\"></p>\n<p>Á•ùÂ§ßÂÆ∂Áå™Âπ¥Âø´‰πê üéÜÔºåÊÅ≠ÂñúÂèëË¥¢„ÄÅüßß Á∫¢ÂåÖÊãøÊù•ÔºÅÔºÅÔºÅ</p>","more":"<p><img src=\"/gallary/IMG_0093.jpg\" alt=\"\"></p>"},{"title":"ÁôæÂ§©party","date":"2018-09-21T09:52:15.000Z","thumbnail":"/gallary/100party.jpg","_content":"\n‰ªäÂ§©Â∞èÁÜäÁå´ÂíåÂì•Âì•„ÄÅÂßêÂßê„ÄÅÂºüÂºü„ÄÅÂ¶πÂ¶π‰∏ÄËµ∑ party go üòÑÔºö\n\n<!-- more -->\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/v001.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","source":"_posts/ÁôæÂ§©party.md","raw":"---\ntitle: ÁôæÂ§©party\ndate: 2018-09-21 17:52:15\ntags: Â∞èÁÜäÁå´\ncategories:\n  - ÁîüÊ¥ª\n  - Â∞èÁÜäÁå´\nthumbnail: /gallary/100party.jpg\n---\n\n‰ªäÂ§©Â∞èÁÜäÁå´ÂíåÂì•Âì•„ÄÅÂßêÂßê„ÄÅÂºüÂºü„ÄÅÂ¶πÂ¶π‰∏ÄËµ∑ party go üòÑÔºö\n\n<!-- more -->\n\n<iframe \n\tscrolling=no width=\"100%\" height=\"100%\" onLoad=\"iFrameHeight()\" \n\tsrc=\"/gallary/v001.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n","slug":"ÁôæÂ§©party","published":1,"updated":"2019-01-09T01:32:56.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpi7000shqox6ie5awa3","content":"<p>‰ªäÂ§©Â∞èÁÜäÁå´ÂíåÂì•Âì•„ÄÅÂßêÂßê„ÄÅÂºüÂºü„ÄÅÂ¶πÂ¶π‰∏ÄËµ∑ party go üòÑÔºö</p>\n<a id=\"more\"></a>\n<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/v001.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n","site":{"data":{}},"excerpt":"<p>‰ªäÂ§©Â∞èÁÜäÁå´ÂíåÂì•Âì•„ÄÅÂßêÂßê„ÄÅÂºüÂºü„ÄÅÂ¶πÂ¶π‰∏ÄËµ∑ party go üòÑÔºö</p>","more":"<iframe scrolling=\"no\" width=\"100%\" height=\"100%\" onload=\"iFrameHeight()\" src=\"/gallary/v001.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>"},{"title":"2016ÂæÆËΩØÊé¢Êòü | Constraint Checker","date":"2016-08-04T02:56:12.000Z","thumbnail":"http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","_content":"\nÈ¢òÁõÆÊù•Ê∫ê‰∫é 2016 Âπ¥ÂæÆËΩØÊé¢ÊòüÂ§è‰ª§Ëê•Âú®Á∫øÊäÄÊúØÁ¨îËØïÔºåÁ¨îËØïÁªìÊûúÊòØ‰Ωú‰∏∫ÁîÑÈÄâÂæÆËΩØ 2016 Ê†°ÊãõÊäÄÊúØÁ±ªËÅå‰ΩçÁöÑÈáçË¶ÅÂèÇËÄÉ‰πã‰∏Ä„ÄÇËøô‰∏™ËÄÉËØïÂØπ‰∫éÊÉ≥ËøõÂæÆËΩØÂÆû‰π†ÊàñÂ∑•‰ΩúÁöÑÂú®Ê†°ÁîüÊù•ËØ¥ËøòÊòØËõÆÈáçË¶ÅÁöÑ„ÄÇ\nÊú¨‰∫∫Èó≤Êù•Êó†ËÅä‰πüÊ≥®ÂÜå‰∫ÜÂ∏êÂè∑Â∞ùËØï‰∫ÜÁ¨¨‰∏ÄÈ¢òÔºå‰ª£Á†ÅÁî® C++ÂÆûÁé∞ÔºåÊØîËæÉ‰π±Ôºå‰æ•Âπ∏‰∏ÄÊ¨°ÈÄöËøá„ÄÇ‰∏ãÈù¢Áõ¥Êé•Áúã‰∏Ä‰∏ãËÄÉÈ¢ò„ÄÇ\n\n<!-- more -->\n\n![](http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n---\n\nÈ¢òÁõÆÔºö\n\nÊó∂Èó¥ÈôêÂà∂:10000ms\nÂçïÁÇπÊó∂Èôê:1000ms\nÂÜÖÂ≠òÈôêÂà∂:256MB\n\nÊèèËø∞\nGiven a set of constraints like¬†**0<N<=M<=100**¬†and values for all the variables, write a checker program to determine if the constraints are satisfied.\nMore precisely, the format of constraints is:\n**token op token op ... op token**\nwhere each¬†token¬†is either a constant integer or a variable represented by a capital letter and each¬†op is either less-than ( < ) or less-than-or-equal-to ( <= ).¬†\nËæìÂÖ•\nThe first line contains an integer¬†N, the number of constraints. (1 ‚â§¬†N‚â§ 20)\nEach of the following¬†N lines contains a constraint in the previous mentioned format.\nThen follows an integer¬†T, the number of assignments to check. (1 ‚â§¬†T‚â§ 50)\nEach assignment occupies¬†K lines where¬†K is the number of variables in the constraints.\nEach line contains a capital letter and an integer, representing a variable and its value.\nIt is guaranteed that:\n\n1. Every token in the constraints is either an integer from 0 to 1000000 or an variable represented by a capital letter from 'A' to 'Z'.\n2. There is no space in the constraints.\n3. In each assignment every variable appears exactly once and its value is from 0 to 1000000.¬†\n   ËæìÂá∫\n   For each assignment output Yes or No indicating if the constraints are satisfied.\n\n> Ê†∑‰æãËæìÂÖ•\n> 2\n> A<B<=E\n> 3<=E<5\n> 2\n> A 1\n> B 2\n> E 3\n> A 3\n> B 5\n> E 10\n\n> Ê†∑‰æãËæìÂá∫\n> Yes\n> No\n\nËß£ÈáäÔºö\nËøôÈÅìÈ¢òÈ¢òÁõÆËøòÊòØÊØîËæÉÂÆπÊòìÁêÜËß£ÔºåÂ∞±ÊòØÊ†πÊçÆËæìÂÖ•ÁöÑËã•Âπ≤‰∏™‰∏çÁ≠âÂºèÔºåÊ†°È™åÂêéÈù¢ËæìÂÖ•ÁöÑÊï∞ÊçÆÊòØÂê¶ÈÉΩÊª°Ë∂≥ÂâçÈù¢ÁöÑ‰∏çÁ≠âÂºèÔºåÊª°Ë∂≥Â∞±ËæìÂá∫ YesÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™‰∏çÊª°Ë∂≥Â∞±ËæìÂá∫ No„ÄÇÂ¶Ç‚ÄúA<B<=EÔºå3<=E<5‚ÄùËøô‰∏™‰∏§‰∏™ÂÖ≥Á≥ªÂºèÔºåÂØπ‰∫éËæìÂÖ• A Ôºù 1ÔºåB Ôºù 2ÔºåE Ôºù 3 ËÇØÂÆöÊª°Ë∂≥ÔºåÂõ†‰∏∫ 1<2<=3Ôºå3<=3<5„ÄÇËÄå A Ôºù 3, B Ôºù 5ÔºåE=10 Â∞±‰∏çÊª°Ë∂≥ÔºåÂõ†‰∏∫ 3<=10<5 ‰∏çÊàêÁ´ã„ÄÇ\n\nÂàÜÊûêÔºö\n1„ÄÅÁî±‰∫éÊúâÊâÄÊúâ‰∏çÁ≠âÂºèÈÉΩË¶ÅÈÄöËøáÊ†°È™åÊâçËæìÂá∫ YesÔºåÈÇ£‰πà‰ª£Ë°®Êàë‰ª¨Ë¶ÅÂú®ËæìÂÖ•ÁöÑÊó∂ÂÄôÂ∞±Â∞ÜÊâÄÊúâ‰∏çÁ≠âÂºèÂÖ≥Á≥ªÈÉΩÂ≠òËµ∑Êù•Êñπ‰æøÂêéÈù¢Ê†°È™åÔºåËøôÈáåÊàëÁî®‰∫Ü‰∏Ä‰∏™ vector Êù•Â≠òÂÇ®Ëøô‰∫õÂÖ≥Á≥ªÔºåÂêéÈù¢Ê†°È™åÁöÑÊó∂ÂÄôÈÅçÂéÜ vector ÈáåÈù¢ÊâÄÊúâÁöÑÂÄºÔºå‰∏Ä‰∏™‰∏™Ê†°È™å„ÄÇ\n2„ÄÅÁî±‰∫éÊØè‰∏™‰∏çÁ≠âÂºèÂÖ≥Á≥ªÂè™Êúâ\"<\"ÊàñËÄÖ\"<=\"ÔºåËØ¥ÊòéËøô‰∏™ÂÖ≥Á≥ªÊòØÈÄíÂ¢ûÁöÑÔºåÊâÄ‰ª•ÊàëÁî®‰∫Ü multimap<intÔºåstring>Êù•Â≠òÂÇ®ËøôÁßçÂÖ≥Á≥ªÔºàmultimap ÂØπ‰∫é key ÊòØËá™Â¢ûÈïøÊéíÂ∫èÔºåÂπ∂‰∏îÂèØ‰ª•Â≠òÂÇ®Áõ∏ÂêåÁöÑ keyÔºâ„ÄÇÊù•ÁúãÁúãÊàëÂØπÂÖ≥Á≥ªÂºèÁöÑ‰∏Ä‰∏™ËΩ¨Êç¢ÂáΩÊï∞Ôºö\n\n```\nmultimap<int,string> convertStrToMap(string operation)\n{\n¬† ¬† multimap<int,string> mapOp;\n¬† ¬† size_t len = operation.length();\n¬† ¬† int rank = 0;\n¬† ¬† int prior = 0;\n¬† ¬† for (int i = 0; i < len; i++) {\n¬† ¬† ¬† ¬† char letter = operation[i];\n¬† ¬† ¬† ¬† if (letter == '<') {\n¬† ¬† ¬† ¬† ¬† ¬† string str = operation.substr(prior, i - prior);\n¬† ¬† ¬† ¬† ¬† ¬† mapOp.insert(make_pair(rank, str));\n¬† ¬† ¬† ¬† ¬† ¬† if (i - prior == 1) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (str[0] >= 'A' && str[0] <= 'Z') {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;\n¬† ¬† ¬† ¬† ¬† ¬† rank++;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† if (letter == '=') {\n¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;\n¬† ¬† ¬† ¬† ¬† ¬† rank--;\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† string str = operation.substr(prior, len - prior);\n¬† ¬† mapOp.insert(make_pair(rank, str));\n¬† ¬† if (len - prior == 1) {\n¬† ¬† ¬† ¬† if (str[0] >= 'A' && str[0] <= 'Z') {\n¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† return mapOp;\n}\n```\n\nËøîÂõûÁöÑ mapOp Â∞±ÊòØÂ∞Ü string Á±ªÂûãÁöÑÂÖ≥Á≥ªÂºèËΩ¨Êç¢ÂêéÁöÑ multimapÔºåËøôÈáåÁöÑ key ÊòØ int Á±ªÂûã‰ª£Ë°®ËØ•ÂèòÈáèÊàñËÄÖÊï∞Â≠óÊòØÂú®ÂÖ≥Á≥ªÂºè‰ªÄ‰πàÂ±ÇÁ∫ßÔºåvalue ÊòØ string Á±ªÂûãÊñπ‰æøÂêéÈù¢ËΩ¨Êç¢ÊàêÊï∞Â≠óËøõË°åÊØîËæÉ„ÄÇ‰æãÂ¶ÇÔºåA<B<=EÔºåÂú® multimap ‰∏≠‰ºöÂ≠ò‰∏∫ÔΩõ0:A,1:B,1:EÔΩù„ÄÇËøôÊÆµ‰ª£Á†ÅËøòÊúâ‰∏™ varMap ÂèòÈáèÔºåÂÆÉÊòØ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáèÔºåÁî®Êù•ËÆ∞ÂΩïÂÖ≥Á≥ªÂºè‰∏≠Âá∫Áé∞ÁöÑÂèòÈáèÔºàÈ¢òÁõÆËßÑÂÆö‰∫ÜÂèòÈáèÂè™ËÉΩÂ§üÊòØ AÔºçZÔºâ„ÄÇ\n3„ÄÅÊúÄÂêéÂ∞±ÊòØËæìÂÖ•Êï∞ÊçÆÔºåÊõ¥Êñ∞ varMapÔºåÁÑ∂ÂêéÊ†πÊçÆÂÖ≥Á≥ªÂºèÊØîËæÉÁúãÊòØÂê¶Êª°Ë∂≥ÔºåËæìÂá∫ÁªìÊûú„ÄÇ‰ª£Á†ÅÔºö\n\n```\nint findValue(string input)\n{\n¬† ¬† if (input.size() == 1 && input[0] >= 'A' && input[0] <= 'Z') {\n¬† ¬† ¬† ¬† return varMap[input[0]];\n¬† ¬† }\n¬† ¬† return atoi(input.c_str());\n}\n\nvoid checker(vector<multimap<int,string>> opVec)\n{\n¬† ¬† bool pass = true;\n¬† ¬† for (int i = 0; i < opVec.size(); i++) {\n¬† ¬† ¬† ¬† multimap<int,string> operation = opVec[i];\n¬† ¬† ¬† ¬† multimap<int,string>::iterator it;\n¬† ¬† ¬† ¬† int rank1 = -1, rank2 = -1;\n¬† ¬† ¬† ¬† int value1, value2;\n¬† ¬† ¬† ¬† string var1, var2;\n¬† ¬† ¬† ¬† for (it = operation.begin(); it !=operation.end(); it++) {\n¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == -1) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† rank1 = it->first;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† var1 = it->second;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† continue;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† rank2 = it->first;\n¬† ¬† ¬† ¬† ¬† ¬† var2 = it->second;\n¬† ¬† ¬† ¬† ¬† ¬† value1 = findValue(var1);\n¬† ¬† ¬† ¬† ¬† ¬† value2 = findValue(var2);\n¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == rank2) { // <=\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 <= value2) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† else // <\n¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 < value2) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† ¬† ¬† if (!pass) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† break;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† ¬† ¬† var1 = var2;\n¬† ¬† ¬† ¬† ¬† ¬† rank1 = rank2;\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† if (!pass) {\n¬† ¬† ¬† ¬† ¬† ¬† break;\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† if (pass) {\n¬† ¬† ¬† ¬† cout<<\"Yes\"<<endl;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† cout<<\"No\"<<endl;\n¬† ¬† }\n}\n```\n\nÁî±‰∫éÂâçÈù¢ÂÖ≥Á≥ªÂºèÂ∑≤ÁªèÊåâÁªìÊûÑÂ≠òÂÇ®Â•Ω‰∫ÜÔºåÊâÄ‰ª•Âè™ÈúÄË¶Å‰∏ÄÊ≠•Ê≠•ÊØîËæÉÊ†°È™åÂç≥ÂèØ„ÄÇÂ±ÇÁ∫ß‰∏ÄÊ†∑ÁöÑÂèòÈáèÔºåvalue ÊÉ≥Á≠âÈÄöËøáÔºåÂ±ÇÁ∫ß‰∏ç‰∏ÄÊ†∑ÁöÑÔºåvalue1<value2 Âç≥ÂèØ„ÄÇ\n\nÁúã‰∏Ä‰∏ãÂà§ÂÆöÁªìÊûúÔºö\n![](http://upload-images.jianshu.io/upload_images/2641798-645fb746e176c24b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//  main.cpp\n//  Constraint Checker\n//\n//  Created by Jiao Liu on 7/18/16.\n//  Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#include <map>\n#include <vector>\n#include <string>\n#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\nmap<char,int> varMap;\n\nmultimap<int,string> convertStrToMap(string operation)\n{\n    multimap<int,string> mapOp;\n    size_t len = operation.length();\n    int rank = 0;\n    int prior = 0;\n    for (int i = 0; i < len; i++) {\n        char letter = operation[i];\n        if (letter == '<') {\n            string str = operation.substr(prior, i - prior);\n            mapOp.insert(make_pair(rank, str));\n            if (i - prior == 1) {\n                if (str[0] >= 'A' && str[0] <= 'Z') {\n                    varMap.insert(make_pair(str[0], 0));\n                }\n            }\n            prior = i + 1;\n            rank++;\n        }\n        if (letter == '=') {\n            prior = i + 1;\n            rank--;\n        }\n    }\n    string str = operation.substr(prior, len - prior);\n    mapOp.insert(make_pair(rank, str));\n    if (len - prior == 1) {\n        if (str[0] >= 'A' && str[0] <= 'Z') {\n            varMap.insert(make_pair(str[0], 0));\n        }\n    }\n    return mapOp;\n}\n\nint findValue(string input)\n{\n\n    if (input.size() == 1 && input[0] >= 'A' && input[0] <= 'Z') {\n        return varMap[input[0]];\n    }\n    return atoi(input.c_str());\n}\n\nvoid checker(vector<multimap<int,string>> opVec)\n{\n    bool pass = true;\n    for (int i = 0; i < opVec.size(); i++) {\n        multimap<int,string> operation = opVec[i];\n        multimap<int,string>::iterator it;\n        int rank1 = -1, rank2 = -1;\n        int value1, value2;\n        string var1, var2;\n        for (it = operation.begin(); it !=operation.end(); it++) {\n            if (rank1 == -1) {\n                rank1 = it->first;\n                var1 = it->second;\n                continue;\n            }\n            rank2 = it->first;\n            var2 = it->second;\n            value1 = findValue(var1);\n            value2 = findValue(var2);\n            if (rank1 == rank2) { // <=\n                if (value1 <= value2) {\n                    pass = true;\n                }\n                else\n                {\n                    pass = false;\n                }\n            }\n            else // <\n            {\n                if (value1 < value2) {\n                    pass = true;\n                }\n                else\n                {\n                    pass = false;\n                }\n            }\n\n            if (!pass) {\n                break;\n            }\n\n            var1 = var2;\n            rank1 = rank2;\n        }\n\n        if (!pass) {\n            break;\n        }\n    }\n\n    if (pass) {\n        cout<<\"Yes\"<<endl;\n    }\n    else\n    {\n        cout<<\"No\"<<endl;\n    }\n}\n\nint main()\n{\n    int N;\n    scanf(\"%d\",&N);\n    vector<multimap<int,string>> opVec;\n    while (N--) {\n        string op;\n        cin >> op;\n        multimap<int,string> operation = convertStrToMap(op);\n        opVec.push_back(operation);\n    }\n    int T;\n    scanf(\"%d\",&T);\n    while (T--) {\n        size_t numOfVar = varMap.size();\n        while (numOfVar--) {\n            char letter;\n            int value;\n            cin>>letter>>value;\n            varMap[letter] = value;\n        }\n        checker(opVec);\n    }\n    return 0;\n}\n\n```\n","source":"_posts/2016ÂæÆËΩØÊé¢Êòü-Constraint-Checker.md","raw":"---\ntitle: 2016ÂæÆËΩØÊé¢Êòü | Constraint Checker\ndate: 2016-08-04 10:56:12\ntags: [ÁÆóÊ≥ï]\ncategories:\n  - Â∑•‰Ωú\n  - ACM\nthumbnail: http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n---\n\nÈ¢òÁõÆÊù•Ê∫ê‰∫é 2016 Âπ¥ÂæÆËΩØÊé¢ÊòüÂ§è‰ª§Ëê•Âú®Á∫øÊäÄÊúØÁ¨îËØïÔºåÁ¨îËØïÁªìÊûúÊòØ‰Ωú‰∏∫ÁîÑÈÄâÂæÆËΩØ 2016 Ê†°ÊãõÊäÄÊúØÁ±ªËÅå‰ΩçÁöÑÈáçË¶ÅÂèÇËÄÉ‰πã‰∏Ä„ÄÇËøô‰∏™ËÄÉËØïÂØπ‰∫éÊÉ≥ËøõÂæÆËΩØÂÆû‰π†ÊàñÂ∑•‰ΩúÁöÑÂú®Ê†°ÁîüÊù•ËØ¥ËøòÊòØËõÆÈáçË¶ÅÁöÑ„ÄÇ\nÊú¨‰∫∫Èó≤Êù•Êó†ËÅä‰πüÊ≥®ÂÜå‰∫ÜÂ∏êÂè∑Â∞ùËØï‰∫ÜÁ¨¨‰∏ÄÈ¢òÔºå‰ª£Á†ÅÁî® C++ÂÆûÁé∞ÔºåÊØîËæÉ‰π±Ôºå‰æ•Âπ∏‰∏ÄÊ¨°ÈÄöËøá„ÄÇ‰∏ãÈù¢Áõ¥Êé•Áúã‰∏Ä‰∏ãËÄÉÈ¢ò„ÄÇ\n\n<!-- more -->\n\n![](http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n---\n\nÈ¢òÁõÆÔºö\n\nÊó∂Èó¥ÈôêÂà∂:10000ms\nÂçïÁÇπÊó∂Èôê:1000ms\nÂÜÖÂ≠òÈôêÂà∂:256MB\n\nÊèèËø∞\nGiven a set of constraints like¬†**0<N<=M<=100**¬†and values for all the variables, write a checker program to determine if the constraints are satisfied.\nMore precisely, the format of constraints is:\n**token op token op ... op token**\nwhere each¬†token¬†is either a constant integer or a variable represented by a capital letter and each¬†op is either less-than ( < ) or less-than-or-equal-to ( <= ).¬†\nËæìÂÖ•\nThe first line contains an integer¬†N, the number of constraints. (1 ‚â§¬†N‚â§ 20)\nEach of the following¬†N lines contains a constraint in the previous mentioned format.\nThen follows an integer¬†T, the number of assignments to check. (1 ‚â§¬†T‚â§ 50)\nEach assignment occupies¬†K lines where¬†K is the number of variables in the constraints.\nEach line contains a capital letter and an integer, representing a variable and its value.\nIt is guaranteed that:\n\n1. Every token in the constraints is either an integer from 0 to 1000000 or an variable represented by a capital letter from 'A' to 'Z'.\n2. There is no space in the constraints.\n3. In each assignment every variable appears exactly once and its value is from 0 to 1000000.¬†\n   ËæìÂá∫\n   For each assignment output Yes or No indicating if the constraints are satisfied.\n\n> Ê†∑‰æãËæìÂÖ•\n> 2\n> A<B<=E\n> 3<=E<5\n> 2\n> A 1\n> B 2\n> E 3\n> A 3\n> B 5\n> E 10\n\n> Ê†∑‰æãËæìÂá∫\n> Yes\n> No\n\nËß£ÈáäÔºö\nËøôÈÅìÈ¢òÈ¢òÁõÆËøòÊòØÊØîËæÉÂÆπÊòìÁêÜËß£ÔºåÂ∞±ÊòØÊ†πÊçÆËæìÂÖ•ÁöÑËã•Âπ≤‰∏™‰∏çÁ≠âÂºèÔºåÊ†°È™åÂêéÈù¢ËæìÂÖ•ÁöÑÊï∞ÊçÆÊòØÂê¶ÈÉΩÊª°Ë∂≥ÂâçÈù¢ÁöÑ‰∏çÁ≠âÂºèÔºåÊª°Ë∂≥Â∞±ËæìÂá∫ YesÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™‰∏çÊª°Ë∂≥Â∞±ËæìÂá∫ No„ÄÇÂ¶Ç‚ÄúA<B<=EÔºå3<=E<5‚ÄùËøô‰∏™‰∏§‰∏™ÂÖ≥Á≥ªÂºèÔºåÂØπ‰∫éËæìÂÖ• A Ôºù 1ÔºåB Ôºù 2ÔºåE Ôºù 3 ËÇØÂÆöÊª°Ë∂≥ÔºåÂõ†‰∏∫ 1<2<=3Ôºå3<=3<5„ÄÇËÄå A Ôºù 3, B Ôºù 5ÔºåE=10 Â∞±‰∏çÊª°Ë∂≥ÔºåÂõ†‰∏∫ 3<=10<5 ‰∏çÊàêÁ´ã„ÄÇ\n\nÂàÜÊûêÔºö\n1„ÄÅÁî±‰∫éÊúâÊâÄÊúâ‰∏çÁ≠âÂºèÈÉΩË¶ÅÈÄöËøáÊ†°È™åÊâçËæìÂá∫ YesÔºåÈÇ£‰πà‰ª£Ë°®Êàë‰ª¨Ë¶ÅÂú®ËæìÂÖ•ÁöÑÊó∂ÂÄôÂ∞±Â∞ÜÊâÄÊúâ‰∏çÁ≠âÂºèÂÖ≥Á≥ªÈÉΩÂ≠òËµ∑Êù•Êñπ‰æøÂêéÈù¢Ê†°È™åÔºåËøôÈáåÊàëÁî®‰∫Ü‰∏Ä‰∏™ vector Êù•Â≠òÂÇ®Ëøô‰∫õÂÖ≥Á≥ªÔºåÂêéÈù¢Ê†°È™åÁöÑÊó∂ÂÄôÈÅçÂéÜ vector ÈáåÈù¢ÊâÄÊúâÁöÑÂÄºÔºå‰∏Ä‰∏™‰∏™Ê†°È™å„ÄÇ\n2„ÄÅÁî±‰∫éÊØè‰∏™‰∏çÁ≠âÂºèÂÖ≥Á≥ªÂè™Êúâ\"<\"ÊàñËÄÖ\"<=\"ÔºåËØ¥ÊòéËøô‰∏™ÂÖ≥Á≥ªÊòØÈÄíÂ¢ûÁöÑÔºåÊâÄ‰ª•ÊàëÁî®‰∫Ü multimap<intÔºåstring>Êù•Â≠òÂÇ®ËøôÁßçÂÖ≥Á≥ªÔºàmultimap ÂØπ‰∫é key ÊòØËá™Â¢ûÈïøÊéíÂ∫èÔºåÂπ∂‰∏îÂèØ‰ª•Â≠òÂÇ®Áõ∏ÂêåÁöÑ keyÔºâ„ÄÇÊù•ÁúãÁúãÊàëÂØπÂÖ≥Á≥ªÂºèÁöÑ‰∏Ä‰∏™ËΩ¨Êç¢ÂáΩÊï∞Ôºö\n\n```\nmultimap<int,string> convertStrToMap(string operation)\n{\n¬† ¬† multimap<int,string> mapOp;\n¬† ¬† size_t len = operation.length();\n¬† ¬† int rank = 0;\n¬† ¬† int prior = 0;\n¬† ¬† for (int i = 0; i < len; i++) {\n¬† ¬† ¬† ¬† char letter = operation[i];\n¬† ¬† ¬† ¬† if (letter == '<') {\n¬† ¬† ¬† ¬† ¬† ¬† string str = operation.substr(prior, i - prior);\n¬† ¬† ¬† ¬† ¬† ¬† mapOp.insert(make_pair(rank, str));\n¬† ¬† ¬† ¬† ¬† ¬† if (i - prior == 1) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (str[0] >= 'A' && str[0] <= 'Z') {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;\n¬† ¬† ¬† ¬† ¬† ¬† rank++;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† if (letter == '=') {\n¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;\n¬† ¬† ¬† ¬† ¬† ¬† rank--;\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† string str = operation.substr(prior, len - prior);\n¬† ¬† mapOp.insert(make_pair(rank, str));\n¬† ¬† if (len - prior == 1) {\n¬† ¬† ¬† ¬† if (str[0] >= 'A' && str[0] <= 'Z') {\n¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† return mapOp;\n}\n```\n\nËøîÂõûÁöÑ mapOp Â∞±ÊòØÂ∞Ü string Á±ªÂûãÁöÑÂÖ≥Á≥ªÂºèËΩ¨Êç¢ÂêéÁöÑ multimapÔºåËøôÈáåÁöÑ key ÊòØ int Á±ªÂûã‰ª£Ë°®ËØ•ÂèòÈáèÊàñËÄÖÊï∞Â≠óÊòØÂú®ÂÖ≥Á≥ªÂºè‰ªÄ‰πàÂ±ÇÁ∫ßÔºåvalue ÊòØ string Á±ªÂûãÊñπ‰æøÂêéÈù¢ËΩ¨Êç¢ÊàêÊï∞Â≠óËøõË°åÊØîËæÉ„ÄÇ‰æãÂ¶ÇÔºåA<B<=EÔºåÂú® multimap ‰∏≠‰ºöÂ≠ò‰∏∫ÔΩõ0:A,1:B,1:EÔΩù„ÄÇËøôÊÆµ‰ª£Á†ÅËøòÊúâ‰∏™ varMap ÂèòÈáèÔºåÂÆÉÊòØ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáèÔºåÁî®Êù•ËÆ∞ÂΩïÂÖ≥Á≥ªÂºè‰∏≠Âá∫Áé∞ÁöÑÂèòÈáèÔºàÈ¢òÁõÆËßÑÂÆö‰∫ÜÂèòÈáèÂè™ËÉΩÂ§üÊòØ AÔºçZÔºâ„ÄÇ\n3„ÄÅÊúÄÂêéÂ∞±ÊòØËæìÂÖ•Êï∞ÊçÆÔºåÊõ¥Êñ∞ varMapÔºåÁÑ∂ÂêéÊ†πÊçÆÂÖ≥Á≥ªÂºèÊØîËæÉÁúãÊòØÂê¶Êª°Ë∂≥ÔºåËæìÂá∫ÁªìÊûú„ÄÇ‰ª£Á†ÅÔºö\n\n```\nint findValue(string input)\n{\n¬† ¬† if (input.size() == 1 && input[0] >= 'A' && input[0] <= 'Z') {\n¬† ¬† ¬† ¬† return varMap[input[0]];\n¬† ¬† }\n¬† ¬† return atoi(input.c_str());\n}\n\nvoid checker(vector<multimap<int,string>> opVec)\n{\n¬† ¬† bool pass = true;\n¬† ¬† for (int i = 0; i < opVec.size(); i++) {\n¬† ¬† ¬† ¬† multimap<int,string> operation = opVec[i];\n¬† ¬† ¬† ¬† multimap<int,string>::iterator it;\n¬† ¬† ¬† ¬† int rank1 = -1, rank2 = -1;\n¬† ¬† ¬† ¬† int value1, value2;\n¬† ¬† ¬† ¬† string var1, var2;\n¬† ¬† ¬† ¬† for (it = operation.begin(); it !=operation.end(); it++) {\n¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == -1) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† rank1 = it->first;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† var1 = it->second;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† continue;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† rank2 = it->first;\n¬† ¬† ¬† ¬† ¬† ¬† var2 = it->second;\n¬† ¬† ¬† ¬† ¬† ¬† value1 = findValue(var1);\n¬† ¬† ¬† ¬† ¬† ¬† value2 = findValue(var2);\n¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == rank2) { // <=\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 <= value2) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† else // <\n¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 < value2) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† ¬† ¬† if (!pass) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† break;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† ¬† ¬† var1 = var2;\n¬† ¬† ¬† ¬† ¬† ¬† rank1 = rank2;\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† if (!pass) {\n¬† ¬† ¬† ¬† ¬† ¬† break;\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† if (pass) {\n¬† ¬† ¬† ¬† cout<<\"Yes\"<<endl;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† cout<<\"No\"<<endl;\n¬† ¬† }\n}\n```\n\nÁî±‰∫éÂâçÈù¢ÂÖ≥Á≥ªÂºèÂ∑≤ÁªèÊåâÁªìÊûÑÂ≠òÂÇ®Â•Ω‰∫ÜÔºåÊâÄ‰ª•Âè™ÈúÄË¶Å‰∏ÄÊ≠•Ê≠•ÊØîËæÉÊ†°È™åÂç≥ÂèØ„ÄÇÂ±ÇÁ∫ß‰∏ÄÊ†∑ÁöÑÂèòÈáèÔºåvalue ÊÉ≥Á≠âÈÄöËøáÔºåÂ±ÇÁ∫ß‰∏ç‰∏ÄÊ†∑ÁöÑÔºåvalue1<value2 Âç≥ÂèØ„ÄÇ\n\nÁúã‰∏Ä‰∏ãÂà§ÂÆöÁªìÊûúÔºö\n![](http://upload-images.jianshu.io/upload_images/2641798-645fb746e176c24b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//  main.cpp\n//  Constraint Checker\n//\n//  Created by Jiao Liu on 7/18/16.\n//  Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#include <map>\n#include <vector>\n#include <string>\n#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\nmap<char,int> varMap;\n\nmultimap<int,string> convertStrToMap(string operation)\n{\n    multimap<int,string> mapOp;\n    size_t len = operation.length();\n    int rank = 0;\n    int prior = 0;\n    for (int i = 0; i < len; i++) {\n        char letter = operation[i];\n        if (letter == '<') {\n            string str = operation.substr(prior, i - prior);\n            mapOp.insert(make_pair(rank, str));\n            if (i - prior == 1) {\n                if (str[0] >= 'A' && str[0] <= 'Z') {\n                    varMap.insert(make_pair(str[0], 0));\n                }\n            }\n            prior = i + 1;\n            rank++;\n        }\n        if (letter == '=') {\n            prior = i + 1;\n            rank--;\n        }\n    }\n    string str = operation.substr(prior, len - prior);\n    mapOp.insert(make_pair(rank, str));\n    if (len - prior == 1) {\n        if (str[0] >= 'A' && str[0] <= 'Z') {\n            varMap.insert(make_pair(str[0], 0));\n        }\n    }\n    return mapOp;\n}\n\nint findValue(string input)\n{\n\n    if (input.size() == 1 && input[0] >= 'A' && input[0] <= 'Z') {\n        return varMap[input[0]];\n    }\n    return atoi(input.c_str());\n}\n\nvoid checker(vector<multimap<int,string>> opVec)\n{\n    bool pass = true;\n    for (int i = 0; i < opVec.size(); i++) {\n        multimap<int,string> operation = opVec[i];\n        multimap<int,string>::iterator it;\n        int rank1 = -1, rank2 = -1;\n        int value1, value2;\n        string var1, var2;\n        for (it = operation.begin(); it !=operation.end(); it++) {\n            if (rank1 == -1) {\n                rank1 = it->first;\n                var1 = it->second;\n                continue;\n            }\n            rank2 = it->first;\n            var2 = it->second;\n            value1 = findValue(var1);\n            value2 = findValue(var2);\n            if (rank1 == rank2) { // <=\n                if (value1 <= value2) {\n                    pass = true;\n                }\n                else\n                {\n                    pass = false;\n                }\n            }\n            else // <\n            {\n                if (value1 < value2) {\n                    pass = true;\n                }\n                else\n                {\n                    pass = false;\n                }\n            }\n\n            if (!pass) {\n                break;\n            }\n\n            var1 = var2;\n            rank1 = rank2;\n        }\n\n        if (!pass) {\n            break;\n        }\n    }\n\n    if (pass) {\n        cout<<\"Yes\"<<endl;\n    }\n    else\n    {\n        cout<<\"No\"<<endl;\n    }\n}\n\nint main()\n{\n    int N;\n    scanf(\"%d\",&N);\n    vector<multimap<int,string>> opVec;\n    while (N--) {\n        string op;\n        cin >> op;\n        multimap<int,string> operation = convertStrToMap(op);\n        opVec.push_back(operation);\n    }\n    int T;\n    scanf(\"%d\",&T);\n    while (T--) {\n        size_t numOfVar = varMap.size();\n        while (numOfVar--) {\n            char letter;\n            int value;\n            cin>>letter>>value;\n            varMap[letter] = value;\n        }\n        checker(opVec);\n    }\n    return 0;\n}\n\n```\n","slug":"2016ÂæÆËΩØÊé¢Êòü-Constraint-Checker","published":1,"updated":"2019-01-08T05:33:23.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpiz001vhqoxwlhp7msq","content":"<p>È¢òÁõÆÊù•Ê∫ê‰∫é 2016 Âπ¥ÂæÆËΩØÊé¢ÊòüÂ§è‰ª§Ëê•Âú®Á∫øÊäÄÊúØÁ¨îËØïÔºåÁ¨îËØïÁªìÊûúÊòØ‰Ωú‰∏∫ÁîÑÈÄâÂæÆËΩØ 2016 Ê†°ÊãõÊäÄÊúØÁ±ªËÅå‰ΩçÁöÑÈáçË¶ÅÂèÇËÄÉ‰πã‰∏Ä„ÄÇËøô‰∏™ËÄÉËØïÂØπ‰∫éÊÉ≥ËøõÂæÆËΩØÂÆû‰π†ÊàñÂ∑•‰ΩúÁöÑÂú®Ê†°ÁîüÊù•ËØ¥ËøòÊòØËõÆÈáçË¶ÅÁöÑ„ÄÇ<br>\nÊú¨‰∫∫Èó≤Êù•Êó†ËÅä‰πüÊ≥®ÂÜå‰∫ÜÂ∏êÂè∑Â∞ùËØï‰∫ÜÁ¨¨‰∏ÄÈ¢òÔºå‰ª£Á†ÅÁî® C++ÂÆûÁé∞ÔºåÊØîËæÉ‰π±Ôºå‰æ•Âπ∏‰∏ÄÊ¨°ÈÄöËøá„ÄÇ‰∏ãÈù¢Áõ¥Êé•Áúã‰∏Ä‰∏ãËÄÉÈ¢ò„ÄÇ</p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p>È¢òÁõÆÔºö</p>\n<p>Êó∂Èó¥ÈôêÂà∂:10000ms<br>\nÂçïÁÇπÊó∂Èôê:1000ms<br>\nÂÜÖÂ≠òÈôêÂà∂:256MB</p>\n<p>ÊèèËø∞<br>\nGiven a set of constraints like¬†<strong>0&lt;N&lt;=M&lt;=100</strong>¬†and values for all the variables, write a checker program to determine if the constraints are satisfied.<br>\nMore precisely, the format of constraints is:<br>\n<strong>token op token op ‚Ä¶ op token</strong><br>\nwhere each¬†token¬†is either a constant integer or a variable represented by a capital letter and each¬†op is either less-than ( &lt; ) or less-than-or-equal-to ( &lt;= ).¬†<br>\nËæìÂÖ•<br>\nThe first line contains an integer¬†N, the number of constraints. (1 ‚â§¬†N‚â§ 20)<br>\nEach of the following¬†N lines contains a constraint in the previous mentioned format.<br>\nThen follows an integer¬†T, the number of assignments to check. (1 ‚â§¬†T‚â§ 50)<br>\nEach assignment occupies¬†K lines where¬†K is the number of variables in the constraints.<br>\nEach line contains a capital letter and an integer, representing a variable and its value.<br>\nIt is guaranteed that:</p>\n<ol>\n<li>Every token in the constraints is either an integer from 0 to 1000000 or an variable represented by a capital letter from ‚ÄòA‚Äô to ‚ÄòZ‚Äô.</li>\n<li>There is no space in the constraints.</li>\n<li>In each assignment every variable appears exactly once and its value is from 0 to 1000000.¬†<br>\nËæìÂá∫<br>\nFor each assignment output Yes or No indicating if the constraints are satisfied.</li>\n</ol>\n<blockquote>\n<p>Ê†∑‰æãËæìÂÖ•<br>\n2<br>\nA&lt;B&lt;=E<br>\n3&lt;=E&lt;5<br>\n2<br>\nA 1<br>\nB 2<br>\nE 3<br>\nA 3<br>\nB 5<br>\nE 10</p>\n</blockquote>\n<blockquote>\n<p>Ê†∑‰æãËæìÂá∫<br>\nYes<br>\nNo</p>\n</blockquote>\n<p>Ëß£ÈáäÔºö<br>\nËøôÈÅìÈ¢òÈ¢òÁõÆËøòÊòØÊØîËæÉÂÆπÊòìÁêÜËß£ÔºåÂ∞±ÊòØÊ†πÊçÆËæìÂÖ•ÁöÑËã•Âπ≤‰∏™‰∏çÁ≠âÂºèÔºåÊ†°È™åÂêéÈù¢ËæìÂÖ•ÁöÑÊï∞ÊçÆÊòØÂê¶ÈÉΩÊª°Ë∂≥ÂâçÈù¢ÁöÑ‰∏çÁ≠âÂºèÔºåÊª°Ë∂≥Â∞±ËæìÂá∫ YesÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™‰∏çÊª°Ë∂≥Â∞±ËæìÂá∫ No„ÄÇÂ¶Ç‚ÄúA&lt;B&lt;=EÔºå3&lt;=E&lt;5‚ÄùËøô‰∏™‰∏§‰∏™ÂÖ≥Á≥ªÂºèÔºåÂØπ‰∫éËæìÂÖ• A Ôºù 1ÔºåB Ôºù 2ÔºåE Ôºù 3 ËÇØÂÆöÊª°Ë∂≥ÔºåÂõ†‰∏∫ 1&lt;2&lt;=3Ôºå3&lt;=3&lt;5„ÄÇËÄå A Ôºù 3, B Ôºù 5ÔºåE=10 Â∞±‰∏çÊª°Ë∂≥ÔºåÂõ†‰∏∫ 3&lt;=10&lt;5 ‰∏çÊàêÁ´ã„ÄÇ</p>\n<p>ÂàÜÊûêÔºö<br>\n1„ÄÅÁî±‰∫éÊúâÊâÄÊúâ‰∏çÁ≠âÂºèÈÉΩË¶ÅÈÄöËøáÊ†°È™åÊâçËæìÂá∫ YesÔºåÈÇ£‰πà‰ª£Ë°®Êàë‰ª¨Ë¶ÅÂú®ËæìÂÖ•ÁöÑÊó∂ÂÄôÂ∞±Â∞ÜÊâÄÊúâ‰∏çÁ≠âÂºèÂÖ≥Á≥ªÈÉΩÂ≠òËµ∑Êù•Êñπ‰æøÂêéÈù¢Ê†°È™åÔºåËøôÈáåÊàëÁî®‰∫Ü‰∏Ä‰∏™ vector Êù•Â≠òÂÇ®Ëøô‰∫õÂÖ≥Á≥ªÔºåÂêéÈù¢Ê†°È™åÁöÑÊó∂ÂÄôÈÅçÂéÜ vector ÈáåÈù¢ÊâÄÊúâÁöÑÂÄºÔºå‰∏Ä‰∏™‰∏™Ê†°È™å„ÄÇ<br>\n2„ÄÅÁî±‰∫éÊØè‰∏™‰∏çÁ≠âÂºèÂÖ≥Á≥ªÂè™Êúâ&quot;&lt;‚ÄúÊàñËÄÖ‚Äù&lt;=&quot;ÔºåËØ¥ÊòéËøô‰∏™ÂÖ≥Á≥ªÊòØÈÄíÂ¢ûÁöÑÔºåÊâÄ‰ª•ÊàëÁî®‰∫Ü multimap&lt;intÔºåstring&gt;Êù•Â≠òÂÇ®ËøôÁßçÂÖ≥Á≥ªÔºàmultimap ÂØπ‰∫é key ÊòØËá™Â¢ûÈïøÊéíÂ∫èÔºåÂπ∂‰∏îÂèØ‰ª•Â≠òÂÇ®Áõ∏ÂêåÁöÑ keyÔºâ„ÄÇÊù•ÁúãÁúãÊàëÂØπÂÖ≥Á≥ªÂºèÁöÑ‰∏Ä‰∏™ËΩ¨Êç¢ÂáΩÊï∞Ôºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multimap&lt;int,string&gt; convertStrToMap(string operation)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† multimap&lt;int,string&gt; mapOp;</span><br><span class=\"line\">¬† ¬† size_t len = operation.length();</span><br><span class=\"line\">¬† ¬† int rank = 0;</span><br><span class=\"line\">¬† ¬† int prior = 0;</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; len; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† char letter = operation[i];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (letter == &apos;&lt;&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† string str = operation.substr(prior, i - prior);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (i - prior == 1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank++;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (letter == &apos;=&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank--;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† string str = operation.substr(prior, len - prior);</span><br><span class=\"line\">¬† ¬† mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">¬† ¬† if (len - prior == 1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return mapOp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËøîÂõûÁöÑ mapOp Â∞±ÊòØÂ∞Ü string Á±ªÂûãÁöÑÂÖ≥Á≥ªÂºèËΩ¨Êç¢ÂêéÁöÑ multimapÔºåËøôÈáåÁöÑ key ÊòØ int Á±ªÂûã‰ª£Ë°®ËØ•ÂèòÈáèÊàñËÄÖÊï∞Â≠óÊòØÂú®ÂÖ≥Á≥ªÂºè‰ªÄ‰πàÂ±ÇÁ∫ßÔºåvalue ÊòØ string Á±ªÂûãÊñπ‰æøÂêéÈù¢ËΩ¨Êç¢ÊàêÊï∞Â≠óËøõË°åÊØîËæÉ„ÄÇ‰æãÂ¶ÇÔºåA&lt;B&lt;=EÔºåÂú® multimap ‰∏≠‰ºöÂ≠ò‰∏∫ÔΩõ0:A,1:B,1:EÔΩù„ÄÇËøôÊÆµ‰ª£Á†ÅËøòÊúâ‰∏™ varMap ÂèòÈáèÔºåÂÆÉÊòØ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáèÔºåÁî®Êù•ËÆ∞ÂΩïÂÖ≥Á≥ªÂºè‰∏≠Âá∫Áé∞ÁöÑÂèòÈáèÔºàÈ¢òÁõÆËßÑÂÆö‰∫ÜÂèòÈáèÂè™ËÉΩÂ§üÊòØ AÔºçZÔºâ„ÄÇ<br>\n3„ÄÅÊúÄÂêéÂ∞±ÊòØËæìÂÖ•Êï∞ÊçÆÔºåÊõ¥Êñ∞ varMapÔºåÁÑ∂ÂêéÊ†πÊçÆÂÖ≥Á≥ªÂºèÊØîËæÉÁúãÊòØÂê¶Êª°Ë∂≥ÔºåËæìÂá∫ÁªìÊûú„ÄÇ‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int findValue(string input)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (input.size() == 1 &amp;&amp; input[0] &gt;= &apos;A&apos; &amp;&amp; input[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return varMap[input[0]];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return atoi(input.c_str());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void checker(vector&lt;multimap&lt;int,string&gt;&gt; opVec)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† bool pass = true;</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; opVec.size(); i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† multimap&lt;int,string&gt; operation = opVec[i];</span><br><span class=\"line\">¬† ¬† ¬† ¬† multimap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int rank1 = -1, rank2 = -1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int value1, value2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† string var1, var2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† for (it = operation.begin(); it !=operation.end(); it++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == -1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† rank1 = it-&gt;first;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† var1 = it-&gt;second;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† continue;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank2 = it-&gt;first;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† var2 = it-&gt;second;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† value1 = findValue(var1);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† value2 = findValue(var2);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == rank2) &#123; // &lt;=</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 &lt;= value2) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† else // &lt;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 &lt; value2) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (!pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† break;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† var1 = var2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank1 = rank2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (!pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† break;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† if (pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† cout&lt;&lt;&quot;Yes&quot;&lt;&lt;endl;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† cout&lt;&lt;&quot;No&quot;&lt;&lt;endl;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Áî±‰∫éÂâçÈù¢ÂÖ≥Á≥ªÂºèÂ∑≤ÁªèÊåâÁªìÊûÑÂ≠òÂÇ®Â•Ω‰∫ÜÔºåÊâÄ‰ª•Âè™ÈúÄË¶Å‰∏ÄÊ≠•Ê≠•ÊØîËæÉÊ†°È™åÂç≥ÂèØ„ÄÇÂ±ÇÁ∫ß‰∏ÄÊ†∑ÁöÑÂèòÈáèÔºåvalue ÊÉ≥Á≠âÈÄöËøáÔºåÂ±ÇÁ∫ß‰∏ç‰∏ÄÊ†∑ÁöÑÔºåvalue1&lt;value2 Âç≥ÂèØ„ÄÇ</p>\n<p>Áúã‰∏Ä‰∏ãÂà§ÂÆöÁªìÊûúÔºö<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/2641798-645fb746e176c24b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//  main.cpp</span><br><span class=\"line\">//  Constraint Checker</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by Jiao Liu on 7/18/16.</span><br><span class=\"line\">//  Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;map&gt;</span><br><span class=\"line\">#include &lt;vector&gt;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">map&lt;char,int&gt; varMap;</span><br><span class=\"line\"></span><br><span class=\"line\">multimap&lt;int,string&gt; convertStrToMap(string operation)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    multimap&lt;int,string&gt; mapOp;</span><br><span class=\"line\">    size_t len = operation.length();</span><br><span class=\"line\">    int rank = 0;</span><br><span class=\"line\">    int prior = 0;</span><br><span class=\"line\">    for (int i = 0; i &lt; len; i++) &#123;</span><br><span class=\"line\">        char letter = operation[i];</span><br><span class=\"line\">        if (letter == &apos;&lt;&apos;) &#123;</span><br><span class=\"line\">            string str = operation.substr(prior, i - prior);</span><br><span class=\"line\">            mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">            if (i - prior == 1) &#123;</span><br><span class=\"line\">                if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">                    varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            prior = i + 1;</span><br><span class=\"line\">            rank++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (letter == &apos;=&apos;) &#123;</span><br><span class=\"line\">            prior = i + 1;</span><br><span class=\"line\">            rank--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    string str = operation.substr(prior, len - prior);</span><br><span class=\"line\">    mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">    if (len - prior == 1) &#123;</span><br><span class=\"line\">        if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">            varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return mapOp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int findValue(string input)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (input.size() == 1 &amp;&amp; input[0] &gt;= &apos;A&apos; &amp;&amp; input[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">        return varMap[input[0]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return atoi(input.c_str());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void checker(vector&lt;multimap&lt;int,string&gt;&gt; opVec)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    bool pass = true;</span><br><span class=\"line\">    for (int i = 0; i &lt; opVec.size(); i++) &#123;</span><br><span class=\"line\">        multimap&lt;int,string&gt; operation = opVec[i];</span><br><span class=\"line\">        multimap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">        int rank1 = -1, rank2 = -1;</span><br><span class=\"line\">        int value1, value2;</span><br><span class=\"line\">        string var1, var2;</span><br><span class=\"line\">        for (it = operation.begin(); it !=operation.end(); it++) &#123;</span><br><span class=\"line\">            if (rank1 == -1) &#123;</span><br><span class=\"line\">                rank1 = it-&gt;first;</span><br><span class=\"line\">                var1 = it-&gt;second;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            rank2 = it-&gt;first;</span><br><span class=\"line\">            var2 = it-&gt;second;</span><br><span class=\"line\">            value1 = findValue(var1);</span><br><span class=\"line\">            value2 = findValue(var2);</span><br><span class=\"line\">            if (rank1 == rank2) &#123; // &lt;=</span><br><span class=\"line\">                if (value1 &lt;= value2) &#123;</span><br><span class=\"line\">                    pass = true;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pass = false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else // &lt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if (value1 &lt; value2) &#123;</span><br><span class=\"line\">                    pass = true;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pass = false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            if (!pass) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            var1 = var2;</span><br><span class=\"line\">            rank1 = rank2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!pass) &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (pass) &#123;</span><br><span class=\"line\">        cout&lt;&lt;&quot;Yes&quot;&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout&lt;&lt;&quot;No&quot;&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int N;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">    vector&lt;multimap&lt;int,string&gt;&gt; opVec;</span><br><span class=\"line\">    while (N--) &#123;</span><br><span class=\"line\">        string op;</span><br><span class=\"line\">        cin &gt;&gt; op;</span><br><span class=\"line\">        multimap&lt;int,string&gt; operation = convertStrToMap(op);</span><br><span class=\"line\">        opVec.push_back(operation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while (T--) &#123;</span><br><span class=\"line\">        size_t numOfVar = varMap.size();</span><br><span class=\"line\">        while (numOfVar--) &#123;</span><br><span class=\"line\">            char letter;</span><br><span class=\"line\">            int value;</span><br><span class=\"line\">            cin&gt;&gt;letter&gt;&gt;value;</span><br><span class=\"line\">            varMap[letter] = value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        checker(opVec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>È¢òÁõÆÊù•Ê∫ê‰∫é 2016 Âπ¥ÂæÆËΩØÊé¢ÊòüÂ§è‰ª§Ëê•Âú®Á∫øÊäÄÊúØÁ¨îËØïÔºåÁ¨îËØïÁªìÊûúÊòØ‰Ωú‰∏∫ÁîÑÈÄâÂæÆËΩØ 2016 Ê†°ÊãõÊäÄÊúØÁ±ªËÅå‰ΩçÁöÑÈáçË¶ÅÂèÇËÄÉ‰πã‰∏Ä„ÄÇËøô‰∏™ËÄÉËØïÂØπ‰∫éÊÉ≥ËøõÂæÆËΩØÂÆû‰π†ÊàñÂ∑•‰ΩúÁöÑÂú®Ê†°ÁîüÊù•ËØ¥ËøòÊòØËõÆÈáçË¶ÅÁöÑ„ÄÇ<br>\nÊú¨‰∫∫Èó≤Êù•Êó†ËÅä‰πüÊ≥®ÂÜå‰∫ÜÂ∏êÂè∑Â∞ùËØï‰∫ÜÁ¨¨‰∏ÄÈ¢òÔºå‰ª£Á†ÅÁî® C++ÂÆûÁé∞ÔºåÊØîËæÉ‰π±Ôºå‰æ•Âπ∏‰∏ÄÊ¨°ÈÄöËøá„ÄÇ‰∏ãÈù¢Áõ¥Êé•Áúã‰∏Ä‰∏ãËÄÉÈ¢ò„ÄÇ</p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-0227972e7244b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p>È¢òÁõÆÔºö</p>\n<p>Êó∂Èó¥ÈôêÂà∂:10000ms<br>\nÂçïÁÇπÊó∂Èôê:1000ms<br>\nÂÜÖÂ≠òÈôêÂà∂:256MB</p>\n<p>ÊèèËø∞<br>\nGiven a set of constraints like¬†<strong>0&lt;N&lt;=M&lt;=100</strong>¬†and values for all the variables, write a checker program to determine if the constraints are satisfied.<br>\nMore precisely, the format of constraints is:<br>\n<strong>token op token op ‚Ä¶ op token</strong><br>\nwhere each¬†token¬†is either a constant integer or a variable represented by a capital letter and each¬†op is either less-than ( &lt; ) or less-than-or-equal-to ( &lt;= ).¬†<br>\nËæìÂÖ•<br>\nThe first line contains an integer¬†N, the number of constraints. (1 ‚â§¬†N‚â§ 20)<br>\nEach of the following¬†N lines contains a constraint in the previous mentioned format.<br>\nThen follows an integer¬†T, the number of assignments to check. (1 ‚â§¬†T‚â§ 50)<br>\nEach assignment occupies¬†K lines where¬†K is the number of variables in the constraints.<br>\nEach line contains a capital letter and an integer, representing a variable and its value.<br>\nIt is guaranteed that:</p>\n<ol>\n<li>Every token in the constraints is either an integer from 0 to 1000000 or an variable represented by a capital letter from ‚ÄòA‚Äô to ‚ÄòZ‚Äô.</li>\n<li>There is no space in the constraints.</li>\n<li>In each assignment every variable appears exactly once and its value is from 0 to 1000000.¬†<br>\nËæìÂá∫<br>\nFor each assignment output Yes or No indicating if the constraints are satisfied.</li>\n</ol>\n<blockquote>\n<p>Ê†∑‰æãËæìÂÖ•<br>\n2<br>\nA&lt;B&lt;=E<br>\n3&lt;=E&lt;5<br>\n2<br>\nA 1<br>\nB 2<br>\nE 3<br>\nA 3<br>\nB 5<br>\nE 10</p>\n</blockquote>\n<blockquote>\n<p>Ê†∑‰æãËæìÂá∫<br>\nYes<br>\nNo</p>\n</blockquote>\n<p>Ëß£ÈáäÔºö<br>\nËøôÈÅìÈ¢òÈ¢òÁõÆËøòÊòØÊØîËæÉÂÆπÊòìÁêÜËß£ÔºåÂ∞±ÊòØÊ†πÊçÆËæìÂÖ•ÁöÑËã•Âπ≤‰∏™‰∏çÁ≠âÂºèÔºåÊ†°È™åÂêéÈù¢ËæìÂÖ•ÁöÑÊï∞ÊçÆÊòØÂê¶ÈÉΩÊª°Ë∂≥ÂâçÈù¢ÁöÑ‰∏çÁ≠âÂºèÔºåÊª°Ë∂≥Â∞±ËæìÂá∫ YesÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™‰∏çÊª°Ë∂≥Â∞±ËæìÂá∫ No„ÄÇÂ¶Ç‚ÄúA&lt;B&lt;=EÔºå3&lt;=E&lt;5‚ÄùËøô‰∏™‰∏§‰∏™ÂÖ≥Á≥ªÂºèÔºåÂØπ‰∫éËæìÂÖ• A Ôºù 1ÔºåB Ôºù 2ÔºåE Ôºù 3 ËÇØÂÆöÊª°Ë∂≥ÔºåÂõ†‰∏∫ 1&lt;2&lt;=3Ôºå3&lt;=3&lt;5„ÄÇËÄå A Ôºù 3, B Ôºù 5ÔºåE=10 Â∞±‰∏çÊª°Ë∂≥ÔºåÂõ†‰∏∫ 3&lt;=10&lt;5 ‰∏çÊàêÁ´ã„ÄÇ</p>\n<p>ÂàÜÊûêÔºö<br>\n1„ÄÅÁî±‰∫éÊúâÊâÄÊúâ‰∏çÁ≠âÂºèÈÉΩË¶ÅÈÄöËøáÊ†°È™åÊâçËæìÂá∫ YesÔºåÈÇ£‰πà‰ª£Ë°®Êàë‰ª¨Ë¶ÅÂú®ËæìÂÖ•ÁöÑÊó∂ÂÄôÂ∞±Â∞ÜÊâÄÊúâ‰∏çÁ≠âÂºèÂÖ≥Á≥ªÈÉΩÂ≠òËµ∑Êù•Êñπ‰æøÂêéÈù¢Ê†°È™åÔºåËøôÈáåÊàëÁî®‰∫Ü‰∏Ä‰∏™ vector Êù•Â≠òÂÇ®Ëøô‰∫õÂÖ≥Á≥ªÔºåÂêéÈù¢Ê†°È™åÁöÑÊó∂ÂÄôÈÅçÂéÜ vector ÈáåÈù¢ÊâÄÊúâÁöÑÂÄºÔºå‰∏Ä‰∏™‰∏™Ê†°È™å„ÄÇ<br>\n2„ÄÅÁî±‰∫éÊØè‰∏™‰∏çÁ≠âÂºèÂÖ≥Á≥ªÂè™Êúâ&quot;&lt;‚ÄúÊàñËÄÖ‚Äù&lt;=&quot;ÔºåËØ¥ÊòéËøô‰∏™ÂÖ≥Á≥ªÊòØÈÄíÂ¢ûÁöÑÔºåÊâÄ‰ª•ÊàëÁî®‰∫Ü multimap&lt;intÔºåstring&gt;Êù•Â≠òÂÇ®ËøôÁßçÂÖ≥Á≥ªÔºàmultimap ÂØπ‰∫é key ÊòØËá™Â¢ûÈïøÊéíÂ∫èÔºåÂπ∂‰∏îÂèØ‰ª•Â≠òÂÇ®Áõ∏ÂêåÁöÑ keyÔºâ„ÄÇÊù•ÁúãÁúãÊàëÂØπÂÖ≥Á≥ªÂºèÁöÑ‰∏Ä‰∏™ËΩ¨Êç¢ÂáΩÊï∞Ôºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multimap&lt;int,string&gt; convertStrToMap(string operation)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† multimap&lt;int,string&gt; mapOp;</span><br><span class=\"line\">¬† ¬† size_t len = operation.length();</span><br><span class=\"line\">¬† ¬† int rank = 0;</span><br><span class=\"line\">¬† ¬† int prior = 0;</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; len; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† char letter = operation[i];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (letter == &apos;&lt;&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† string str = operation.substr(prior, i - prior);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (i - prior == 1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank++;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (letter == &apos;=&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† prior = i + 1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank--;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† string str = operation.substr(prior, len - prior);</span><br><span class=\"line\">¬† ¬† mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">¬† ¬† if (len - prior == 1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return mapOp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËøîÂõûÁöÑ mapOp Â∞±ÊòØÂ∞Ü string Á±ªÂûãÁöÑÂÖ≥Á≥ªÂºèËΩ¨Êç¢ÂêéÁöÑ multimapÔºåËøôÈáåÁöÑ key ÊòØ int Á±ªÂûã‰ª£Ë°®ËØ•ÂèòÈáèÊàñËÄÖÊï∞Â≠óÊòØÂú®ÂÖ≥Á≥ªÂºè‰ªÄ‰πàÂ±ÇÁ∫ßÔºåvalue ÊòØ string Á±ªÂûãÊñπ‰æøÂêéÈù¢ËΩ¨Êç¢ÊàêÊï∞Â≠óËøõË°åÊØîËæÉ„ÄÇ‰æãÂ¶ÇÔºåA&lt;B&lt;=EÔºåÂú® multimap ‰∏≠‰ºöÂ≠ò‰∏∫ÔΩõ0:A,1:B,1:EÔΩù„ÄÇËøôÊÆµ‰ª£Á†ÅËøòÊúâ‰∏™ varMap ÂèòÈáèÔºåÂÆÉÊòØ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáèÔºåÁî®Êù•ËÆ∞ÂΩïÂÖ≥Á≥ªÂºè‰∏≠Âá∫Áé∞ÁöÑÂèòÈáèÔºàÈ¢òÁõÆËßÑÂÆö‰∫ÜÂèòÈáèÂè™ËÉΩÂ§üÊòØ AÔºçZÔºâ„ÄÇ<br>\n3„ÄÅÊúÄÂêéÂ∞±ÊòØËæìÂÖ•Êï∞ÊçÆÔºåÊõ¥Êñ∞ varMapÔºåÁÑ∂ÂêéÊ†πÊçÆÂÖ≥Á≥ªÂºèÊØîËæÉÁúãÊòØÂê¶Êª°Ë∂≥ÔºåËæìÂá∫ÁªìÊûú„ÄÇ‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int findValue(string input)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (input.size() == 1 &amp;&amp; input[0] &gt;= &apos;A&apos; &amp;&amp; input[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return varMap[input[0]];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return atoi(input.c_str());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void checker(vector&lt;multimap&lt;int,string&gt;&gt; opVec)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† bool pass = true;</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; opVec.size(); i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† multimap&lt;int,string&gt; operation = opVec[i];</span><br><span class=\"line\">¬† ¬† ¬† ¬† multimap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int rank1 = -1, rank2 = -1;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int value1, value2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† string var1, var2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† for (it = operation.begin(); it !=operation.end(); it++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == -1) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† rank1 = it-&gt;first;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† var1 = it-&gt;second;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† continue;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank2 = it-&gt;first;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† var2 = it-&gt;second;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† value1 = findValue(var1);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† value2 = findValue(var2);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (rank1 == rank2) &#123; // &lt;=</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 &lt;= value2) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† else // &lt;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (value1 &lt; value2) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† pass = false;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (!pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† break;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† var1 = var2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† rank1 = rank2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (!pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† break;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† if (pass) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† cout&lt;&lt;&quot;Yes&quot;&lt;&lt;endl;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† cout&lt;&lt;&quot;No&quot;&lt;&lt;endl;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Áî±‰∫éÂâçÈù¢ÂÖ≥Á≥ªÂºèÂ∑≤ÁªèÊåâÁªìÊûÑÂ≠òÂÇ®Â•Ω‰∫ÜÔºåÊâÄ‰ª•Âè™ÈúÄË¶Å‰∏ÄÊ≠•Ê≠•ÊØîËæÉÊ†°È™åÂç≥ÂèØ„ÄÇÂ±ÇÁ∫ß‰∏ÄÊ†∑ÁöÑÂèòÈáèÔºåvalue ÊÉ≥Á≠âÈÄöËøáÔºåÂ±ÇÁ∫ß‰∏ç‰∏ÄÊ†∑ÁöÑÔºåvalue1&lt;value2 Âç≥ÂèØ„ÄÇ</p>\n<p>Áúã‰∏Ä‰∏ãÂà§ÂÆöÁªìÊûúÔºö<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/2641798-645fb746e176c24b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//  main.cpp</span><br><span class=\"line\">//  Constraint Checker</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by Jiao Liu on 7/18/16.</span><br><span class=\"line\">//  Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;map&gt;</span><br><span class=\"line\">#include &lt;vector&gt;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">map&lt;char,int&gt; varMap;</span><br><span class=\"line\"></span><br><span class=\"line\">multimap&lt;int,string&gt; convertStrToMap(string operation)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    multimap&lt;int,string&gt; mapOp;</span><br><span class=\"line\">    size_t len = operation.length();</span><br><span class=\"line\">    int rank = 0;</span><br><span class=\"line\">    int prior = 0;</span><br><span class=\"line\">    for (int i = 0; i &lt; len; i++) &#123;</span><br><span class=\"line\">        char letter = operation[i];</span><br><span class=\"line\">        if (letter == &apos;&lt;&apos;) &#123;</span><br><span class=\"line\">            string str = operation.substr(prior, i - prior);</span><br><span class=\"line\">            mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">            if (i - prior == 1) &#123;</span><br><span class=\"line\">                if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">                    varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            prior = i + 1;</span><br><span class=\"line\">            rank++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (letter == &apos;=&apos;) &#123;</span><br><span class=\"line\">            prior = i + 1;</span><br><span class=\"line\">            rank--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    string str = operation.substr(prior, len - prior);</span><br><span class=\"line\">    mapOp.insert(make_pair(rank, str));</span><br><span class=\"line\">    if (len - prior == 1) &#123;</span><br><span class=\"line\">        if (str[0] &gt;= &apos;A&apos; &amp;&amp; str[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">            varMap.insert(make_pair(str[0], 0));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return mapOp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int findValue(string input)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (input.size() == 1 &amp;&amp; input[0] &gt;= &apos;A&apos; &amp;&amp; input[0] &lt;= &apos;Z&apos;) &#123;</span><br><span class=\"line\">        return varMap[input[0]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return atoi(input.c_str());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void checker(vector&lt;multimap&lt;int,string&gt;&gt; opVec)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    bool pass = true;</span><br><span class=\"line\">    for (int i = 0; i &lt; opVec.size(); i++) &#123;</span><br><span class=\"line\">        multimap&lt;int,string&gt; operation = opVec[i];</span><br><span class=\"line\">        multimap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">        int rank1 = -1, rank2 = -1;</span><br><span class=\"line\">        int value1, value2;</span><br><span class=\"line\">        string var1, var2;</span><br><span class=\"line\">        for (it = operation.begin(); it !=operation.end(); it++) &#123;</span><br><span class=\"line\">            if (rank1 == -1) &#123;</span><br><span class=\"line\">                rank1 = it-&gt;first;</span><br><span class=\"line\">                var1 = it-&gt;second;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            rank2 = it-&gt;first;</span><br><span class=\"line\">            var2 = it-&gt;second;</span><br><span class=\"line\">            value1 = findValue(var1);</span><br><span class=\"line\">            value2 = findValue(var2);</span><br><span class=\"line\">            if (rank1 == rank2) &#123; // &lt;=</span><br><span class=\"line\">                if (value1 &lt;= value2) &#123;</span><br><span class=\"line\">                    pass = true;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pass = false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else // &lt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if (value1 &lt; value2) &#123;</span><br><span class=\"line\">                    pass = true;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pass = false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            if (!pass) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            var1 = var2;</span><br><span class=\"line\">            rank1 = rank2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!pass) &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (pass) &#123;</span><br><span class=\"line\">        cout&lt;&lt;&quot;Yes&quot;&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout&lt;&lt;&quot;No&quot;&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int N;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">    vector&lt;multimap&lt;int,string&gt;&gt; opVec;</span><br><span class=\"line\">    while (N--) &#123;</span><br><span class=\"line\">        string op;</span><br><span class=\"line\">        cin &gt;&gt; op;</span><br><span class=\"line\">        multimap&lt;int,string&gt; operation = convertStrToMap(op);</span><br><span class=\"line\">        opVec.push_back(operation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while (T--) &#123;</span><br><span class=\"line\">        size_t numOfVar = varMap.size();</span><br><span class=\"line\">        while (numOfVar--) &#123;</span><br><span class=\"line\">            char letter;</span><br><span class=\"line\">            int value;</span><br><span class=\"line\">            cin&gt;&gt;letter&gt;&gt;value;</span><br><span class=\"line\">            varMap[letter] = value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        checker(opVec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂","date":"2017-04-28T02:42:21.000Z","toc":true,"thumbnail":"http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","_content":"\n## ÂâçË®Ä\n\n---\n\nPrisma Âú® 2016 ‰∏äÁ∫øÂêéÂ∞±Â§ßÁÅ´ÔºåËØ• APP ÊòØÂà©Áî®[Á•ûÁªèÁΩëÁªú](https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C)Âíå[‰∫∫Â∑•Êô∫ËÉΩ](https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD)ÊäÄÊúØÔºå‰∏∫ÊôÆÈÄöÁÖßÁâáÂä†ÂÖ•Ëâ∫ÊúØÊïàÊûúÁöÑÁÖßÁâáÁºñËæëËΩØ‰ª∂„ÄÇ\n\nÂêåÂπ¥ Google ‰πüÂèëÂ∏É‰∫Ü‰∏ÄÁØá„ÄäA LEARNED REPRESENTATION FOR ARTISTIC STYLE„ÄãËÆ∫ÊñáÔºåÂÆûÁé∞‰∫ÜÂâçÂêëËøêÁÆó‰∏ÄÊ¨°‰∏∫ÁÖßÁâáÊï¥ÂêàÂ§öÁßçËâ∫ÊúØÈ£éÊ†ºÁöÑÂäüËÉΩÔºåÂπ∂‰∏î‰ºòÂåñ‰∫ÜÂÜÖÂ≠ò‰ΩøÁî®ÂíåËøêÁÆóÈÄüÂ∫¶ÔºåÂèØ‰ª•Âú®ÁßªÂä®ËÆæÂ§á‰∏äÂø´ÈÄüËøêÁÆó„ÄÇ\n\nÊúÄËøëÂú®Á†îÁ©∂ Tensorflow Êï¥Âêà iOS ËøáÁ®ã‰∏≠ÔºåÂèëÁé∞ google ÂÖ¨ÂºÄ‰∫ÜËÆ∫ÊñáÂÆûÁé∞ÁöÑÊ∫êÁ†ÅÂíåËÆ≠ÁªÉÊï∞ÊçÆÔºå‰πüÂ∞±ÊòØËØ¥Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáËá™Â∑±ÂÜô‰∏Ä‰∏™ÂâçÂêëËøêÁÆóÂõæÔºåÊï¥ÂêàÂÖ∂ËÆ≠ÁªÉÂèÇÊï∞Â∞±ÂèØ‰ª•Âø´ÈÄüÂÆûÁé∞Á±ª Prisma ÁöÑÂ∫îÁî®„ÄÇ\n\n‰∏ãÈù¢Â∞±‰ªãÁªç‰∏Ä‰∏ãÂ¶Ç‰ΩïÂú® iPhone ‰∏äË∑ë‰∏Ä‰∏™Ëá™Â∑±ÁöÑ**\"Prisma\"**„ÄÇ\n\n<!-- more -->\n\n![ÊãõË¥¢ÂíåÂíïÂôú](http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÂáÜÂ§áÂ∑•‰Ωú\n\n---\n\n1. ÂÆâË£Ö[Tensorflow](https://www.tensorflow.org/versions/r0.12/get_started/os_setup.html#download-and-setup)ÔºåËøô‰∏™ÂÆòÁΩë‰∏äÊúâËØ¶ÁªÜÊïôÁ®ãËøôÈáåÂ∞±‰∏çÂ§öËØ¥‰∫Ü„ÄÇ\n2. Êê≠Âª∫[iOS+Tensorflow](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/ios_examples/)Â∑•Á®ãÔºåËøô‰∏™ÂèØ‰ª•Ê†πÊçÆ Git ‰∏äÁöÑÊ≠•È™§ÂÆûÁé∞Ôºå‰πüÂèØ‰ª•ÂèÇËÄÉÂÆòÊñπÁöÑ Demo Á®ãÂ∫èÈÖçÁΩÆ„ÄÇÔºàËøô‰∏™ËøáÁ®ãÊúâÂæàÂ§öÂùëÔºåÂ§öÊ¨°Â∞ùËØïÔºåÂ∫îËØ•ÂèØ‰ª•ÈÖçÁΩÆÊàêÂäüÔºâ\n3. ‰∏ãËΩΩÊ®°ÂûãÔºåÊú¨Ê¨°‰ΩøÁî®ÁöÑÊ®°ÂûãÊòØ[image_stylization](https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization)Ôºågoogle Â∑≤ÂºÄÊ∫êÂú® GitHub ‰∏ä„ÄÇ\n4. ‰∏ãËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÂèÇÊï∞ÔºåGoogle Êèê‰æõ‰∫Ü 2 ‰∏™Ôºö\n   [Monet](http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-monet.ckpt)\n   [Varied](http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-varied.ckpt)\n   Monet ËÆ≠ÁªÉ‰∫Ü 10 ÁßçËâ∫ÊúØÂõæÁâáÔºåVaried ËÆ≠ÁªÉ‰∫Ü 32 Áßç„ÄÇ\n   ÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•Ëá™Â∑±ËÆ≠ÁªÉËâ∫ÊúØÂõæÁâáÔºå‰ΩÜÊòØÂæó‰∏ãËΩΩ VGG ÁöÑËÆ≠ÁªÉÂèÇÊï∞Âíå ImageNet Êï∞ÊçÆÔºåÁÑ∂ÂêéËá™Â∑±ËÆ≠ÁªÉÔºåÊØîËæÉËä±Êó∂Èó¥„ÄÇ\n\n## ÊûÑÂª∫ËÆ°ÁÆóÂõæ\n\n---\n\nËôΩÁÑ∂ Google Êèê‰æõ‰∫ÜÊ®°ÂûãÁöÑÊ∫êÁ†ÅÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâÂú®Ê∫êÁ†Å‰∏≠ËæìÂá∫ËøêÁÆóÂõæÂ∑≤Êñπ‰æøËøÅÁßªÂà∞ÁßªÂä®ËÆæÂ§á‰∏≠‰ΩøÁî®ÔºåAndroid ÁöÑ Demo ‰∏≠ÂÄíÊòØÊèê‰æõ‰∫ÜÁîüÊàêÁöÑ pbÔºåÂ¶Ç‰ΩïËßâÂæóËá™Â∑±ÂÜôËÆ°ÁÆóÂõæÈ∫ªÁÉ¶ÂèØ‰ª•Áõ¥Êé•Êã∑Âà∞Ëá™Â∑± iOS Â∑•Á®ã‰∏≠‰ΩøÁî®„ÄÇ\n\nÊàëËøôÈáåÂàõÂª∫‰∫Ü‰∏Ä‰∏™ python ÁöÑÂ∑•Á®ãÔºåÁÑ∂ÂêéÊää Google Ê∫êÁ†Å‰∏≠ model.py Áõ∏ÂÖ≥ÁöÑÊñá‰ª∂ÈÉΩÂä†ÂÖ•‰∫ÜÂ∑•Á®ã„ÄÇ\nÊàëÁöÑÂª∫Âõæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\nimport numpy as np\nimport tensorflow as tf\nimport ast\nimport os\nfrom tensorflow.python import pywrap_tensorflow\n\nfrom matplotlib import pyplot\nfrom matplotlib.pyplot import imshow\n\nimport image_utils\nimport model\nimport ops\nimport argparse\nimport sys\n\n\nnum_styles = 32\nimgWidth = 512\nimgHeight = 512\nchannel = 3\ncheckpoint = \"/Users/Jiao/Desktop/TFProject/style-image/checkpoint/multistyle-pastiche-generator-varied.ckpt\"\n\ninputImage = tf.placeholder(tf.float32,shape=[None,imgWidth,imgHeight,channel],name=\"input\")\nstyles = tf.placeholder(tf.float32,shape=[num_styles],name=\"style\")\n\nwith tf.name_scope(\"\"):\n    transform = model.transform(inputImage,\n                            normalizer_fn=ops.weighted_instance_norm,\n                            normalizer_params={\n                                # 'weights': tf.constant(mixture),\n                                'weights' : styles,\n                                'num_categories': num_styles,\n                                'center': True,\n                                'scale': True})\n\nmodel_saver = tf.train.Saver(tf.global_variables())\n\nwith tf.Session() as sess:\n    tf.train.write_graph(sess.graph_def, \"/Users/Jiao/Desktop/TFProject/style-image/protobuf\", \"input.pb\")\n    #checkpoint = os.path.expanduser(checkpoint)\n    #if tf.gfile.IsDirectory(checkpoint):\n    #    checkpoint = tf.train.latest_checkpoint(checkpoint)\n    #    tf.logging.info('loading latest checkpoint file: {}'.format(checkpoint))\n    #model_saver.restore(sess, checkpoint)\n\n    #newstyle = np.zeros([num_styles], dtype=np.float32)\n    #newstyle[18] = 0.5\n    #newstyle[17] = 0.5\n    #newImage = np.zeros((1,imgWidth,imgHeight,channel))\n    #style_image = transform.eval(feed_dict={inputImage:newImage,styles:newstyle})\n    #style_image = style_image[0]\n    #imshow(style_image)\n    #pyplot.show()\n```\n\nËøôÈáåËæìÂÖ•ËäÇÁÇπÊòØ`input`Âíå`style`ÔºåËæìÂá∫ËäÇÁÇπÊòØ model ‰∏≠ÁöÑ`transformer/expand/conv3/conv/Sigmoid`„ÄÇ\n\nÂà∞Ê≠§Â∞±Â∞ÜÊ®°ÂûãÁöÑËÆ°ÁÆóÂõæ‰øùÂ≠òÂà∞‰∫ÜÊú¨Âú∞Êñá‰ª∂Â§π‰∏≠„ÄÇ\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂõæÂíå ckpt ‰∏≠ÁöÑÂèÇÊï∞ÂêàÂπ∂ÔºåÂπ∂‰∏îÁîüÊàêÁßªÂä®Á´ØÁöÑÂèØ‰ª•‰ΩøÁî®ÁöÑ pb Êñá‰ª∂ÔºåËøô‰∏ÄÊ≠•ÂèØ‰ª•ÂèÇËÄÉÊàë‰∏ä‰∏ÄÁØáÊñáÁ´†[„ÄäiOS+Tensorflow ÂÆûÁé∞ÂõæÂÉèËØÜÂà´„Äã](http://www.jianshu.com/p/f096fe2212ce)ÔºåÂæàÂÆπÊòìÂ∞±ÂÆûÁé∞„ÄÇ\n\n## iOS Â∑•Á®ã\n\n---\n\nÂú®‰∏äÈù¢ÂáÜÂ§áÂ∑•‰Ωú‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÊåâÊ≠•È™§Êê≠Âª∫Â•Ω iOS+TF ÁöÑÂ∑•Á®ãÔºåËøôÈáå‰Ω†Âè™ÈúÄË¶ÅÂØºÂÖ•ÁîüÊàêÁöÑÊúÄÁªà pb Êñá‰ª∂Â∞±Ë°å‰∫Ü„ÄÇÂ∑•Á®ãÁªìÊûÑÂ¶ÇÂõæÔºö\n\n![XCodeÂ∑•Á®ã](http://upload-images.jianshu.io/upload_images/2641798-ca34abd1c875504c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nÁÑ∂ÂêéÂú® iOS ‰ΩøÁî® pb Êñá‰ª∂ÔºåÊàëËøôÈáåÁõ¥Êé•ÂØºÂÖ•‰∫Ü Google Êèê‰æõÁöÑ`tensorflow_utils`Ôºå‰ΩøÁî®Ëøô‰∏™Á±ªÈáåÈù¢ÁöÑ LoadModel ÊñπÊ≥ïÂèØ‰ª•ÂæàÂø´ÁöÑÁîüÊàêÂê´ÊúâËÆ°ÁÆóÂõæÁöÑ session„ÄÇ\n\n```\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    tensorflow::Status load_status;\n    load_status = LoadModel(@\"rounded_graph\", @\"pb\", &tf_session);\n    if (!load_status.ok()) {\n        LOG(FATAL) << \"Couldn't load model: \" << load_status;\n    }\n    currentStyle = 0;\n    isDone = true;\n    _styleImageView.layer.borderColor = [UIColor grayColor].CGColor;\n    _styleImageView.layer.borderWidth = 0.5;\n    _ogImageView.layer.borderColor = [UIColor grayColor].CGColor;\n    _ogImageView.layer.borderWidth = 0.5;\n}\n```\n\nÊúÄÂêéÂ∞±ÊòØËé∑ÂèñÂõæÁâáÔºåÊâßË°åËøêÁÆóÔºåÁîüÊàêËâ∫ÊúØÂõæÁâáÂ±ïÁ§∫„ÄÇËøôÈáåÂõæÁâáÈúÄË¶ÅËΩ¨Êç¢Êàê bitmap ÁÑ∂ÂêéËé∑Âèñ data ÂÄºÔºåÂ±ïÁ§∫ÂõæÁâá‰πüÊòØÁõ∏ËØÜÁöÑËøáÁ®ã„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n- (void)runCnn:(UIImage *)compressedImg\n{\n    unsigned char *pixels = [self getImagePixel:compressedImg];\n    int image_channels = 4;\n    tensorflow::Tensor image_tensor(\n                                    tensorflow::DT_FLOAT,\n                                    tensorflow::TensorShape(\n                                                            {1, wanted_input_height, wanted_input_width, wanted_input_channels}));\n    auto image_tensor_mapped = image_tensor.tensor<float, 4>();\n    tensorflow::uint8 *in = pixels;\n    float *out = image_tensor_mapped.data();\n    for (int y = 0; y < wanted_input_height; ++y) {\n        float *out_row = out + (y * wanted_input_width * wanted_input_channels);\n        for (int x = 0; x < wanted_input_width; ++x) {\n            tensorflow::uint8 *in_pixel =\n            in + (x * wanted_input_width * image_channels) + (y * image_channels);\n            float *out_pixel = out_row + (x * wanted_input_channels);\n            for (int c = 0; c < wanted_input_channels; ++c) {\n                out_pixel[c] = in_pixel[c];\n            }\n        }\n    }\n\n\n    tensorflow::Tensor style(tensorflow::DT_FLOAT, tensorflow::TensorShape({32}));\n    float *style_data = style.tensor<float, 1>().data();\n    memset(style_data, 0, sizeof(float) * 32);\n    style_data[currentStyle] = 1;\n\n    if (tf_session.get()) {\n        std::vector<tensorflow::Tensor> outputs;\n        tensorflow::Status run_status = tf_session->Run(\n                                                        {{contentNode, image_tensor},\n                                                            {styleNode, style}},\n                                                        {outputNode},\n                                                        {},\n                                                        &outputs);\n        if (!run_status.ok()) {\n            LOG(ERROR) << \"Running model failed:\" << run_status;\n            isDone = true;\n            free(pixels);\n        } else {\n            float *styledData = outputs[0].tensor<float,4>().data();\n            UIImage *styledImg = [self createImage:styledData];\n            dispatch_async(dispatch_get_main_queue(), ^{\n                _styleImageView.image = styledImg;\n                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n                    isDone = true;\n                    free(pixels);\n                });\n            });\n        }\n    }\n}\n\n- (unsigned char *)getImagePixel:(UIImage *)image\n{\n    int width = image.size.width;\n    int height = image.size.height;\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    unsigned char *rawData = (unsigned char*) calloc(height * width * 4, sizeof(unsigned char));\n    NSUInteger bytesPerPixel = 4;\n    NSUInteger bytesPerRow = bytesPerPixel * width;\n    NSUInteger bitsPerComponent = 8;\n    CGContextRef context = CGBitmapContextCreate(rawData, width, height,\n\n                                                 bitsPerComponent, bytesPerRow, colorSpace,\n\n                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGColorSpaceRelease(colorSpace);\n    CGContextDrawImage(context, CGRectMake(0, 0, width, height), image.CGImage);\n    UIImage *ogImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];\n    dispatch_async(dispatch_get_main_queue(), ^{\n        _ogImageView.image = ogImg;\n    });\n    CGContextRelease(context);\n    return rawData;\n}\n\n- (UIImage *)createImage:(float *)pixels\n{\n    unsigned char *rawData = (unsigned char*) calloc(wanted_input_height * wanted_input_width * 4, sizeof(unsigned char));\n    for (int y = 0; y < wanted_input_height; ++y) {\n        unsigned char *out_row = rawData + (y * wanted_input_width * 4);\n        for (int x = 0; x < wanted_input_width; ++x) {\n            float *in_pixel =\n            pixels + (x * wanted_input_width * 3) + (y * 3);\n            unsigned char *out_pixel = out_row + (x * 4);\n            for (int c = 0; c < wanted_input_channels; ++c) {\n                out_pixel[c] = in_pixel[c] * 255;\n            }\n            out_pixel[3] = UINT8_MAX;\n        }\n    }\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    NSUInteger bytesPerPixel = 4;\n    NSUInteger bytesPerRow = bytesPerPixel * wanted_input_width;\n    NSUInteger bitsPerComponent = 8;\n    CGContextRef context = CGBitmapContextCreate(rawData, wanted_input_width, wanted_input_height,\n\n                                                 bitsPerComponent, bytesPerRow, colorSpace,\n\n                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGColorSpaceRelease(colorSpace);\n    UIImage *retImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];\n    CGContextRelease(context);\n    free(rawData);\n    return retImg;\n}\n```\n\n_ËøôÈáåËØ¥Êòé‰∏Ä‰∏ãÔºåÂâçÈù¢ python Â∑•Á®ãÂ∑≤ÁªèÂÆö‰πâ‰∫ÜÔºåÊàëÁöÑËæìÂÖ•ÂíåËæìÂá∫ÂõæÁâáÁöÑÂ§ßÂ∞èÊòØ 512‚úï512„ÄÇ_\n\n## ËøûÊé• iPhoneÔºåËøêË°åÂ∑•Á®ã\n\n---\n\nÊúÄÂêéËøû‰∏äÊâãÊú∫ËøêË°åÔºåÂ∞±ÂèØ‰ª•Ëá™Â∑±ÂàõÂª∫Ëá™Â∑±ÁöÑËâ∫ÊúØÁ±ªÂõæÁâá‰∫Ü„ÄÇüòä\n\nÊîæÂá†Âº†ËøêË°åÊïàÊûúÂõæÔºö\n![Êà™Âõæ1](http://upload-images.jianshu.io/upload_images/2641798-d105c1089f62c634.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Êà™Âõæ2](http://upload-images.jianshu.io/upload_images/2641798-6b722e433ca66c5b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Êà™Âõæ3](http://upload-images.jianshu.io/upload_images/2641798-1b5acd6620b5b447.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂.md","raw":"---\ntitle: iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂\ndate: 2017-04-28 10:42:21\ntags: [ÁßªÂä®Á´Ø, Êú∫Âô®Â≠¶‰π†, tensorflow]\ntoc: true\ncategories:\n  - Â∑•‰Ωú\n  - iOS\nthumbnail: http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n---\n\n## ÂâçË®Ä\n\n---\n\nPrisma Âú® 2016 ‰∏äÁ∫øÂêéÂ∞±Â§ßÁÅ´ÔºåËØ• APP ÊòØÂà©Áî®[Á•ûÁªèÁΩëÁªú](https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C)Âíå[‰∫∫Â∑•Êô∫ËÉΩ](https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD)ÊäÄÊúØÔºå‰∏∫ÊôÆÈÄöÁÖßÁâáÂä†ÂÖ•Ëâ∫ÊúØÊïàÊûúÁöÑÁÖßÁâáÁºñËæëËΩØ‰ª∂„ÄÇ\n\nÂêåÂπ¥ Google ‰πüÂèëÂ∏É‰∫Ü‰∏ÄÁØá„ÄäA LEARNED REPRESENTATION FOR ARTISTIC STYLE„ÄãËÆ∫ÊñáÔºåÂÆûÁé∞‰∫ÜÂâçÂêëËøêÁÆó‰∏ÄÊ¨°‰∏∫ÁÖßÁâáÊï¥ÂêàÂ§öÁßçËâ∫ÊúØÈ£éÊ†ºÁöÑÂäüËÉΩÔºåÂπ∂‰∏î‰ºòÂåñ‰∫ÜÂÜÖÂ≠ò‰ΩøÁî®ÂíåËøêÁÆóÈÄüÂ∫¶ÔºåÂèØ‰ª•Âú®ÁßªÂä®ËÆæÂ§á‰∏äÂø´ÈÄüËøêÁÆó„ÄÇ\n\nÊúÄËøëÂú®Á†îÁ©∂ Tensorflow Êï¥Âêà iOS ËøáÁ®ã‰∏≠ÔºåÂèëÁé∞ google ÂÖ¨ÂºÄ‰∫ÜËÆ∫ÊñáÂÆûÁé∞ÁöÑÊ∫êÁ†ÅÂíåËÆ≠ÁªÉÊï∞ÊçÆÔºå‰πüÂ∞±ÊòØËØ¥Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáËá™Â∑±ÂÜô‰∏Ä‰∏™ÂâçÂêëËøêÁÆóÂõæÔºåÊï¥ÂêàÂÖ∂ËÆ≠ÁªÉÂèÇÊï∞Â∞±ÂèØ‰ª•Âø´ÈÄüÂÆûÁé∞Á±ª Prisma ÁöÑÂ∫îÁî®„ÄÇ\n\n‰∏ãÈù¢Â∞±‰ªãÁªç‰∏Ä‰∏ãÂ¶Ç‰ΩïÂú® iPhone ‰∏äË∑ë‰∏Ä‰∏™Ëá™Â∑±ÁöÑ**\"Prisma\"**„ÄÇ\n\n<!-- more -->\n\n![ÊãõË¥¢ÂíåÂíïÂôú](http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÂáÜÂ§áÂ∑•‰Ωú\n\n---\n\n1. ÂÆâË£Ö[Tensorflow](https://www.tensorflow.org/versions/r0.12/get_started/os_setup.html#download-and-setup)ÔºåËøô‰∏™ÂÆòÁΩë‰∏äÊúâËØ¶ÁªÜÊïôÁ®ãËøôÈáåÂ∞±‰∏çÂ§öËØ¥‰∫Ü„ÄÇ\n2. Êê≠Âª∫[iOS+Tensorflow](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/ios_examples/)Â∑•Á®ãÔºåËøô‰∏™ÂèØ‰ª•Ê†πÊçÆ Git ‰∏äÁöÑÊ≠•È™§ÂÆûÁé∞Ôºå‰πüÂèØ‰ª•ÂèÇËÄÉÂÆòÊñπÁöÑ Demo Á®ãÂ∫èÈÖçÁΩÆ„ÄÇÔºàËøô‰∏™ËøáÁ®ãÊúâÂæàÂ§öÂùëÔºåÂ§öÊ¨°Â∞ùËØïÔºåÂ∫îËØ•ÂèØ‰ª•ÈÖçÁΩÆÊàêÂäüÔºâ\n3. ‰∏ãËΩΩÊ®°ÂûãÔºåÊú¨Ê¨°‰ΩøÁî®ÁöÑÊ®°ÂûãÊòØ[image_stylization](https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization)Ôºågoogle Â∑≤ÂºÄÊ∫êÂú® GitHub ‰∏ä„ÄÇ\n4. ‰∏ãËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÂèÇÊï∞ÔºåGoogle Êèê‰æõ‰∫Ü 2 ‰∏™Ôºö\n   [Monet](http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-monet.ckpt)\n   [Varied](http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-varied.ckpt)\n   Monet ËÆ≠ÁªÉ‰∫Ü 10 ÁßçËâ∫ÊúØÂõæÁâáÔºåVaried ËÆ≠ÁªÉ‰∫Ü 32 Áßç„ÄÇ\n   ÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•Ëá™Â∑±ËÆ≠ÁªÉËâ∫ÊúØÂõæÁâáÔºå‰ΩÜÊòØÂæó‰∏ãËΩΩ VGG ÁöÑËÆ≠ÁªÉÂèÇÊï∞Âíå ImageNet Êï∞ÊçÆÔºåÁÑ∂ÂêéËá™Â∑±ËÆ≠ÁªÉÔºåÊØîËæÉËä±Êó∂Èó¥„ÄÇ\n\n## ÊûÑÂª∫ËÆ°ÁÆóÂõæ\n\n---\n\nËôΩÁÑ∂ Google Êèê‰æõ‰∫ÜÊ®°ÂûãÁöÑÊ∫êÁ†ÅÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâÂú®Ê∫êÁ†Å‰∏≠ËæìÂá∫ËøêÁÆóÂõæÂ∑≤Êñπ‰æøËøÅÁßªÂà∞ÁßªÂä®ËÆæÂ§á‰∏≠‰ΩøÁî®ÔºåAndroid ÁöÑ Demo ‰∏≠ÂÄíÊòØÊèê‰æõ‰∫ÜÁîüÊàêÁöÑ pbÔºåÂ¶Ç‰ΩïËßâÂæóËá™Â∑±ÂÜôËÆ°ÁÆóÂõæÈ∫ªÁÉ¶ÂèØ‰ª•Áõ¥Êé•Êã∑Âà∞Ëá™Â∑± iOS Â∑•Á®ã‰∏≠‰ΩøÁî®„ÄÇ\n\nÊàëËøôÈáåÂàõÂª∫‰∫Ü‰∏Ä‰∏™ python ÁöÑÂ∑•Á®ãÔºåÁÑ∂ÂêéÊää Google Ê∫êÁ†Å‰∏≠ model.py Áõ∏ÂÖ≥ÁöÑÊñá‰ª∂ÈÉΩÂä†ÂÖ•‰∫ÜÂ∑•Á®ã„ÄÇ\nÊàëÁöÑÂª∫Âõæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\nimport numpy as np\nimport tensorflow as tf\nimport ast\nimport os\nfrom tensorflow.python import pywrap_tensorflow\n\nfrom matplotlib import pyplot\nfrom matplotlib.pyplot import imshow\n\nimport image_utils\nimport model\nimport ops\nimport argparse\nimport sys\n\n\nnum_styles = 32\nimgWidth = 512\nimgHeight = 512\nchannel = 3\ncheckpoint = \"/Users/Jiao/Desktop/TFProject/style-image/checkpoint/multistyle-pastiche-generator-varied.ckpt\"\n\ninputImage = tf.placeholder(tf.float32,shape=[None,imgWidth,imgHeight,channel],name=\"input\")\nstyles = tf.placeholder(tf.float32,shape=[num_styles],name=\"style\")\n\nwith tf.name_scope(\"\"):\n    transform = model.transform(inputImage,\n                            normalizer_fn=ops.weighted_instance_norm,\n                            normalizer_params={\n                                # 'weights': tf.constant(mixture),\n                                'weights' : styles,\n                                'num_categories': num_styles,\n                                'center': True,\n                                'scale': True})\n\nmodel_saver = tf.train.Saver(tf.global_variables())\n\nwith tf.Session() as sess:\n    tf.train.write_graph(sess.graph_def, \"/Users/Jiao/Desktop/TFProject/style-image/protobuf\", \"input.pb\")\n    #checkpoint = os.path.expanduser(checkpoint)\n    #if tf.gfile.IsDirectory(checkpoint):\n    #    checkpoint = tf.train.latest_checkpoint(checkpoint)\n    #    tf.logging.info('loading latest checkpoint file: {}'.format(checkpoint))\n    #model_saver.restore(sess, checkpoint)\n\n    #newstyle = np.zeros([num_styles], dtype=np.float32)\n    #newstyle[18] = 0.5\n    #newstyle[17] = 0.5\n    #newImage = np.zeros((1,imgWidth,imgHeight,channel))\n    #style_image = transform.eval(feed_dict={inputImage:newImage,styles:newstyle})\n    #style_image = style_image[0]\n    #imshow(style_image)\n    #pyplot.show()\n```\n\nËøôÈáåËæìÂÖ•ËäÇÁÇπÊòØ`input`Âíå`style`ÔºåËæìÂá∫ËäÇÁÇπÊòØ model ‰∏≠ÁöÑ`transformer/expand/conv3/conv/Sigmoid`„ÄÇ\n\nÂà∞Ê≠§Â∞±Â∞ÜÊ®°ÂûãÁöÑËÆ°ÁÆóÂõæ‰øùÂ≠òÂà∞‰∫ÜÊú¨Âú∞Êñá‰ª∂Â§π‰∏≠„ÄÇ\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂõæÂíå ckpt ‰∏≠ÁöÑÂèÇÊï∞ÂêàÂπ∂ÔºåÂπ∂‰∏îÁîüÊàêÁßªÂä®Á´ØÁöÑÂèØ‰ª•‰ΩøÁî®ÁöÑ pb Êñá‰ª∂ÔºåËøô‰∏ÄÊ≠•ÂèØ‰ª•ÂèÇËÄÉÊàë‰∏ä‰∏ÄÁØáÊñáÁ´†[„ÄäiOS+Tensorflow ÂÆûÁé∞ÂõæÂÉèËØÜÂà´„Äã](http://www.jianshu.com/p/f096fe2212ce)ÔºåÂæàÂÆπÊòìÂ∞±ÂÆûÁé∞„ÄÇ\n\n## iOS Â∑•Á®ã\n\n---\n\nÂú®‰∏äÈù¢ÂáÜÂ§áÂ∑•‰Ωú‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÊåâÊ≠•È™§Êê≠Âª∫Â•Ω iOS+TF ÁöÑÂ∑•Á®ãÔºåËøôÈáå‰Ω†Âè™ÈúÄË¶ÅÂØºÂÖ•ÁîüÊàêÁöÑÊúÄÁªà pb Êñá‰ª∂Â∞±Ë°å‰∫Ü„ÄÇÂ∑•Á®ãÁªìÊûÑÂ¶ÇÂõæÔºö\n\n![XCodeÂ∑•Á®ã](http://upload-images.jianshu.io/upload_images/2641798-ca34abd1c875504c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nÁÑ∂ÂêéÂú® iOS ‰ΩøÁî® pb Êñá‰ª∂ÔºåÊàëËøôÈáåÁõ¥Êé•ÂØºÂÖ•‰∫Ü Google Êèê‰æõÁöÑ`tensorflow_utils`Ôºå‰ΩøÁî®Ëøô‰∏™Á±ªÈáåÈù¢ÁöÑ LoadModel ÊñπÊ≥ïÂèØ‰ª•ÂæàÂø´ÁöÑÁîüÊàêÂê´ÊúâËÆ°ÁÆóÂõæÁöÑ session„ÄÇ\n\n```\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    tensorflow::Status load_status;\n    load_status = LoadModel(@\"rounded_graph\", @\"pb\", &tf_session);\n    if (!load_status.ok()) {\n        LOG(FATAL) << \"Couldn't load model: \" << load_status;\n    }\n    currentStyle = 0;\n    isDone = true;\n    _styleImageView.layer.borderColor = [UIColor grayColor].CGColor;\n    _styleImageView.layer.borderWidth = 0.5;\n    _ogImageView.layer.borderColor = [UIColor grayColor].CGColor;\n    _ogImageView.layer.borderWidth = 0.5;\n}\n```\n\nÊúÄÂêéÂ∞±ÊòØËé∑ÂèñÂõæÁâáÔºåÊâßË°åËøêÁÆóÔºåÁîüÊàêËâ∫ÊúØÂõæÁâáÂ±ïÁ§∫„ÄÇËøôÈáåÂõæÁâáÈúÄË¶ÅËΩ¨Êç¢Êàê bitmap ÁÑ∂ÂêéËé∑Âèñ data ÂÄºÔºåÂ±ïÁ§∫ÂõæÁâá‰πüÊòØÁõ∏ËØÜÁöÑËøáÁ®ã„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n- (void)runCnn:(UIImage *)compressedImg\n{\n    unsigned char *pixels = [self getImagePixel:compressedImg];\n    int image_channels = 4;\n    tensorflow::Tensor image_tensor(\n                                    tensorflow::DT_FLOAT,\n                                    tensorflow::TensorShape(\n                                                            {1, wanted_input_height, wanted_input_width, wanted_input_channels}));\n    auto image_tensor_mapped = image_tensor.tensor<float, 4>();\n    tensorflow::uint8 *in = pixels;\n    float *out = image_tensor_mapped.data();\n    for (int y = 0; y < wanted_input_height; ++y) {\n        float *out_row = out + (y * wanted_input_width * wanted_input_channels);\n        for (int x = 0; x < wanted_input_width; ++x) {\n            tensorflow::uint8 *in_pixel =\n            in + (x * wanted_input_width * image_channels) + (y * image_channels);\n            float *out_pixel = out_row + (x * wanted_input_channels);\n            for (int c = 0; c < wanted_input_channels; ++c) {\n                out_pixel[c] = in_pixel[c];\n            }\n        }\n    }\n\n\n    tensorflow::Tensor style(tensorflow::DT_FLOAT, tensorflow::TensorShape({32}));\n    float *style_data = style.tensor<float, 1>().data();\n    memset(style_data, 0, sizeof(float) * 32);\n    style_data[currentStyle] = 1;\n\n    if (tf_session.get()) {\n        std::vector<tensorflow::Tensor> outputs;\n        tensorflow::Status run_status = tf_session->Run(\n                                                        {{contentNode, image_tensor},\n                                                            {styleNode, style}},\n                                                        {outputNode},\n                                                        {},\n                                                        &outputs);\n        if (!run_status.ok()) {\n            LOG(ERROR) << \"Running model failed:\" << run_status;\n            isDone = true;\n            free(pixels);\n        } else {\n            float *styledData = outputs[0].tensor<float,4>().data();\n            UIImage *styledImg = [self createImage:styledData];\n            dispatch_async(dispatch_get_main_queue(), ^{\n                _styleImageView.image = styledImg;\n                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n                    isDone = true;\n                    free(pixels);\n                });\n            });\n        }\n    }\n}\n\n- (unsigned char *)getImagePixel:(UIImage *)image\n{\n    int width = image.size.width;\n    int height = image.size.height;\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    unsigned char *rawData = (unsigned char*) calloc(height * width * 4, sizeof(unsigned char));\n    NSUInteger bytesPerPixel = 4;\n    NSUInteger bytesPerRow = bytesPerPixel * width;\n    NSUInteger bitsPerComponent = 8;\n    CGContextRef context = CGBitmapContextCreate(rawData, width, height,\n\n                                                 bitsPerComponent, bytesPerRow, colorSpace,\n\n                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGColorSpaceRelease(colorSpace);\n    CGContextDrawImage(context, CGRectMake(0, 0, width, height), image.CGImage);\n    UIImage *ogImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];\n    dispatch_async(dispatch_get_main_queue(), ^{\n        _ogImageView.image = ogImg;\n    });\n    CGContextRelease(context);\n    return rawData;\n}\n\n- (UIImage *)createImage:(float *)pixels\n{\n    unsigned char *rawData = (unsigned char*) calloc(wanted_input_height * wanted_input_width * 4, sizeof(unsigned char));\n    for (int y = 0; y < wanted_input_height; ++y) {\n        unsigned char *out_row = rawData + (y * wanted_input_width * 4);\n        for (int x = 0; x < wanted_input_width; ++x) {\n            float *in_pixel =\n            pixels + (x * wanted_input_width * 3) + (y * 3);\n            unsigned char *out_pixel = out_row + (x * 4);\n            for (int c = 0; c < wanted_input_channels; ++c) {\n                out_pixel[c] = in_pixel[c] * 255;\n            }\n            out_pixel[3] = UINT8_MAX;\n        }\n    }\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    NSUInteger bytesPerPixel = 4;\n    NSUInteger bytesPerRow = bytesPerPixel * wanted_input_width;\n    NSUInteger bitsPerComponent = 8;\n    CGContextRef context = CGBitmapContextCreate(rawData, wanted_input_width, wanted_input_height,\n\n                                                 bitsPerComponent, bytesPerRow, colorSpace,\n\n                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGColorSpaceRelease(colorSpace);\n    UIImage *retImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];\n    CGContextRelease(context);\n    free(rawData);\n    return retImg;\n}\n```\n\n_ËøôÈáåËØ¥Êòé‰∏Ä‰∏ãÔºåÂâçÈù¢ python Â∑•Á®ãÂ∑≤ÁªèÂÆö‰πâ‰∫ÜÔºåÊàëÁöÑËæìÂÖ•ÂíåËæìÂá∫ÂõæÁâáÁöÑÂ§ßÂ∞èÊòØ 512‚úï512„ÄÇ_\n\n## ËøûÊé• iPhoneÔºåËøêË°åÂ∑•Á®ã\n\n---\n\nÊúÄÂêéËøû‰∏äÊâãÊú∫ËøêË°åÔºåÂ∞±ÂèØ‰ª•Ëá™Â∑±ÂàõÂª∫Ëá™Â∑±ÁöÑËâ∫ÊúØÁ±ªÂõæÁâá‰∫Ü„ÄÇüòä\n\nÊîæÂá†Âº†ËøêË°åÊïàÊûúÂõæÔºö\n![Êà™Âõæ1](http://upload-images.jianshu.io/upload_images/2641798-d105c1089f62c634.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Êà™Âõæ2](http://upload-images.jianshu.io/upload_images/2641798-6b722e433ca66c5b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Êà™Âõæ3](http://upload-images.jianshu.io/upload_images/2641798-1b5acd6620b5b447.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"iOSÂÆûÁé∞Á±ªPrismaËΩØ‰ª∂","published":1,"updated":"2019-01-10T02:18:05.708Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpj1001whqoxzbvx3vqu","content":"<h2 id=\"ÂâçË®Ä\"><a class=\"header-anchor\" href=\"#ÂâçË®Ä\">¬∂</a>ÂâçË®Ä</h2>\n<hr>\n<p>Prisma Âú® 2016 ‰∏äÁ∫øÂêéÂ∞±Â§ßÁÅ´ÔºåËØ• APP ÊòØÂà©Áî®<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C\" target=\"_blank\" rel=\"noopener\">Á•ûÁªèÁΩëÁªú</a>Âíå<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD\" target=\"_blank\" rel=\"noopener\">‰∫∫Â∑•Êô∫ËÉΩ</a>ÊäÄÊúØÔºå‰∏∫ÊôÆÈÄöÁÖßÁâáÂä†ÂÖ•Ëâ∫ÊúØÊïàÊûúÁöÑÁÖßÁâáÁºñËæëËΩØ‰ª∂„ÄÇ</p>\n<p>ÂêåÂπ¥ Google ‰πüÂèëÂ∏É‰∫Ü‰∏ÄÁØá„ÄäA LEARNED REPRESENTATION FOR ARTISTIC STYLE„ÄãËÆ∫ÊñáÔºåÂÆûÁé∞‰∫ÜÂâçÂêëËøêÁÆó‰∏ÄÊ¨°‰∏∫ÁÖßÁâáÊï¥ÂêàÂ§öÁßçËâ∫ÊúØÈ£éÊ†ºÁöÑÂäüËÉΩÔºåÂπ∂‰∏î‰ºòÂåñ‰∫ÜÂÜÖÂ≠ò‰ΩøÁî®ÂíåËøêÁÆóÈÄüÂ∫¶ÔºåÂèØ‰ª•Âú®ÁßªÂä®ËÆæÂ§á‰∏äÂø´ÈÄüËøêÁÆó„ÄÇ</p>\n<p>ÊúÄËøëÂú®Á†îÁ©∂ Tensorflow Êï¥Âêà iOS ËøáÁ®ã‰∏≠ÔºåÂèëÁé∞ google ÂÖ¨ÂºÄ‰∫ÜËÆ∫ÊñáÂÆûÁé∞ÁöÑÊ∫êÁ†ÅÂíåËÆ≠ÁªÉÊï∞ÊçÆÔºå‰πüÂ∞±ÊòØËØ¥Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáËá™Â∑±ÂÜô‰∏Ä‰∏™ÂâçÂêëËøêÁÆóÂõæÔºåÊï¥ÂêàÂÖ∂ËÆ≠ÁªÉÂèÇÊï∞Â∞±ÂèØ‰ª•Âø´ÈÄüÂÆûÁé∞Á±ª Prisma ÁöÑÂ∫îÁî®„ÄÇ</p>\n<p>‰∏ãÈù¢Â∞±‰ªãÁªç‰∏Ä‰∏ãÂ¶Ç‰ΩïÂú® iPhone ‰∏äË∑ë‰∏Ä‰∏™Ëá™Â∑±ÁöÑ**‚ÄúPrisma‚Äù**„ÄÇ</p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ÊãõË¥¢ÂíåÂíïÂôú\"></p>\n<h2 id=\"ÂáÜÂ§áÂ∑•‰Ωú\"><a class=\"header-anchor\" href=\"#ÂáÜÂ§áÂ∑•‰Ωú\">¬∂</a>ÂáÜÂ§áÂ∑•‰Ωú</h2>\n<hr>\n<ol>\n<li>ÂÆâË£Ö<a href=\"https://www.tensorflow.org/versions/r0.12/get_started/os_setup.html#download-and-setup\" target=\"_blank\" rel=\"noopener\">Tensorflow</a>ÔºåËøô‰∏™ÂÆòÁΩë‰∏äÊúâËØ¶ÁªÜÊïôÁ®ãËøôÈáåÂ∞±‰∏çÂ§öËØ¥‰∫Ü„ÄÇ</li>\n<li>Êê≠Âª∫<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/ios_examples/\" target=\"_blank\" rel=\"noopener\">iOS+Tensorflow</a>Â∑•Á®ãÔºåËøô‰∏™ÂèØ‰ª•Ê†πÊçÆ Git ‰∏äÁöÑÊ≠•È™§ÂÆûÁé∞Ôºå‰πüÂèØ‰ª•ÂèÇËÄÉÂÆòÊñπÁöÑ Demo Á®ãÂ∫èÈÖçÁΩÆ„ÄÇÔºàËøô‰∏™ËøáÁ®ãÊúâÂæàÂ§öÂùëÔºåÂ§öÊ¨°Â∞ùËØïÔºåÂ∫îËØ•ÂèØ‰ª•ÈÖçÁΩÆÊàêÂäüÔºâ</li>\n<li>‰∏ãËΩΩÊ®°ÂûãÔºåÊú¨Ê¨°‰ΩøÁî®ÁöÑÊ®°ÂûãÊòØ<a href=\"https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization\" target=\"_blank\" rel=\"noopener\">image_stylization</a>Ôºågoogle Â∑≤ÂºÄÊ∫êÂú® GitHub ‰∏ä„ÄÇ</li>\n<li>‰∏ãËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÂèÇÊï∞ÔºåGoogle Êèê‰æõ‰∫Ü 2 ‰∏™Ôºö<br>\n<a href=\"http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-monet.ckpt\" target=\"_blank\" rel=\"noopener\">Monet</a><br>\n<a href=\"http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-varied.ckpt\" target=\"_blank\" rel=\"noopener\">Varied</a><br>\nMonet ËÆ≠ÁªÉ‰∫Ü 10 ÁßçËâ∫ÊúØÂõæÁâáÔºåVaried ËÆ≠ÁªÉ‰∫Ü 32 Áßç„ÄÇ<br>\nÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•Ëá™Â∑±ËÆ≠ÁªÉËâ∫ÊúØÂõæÁâáÔºå‰ΩÜÊòØÂæó‰∏ãËΩΩ VGG ÁöÑËÆ≠ÁªÉÂèÇÊï∞Âíå ImageNet Êï∞ÊçÆÔºåÁÑ∂ÂêéËá™Â∑±ËÆ≠ÁªÉÔºåÊØîËæÉËä±Êó∂Èó¥„ÄÇ</li>\n</ol>\n<h2 id=\"ÊûÑÂª∫ËÆ°ÁÆóÂõæ\"><a class=\"header-anchor\" href=\"#ÊûÑÂª∫ËÆ°ÁÆóÂõæ\">¬∂</a>ÊûÑÂª∫ËÆ°ÁÆóÂõæ</h2>\n<hr>\n<p>ËôΩÁÑ∂ Google Êèê‰æõ‰∫ÜÊ®°ÂûãÁöÑÊ∫êÁ†ÅÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâÂú®Ê∫êÁ†Å‰∏≠ËæìÂá∫ËøêÁÆóÂõæÂ∑≤Êñπ‰æøËøÅÁßªÂà∞ÁßªÂä®ËÆæÂ§á‰∏≠‰ΩøÁî®ÔºåAndroid ÁöÑ Demo ‰∏≠ÂÄíÊòØÊèê‰æõ‰∫ÜÁîüÊàêÁöÑ pbÔºåÂ¶Ç‰ΩïËßâÂæóËá™Â∑±ÂÜôËÆ°ÁÆóÂõæÈ∫ªÁÉ¶ÂèØ‰ª•Áõ¥Êé•Êã∑Âà∞Ëá™Â∑± iOS Â∑•Á®ã‰∏≠‰ΩøÁî®„ÄÇ</p>\n<p>ÊàëËøôÈáåÂàõÂª∫‰∫Ü‰∏Ä‰∏™ python ÁöÑÂ∑•Á®ãÔºåÁÑ∂ÂêéÊää Google Ê∫êÁ†Å‰∏≠ <a href=\"http://model.py\" target=\"_blank\" rel=\"noopener\">model.py</a> Áõ∏ÂÖ≥ÁöÑÊñá‰ª∂ÈÉΩÂä†ÂÖ•‰∫ÜÂ∑•Á®ã„ÄÇ<br>\nÊàëÁöÑÂª∫Âõæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import tensorflow as tf</span><br><span class=\"line\">import ast</span><br><span class=\"line\">import os</span><br><span class=\"line\">from tensorflow.python import pywrap_tensorflow</span><br><span class=\"line\"></span><br><span class=\"line\">from matplotlib import pyplot</span><br><span class=\"line\">from matplotlib.pyplot import imshow</span><br><span class=\"line\"></span><br><span class=\"line\">import image_utils</span><br><span class=\"line\">import model</span><br><span class=\"line\">import ops</span><br><span class=\"line\">import argparse</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">num_styles = 32</span><br><span class=\"line\">imgWidth = 512</span><br><span class=\"line\">imgHeight = 512</span><br><span class=\"line\">channel = 3</span><br><span class=\"line\">checkpoint = &quot;/Users/Jiao/Desktop/TFProject/style-image/checkpoint/multistyle-pastiche-generator-varied.ckpt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">inputImage = tf.placeholder(tf.float32,shape=[None,imgWidth,imgHeight,channel],name=&quot;input&quot;)</span><br><span class=\"line\">styles = tf.placeholder(tf.float32,shape=[num_styles],name=&quot;style&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">with tf.name_scope(&quot;&quot;):</span><br><span class=\"line\">    transform = model.transform(inputImage,</span><br><span class=\"line\">                            normalizer_fn=ops.weighted_instance_norm,</span><br><span class=\"line\">                            normalizer_params=&#123;</span><br><span class=\"line\">                                # &apos;weights&apos;: tf.constant(mixture),</span><br><span class=\"line\">                                &apos;weights&apos; : styles,</span><br><span class=\"line\">                                &apos;num_categories&apos;: num_styles,</span><br><span class=\"line\">                                &apos;center&apos;: True,</span><br><span class=\"line\">                                &apos;scale&apos;: True&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">model_saver = tf.train.Saver(tf.global_variables())</span><br><span class=\"line\"></span><br><span class=\"line\">with tf.Session() as sess:</span><br><span class=\"line\">    tf.train.write_graph(sess.graph_def, &quot;/Users/Jiao/Desktop/TFProject/style-image/protobuf&quot;, &quot;input.pb&quot;)</span><br><span class=\"line\">    #checkpoint = os.path.expanduser(checkpoint)</span><br><span class=\"line\">    #if tf.gfile.IsDirectory(checkpoint):</span><br><span class=\"line\">    #    checkpoint = tf.train.latest_checkpoint(checkpoint)</span><br><span class=\"line\">    #    tf.logging.info(&apos;loading latest checkpoint file: &#123;&#125;&apos;.format(checkpoint))</span><br><span class=\"line\">    #model_saver.restore(sess, checkpoint)</span><br><span class=\"line\"></span><br><span class=\"line\">    #newstyle = np.zeros([num_styles], dtype=np.float32)</span><br><span class=\"line\">    #newstyle[18] = 0.5</span><br><span class=\"line\">    #newstyle[17] = 0.5</span><br><span class=\"line\">    #newImage = np.zeros((1,imgWidth,imgHeight,channel))</span><br><span class=\"line\">    #style_image = transform.eval(feed_dict=&#123;inputImage:newImage,styles:newstyle&#125;)</span><br><span class=\"line\">    #style_image = style_image[0]</span><br><span class=\"line\">    #imshow(style_image)</span><br><span class=\"line\">    #pyplot.show()</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáåËæìÂÖ•ËäÇÁÇπÊòØ<code>input</code>Âíå<code>style</code>ÔºåËæìÂá∫ËäÇÁÇπÊòØ model ‰∏≠ÁöÑ<code>transformer/expand/conv3/conv/Sigmoid</code>„ÄÇ</p>\n<p>Âà∞Ê≠§Â∞±Â∞ÜÊ®°ÂûãÁöÑËÆ°ÁÆóÂõæ‰øùÂ≠òÂà∞‰∫ÜÊú¨Âú∞Êñá‰ª∂Â§π‰∏≠„ÄÇ<br>\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂõæÂíå ckpt ‰∏≠ÁöÑÂèÇÊï∞ÂêàÂπ∂ÔºåÂπ∂‰∏îÁîüÊàêÁßªÂä®Á´ØÁöÑÂèØ‰ª•‰ΩøÁî®ÁöÑ pb Êñá‰ª∂ÔºåËøô‰∏ÄÊ≠•ÂèØ‰ª•ÂèÇËÄÉÊàë‰∏ä‰∏ÄÁØáÊñáÁ´†<a href=\"http://www.jianshu.com/p/f096fe2212ce\" target=\"_blank\" rel=\"noopener\">„ÄäiOS+Tensorflow ÂÆûÁé∞ÂõæÂÉèËØÜÂà´„Äã</a>ÔºåÂæàÂÆπÊòìÂ∞±ÂÆûÁé∞„ÄÇ</p>\n<h2 id=\"ios-Â∑•Á®ã\"><a class=\"header-anchor\" href=\"#ios-Â∑•Á®ã\">¬∂</a>iOS Â∑•Á®ã</h2>\n<hr>\n<p>Âú®‰∏äÈù¢ÂáÜÂ§áÂ∑•‰Ωú‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÊåâÊ≠•È™§Êê≠Âª∫Â•Ω iOS+TF ÁöÑÂ∑•Á®ãÔºåËøôÈáå‰Ω†Âè™ÈúÄË¶ÅÂØºÂÖ•ÁîüÊàêÁöÑÊúÄÁªà pb Êñá‰ª∂Â∞±Ë°å‰∫Ü„ÄÇÂ∑•Á®ãÁªìÊûÑÂ¶ÇÂõæÔºö</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-ca34abd1c875504c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"XCodeÂ∑•Á®ã\"></p>\n<p>ÁÑ∂ÂêéÂú® iOS ‰ΩøÁî® pb Êñá‰ª∂ÔºåÊàëËøôÈáåÁõ¥Êé•ÂØºÂÖ•‰∫Ü Google Êèê‰æõÁöÑ<code>tensorflow_utils</code>Ôºå‰ΩøÁî®Ëøô‰∏™Á±ªÈáåÈù¢ÁöÑ LoadModel ÊñπÊ≥ïÂèØ‰ª•ÂæàÂø´ÁöÑÁîüÊàêÂê´ÊúâËÆ°ÁÆóÂõæÁöÑ session„ÄÇ</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)viewDidLoad &#123;</span><br><span class=\"line\">    [super viewDidLoad];</span><br><span class=\"line\">    tensorflow::Status load_status;</span><br><span class=\"line\">    load_status = LoadModel(@&quot;rounded_graph&quot;, @&quot;pb&quot;, &amp;tf_session);</span><br><span class=\"line\">    if (!load_status.ok()) &#123;</span><br><span class=\"line\">        LOG(FATAL) &lt;&lt; &quot;Couldn&apos;t load model: &quot; &lt;&lt; load_status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    currentStyle = 0;</span><br><span class=\"line\">    isDone = true;</span><br><span class=\"line\">    _styleImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class=\"line\">    _styleImageView.layer.borderWidth = 0.5;</span><br><span class=\"line\">    _ogImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class=\"line\">    _ogImageView.layer.borderWidth = 0.5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ÊúÄÂêéÂ∞±ÊòØËé∑ÂèñÂõæÁâáÔºåÊâßË°åËøêÁÆóÔºåÁîüÊàêËâ∫ÊúØÂõæÁâáÂ±ïÁ§∫„ÄÇËøôÈáåÂõæÁâáÈúÄË¶ÅËΩ¨Êç¢Êàê bitmap ÁÑ∂ÂêéËé∑Âèñ data ÂÄºÔºåÂ±ïÁ§∫ÂõæÁâá‰πüÊòØÁõ∏ËØÜÁöÑËøáÁ®ã„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)runCnn:(UIImage *)compressedImg</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned char *pixels = [self getImagePixel:compressedImg];</span><br><span class=\"line\">    int image_channels = 4;</span><br><span class=\"line\">    tensorflow::Tensor image_tensor(</span><br><span class=\"line\">                                    tensorflow::DT_FLOAT,</span><br><span class=\"line\">                                    tensorflow::TensorShape(</span><br><span class=\"line\">                                                            &#123;1, wanted_input_height, wanted_input_width, wanted_input_channels&#125;));</span><br><span class=\"line\">    auto image_tensor_mapped = image_tensor.tensor&lt;float, 4&gt;();</span><br><span class=\"line\">    tensorflow::uint8 *in = pixels;</span><br><span class=\"line\">    float *out = image_tensor_mapped.data();</span><br><span class=\"line\">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class=\"line\">        float *out_row = out + (y * wanted_input_width * wanted_input_channels);</span><br><span class=\"line\">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class=\"line\">            tensorflow::uint8 *in_pixel =</span><br><span class=\"line\">            in + (x * wanted_input_width * image_channels) + (y * image_channels);</span><br><span class=\"line\">            float *out_pixel = out_row + (x * wanted_input_channels);</span><br><span class=\"line\">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class=\"line\">                out_pixel[c] = in_pixel[c];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    tensorflow::Tensor style(tensorflow::DT_FLOAT, tensorflow::TensorShape(&#123;32&#125;));</span><br><span class=\"line\">    float *style_data = style.tensor&lt;float, 1&gt;().data();</span><br><span class=\"line\">    memset(style_data, 0, sizeof(float) * 32);</span><br><span class=\"line\">    style_data[currentStyle] = 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (tf_session.get()) &#123;</span><br><span class=\"line\">        std::vector&lt;tensorflow::Tensor&gt; outputs;</span><br><span class=\"line\">        tensorflow::Status run_status = tf_session-&gt;Run(</span><br><span class=\"line\">                                                        &#123;&#123;contentNode, image_tensor&#125;,</span><br><span class=\"line\">                                                            &#123;styleNode, style&#125;&#125;,</span><br><span class=\"line\">                                                        &#123;outputNode&#125;,</span><br><span class=\"line\">                                                        &#123;&#125;,</span><br><span class=\"line\">                                                        &amp;outputs);</span><br><span class=\"line\">        if (!run_status.ok()) &#123;</span><br><span class=\"line\">            LOG(ERROR) &lt;&lt; &quot;Running model failed:&quot; &lt;&lt; run_status;</span><br><span class=\"line\">            isDone = true;</span><br><span class=\"line\">            free(pixels);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            float *styledData = outputs[0].tensor&lt;float,4&gt;().data();</span><br><span class=\"line\">            UIImage *styledImg = [self createImage:styledData];</span><br><span class=\"line\">            dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">                _styleImageView.image = styledImg;</span><br><span class=\"line\">                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">                    isDone = true;</span><br><span class=\"line\">                    free(pixels);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (unsigned char *)getImagePixel:(UIImage *)image</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int width = image.size.width;</span><br><span class=\"line\">    int height = image.size.height;</span><br><span class=\"line\">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class=\"line\">    unsigned char *rawData = (unsigned char*) calloc(height * width * 4, sizeof(unsigned char));</span><br><span class=\"line\">    NSUInteger bytesPerPixel = 4;</span><br><span class=\"line\">    NSUInteger bytesPerRow = bytesPerPixel * width;</span><br><span class=\"line\">    NSUInteger bitsPerComponent = 8;</span><br><span class=\"line\">    CGContextRef context = CGBitmapContextCreate(rawData, width, height,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class=\"line\"></span><br><span class=\"line\">    CGColorSpaceRelease(colorSpace);</span><br><span class=\"line\">    CGContextDrawImage(context, CGRectMake(0, 0, width, height), image.CGImage);</span><br><span class=\"line\">    UIImage *ogImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class=\"line\">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        _ogImageView.image = ogImg;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    CGContextRelease(context);</span><br><span class=\"line\">    return rawData;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (UIImage *)createImage:(float *)pixels</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned char *rawData = (unsigned char*) calloc(wanted_input_height * wanted_input_width * 4, sizeof(unsigned char));</span><br><span class=\"line\">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class=\"line\">        unsigned char *out_row = rawData + (y * wanted_input_width * 4);</span><br><span class=\"line\">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class=\"line\">            float *in_pixel =</span><br><span class=\"line\">            pixels + (x * wanted_input_width * 3) + (y * 3);</span><br><span class=\"line\">            unsigned char *out_pixel = out_row + (x * 4);</span><br><span class=\"line\">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class=\"line\">                out_pixel[c] = in_pixel[c] * 255;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            out_pixel[3] = UINT8_MAX;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class=\"line\">    NSUInteger bytesPerPixel = 4;</span><br><span class=\"line\">    NSUInteger bytesPerRow = bytesPerPixel * wanted_input_width;</span><br><span class=\"line\">    NSUInteger bitsPerComponent = 8;</span><br><span class=\"line\">    CGContextRef context = CGBitmapContextCreate(rawData, wanted_input_width, wanted_input_height,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class=\"line\"></span><br><span class=\"line\">    CGColorSpaceRelease(colorSpace);</span><br><span class=\"line\">    UIImage *retImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class=\"line\">    CGContextRelease(context);</span><br><span class=\"line\">    free(rawData);</span><br><span class=\"line\">    return retImg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>ËøôÈáåËØ¥Êòé‰∏Ä‰∏ãÔºåÂâçÈù¢ python Â∑•Á®ãÂ∑≤ÁªèÂÆö‰πâ‰∫ÜÔºåÊàëÁöÑËæìÂÖ•ÂíåËæìÂá∫ÂõæÁâáÁöÑÂ§ßÂ∞èÊòØ 512‚úï512„ÄÇ</em></p>\n<h2 id=\"ËøûÊé•-iphone-ËøêË°åÂ∑•Á®ã\"><a class=\"header-anchor\" href=\"#ËøûÊé•-iphone-ËøêË°åÂ∑•Á®ã\">¬∂</a>ËøûÊé• iPhoneÔºåËøêË°åÂ∑•Á®ã</h2>\n<hr>\n<p>ÊúÄÂêéËøû‰∏äÊâãÊú∫ËøêË°åÔºåÂ∞±ÂèØ‰ª•Ëá™Â∑±ÂàõÂª∫Ëá™Â∑±ÁöÑËâ∫ÊúØÁ±ªÂõæÁâá‰∫Ü„ÄÇüòä</p>\n<p>ÊîæÂá†Âº†ËøêË°åÊïàÊûúÂõæÔºö<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/2641798-d105c1089f62c634.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ1\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-6b722e433ca66c5b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ2\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-1b5acd6620b5b447.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ3\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"ÂâçË®Ä\"><a class=\"header-anchor\" href=\"#ÂâçË®Ä\">¬∂</a>ÂâçË®Ä</h2>\n<hr>\n<p>Prisma Âú® 2016 ‰∏äÁ∫øÂêéÂ∞±Â§ßÁÅ´ÔºåËØ• APP ÊòØÂà©Áî®<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C\" target=\"_blank\" rel=\"noopener\">Á•ûÁªèÁΩëÁªú</a>Âíå<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD\" target=\"_blank\" rel=\"noopener\">‰∫∫Â∑•Êô∫ËÉΩ</a>ÊäÄÊúØÔºå‰∏∫ÊôÆÈÄöÁÖßÁâáÂä†ÂÖ•Ëâ∫ÊúØÊïàÊûúÁöÑÁÖßÁâáÁºñËæëËΩØ‰ª∂„ÄÇ</p>\n<p>ÂêåÂπ¥ Google ‰πüÂèëÂ∏É‰∫Ü‰∏ÄÁØá„ÄäA LEARNED REPRESENTATION FOR ARTISTIC STYLE„ÄãËÆ∫ÊñáÔºåÂÆûÁé∞‰∫ÜÂâçÂêëËøêÁÆó‰∏ÄÊ¨°‰∏∫ÁÖßÁâáÊï¥ÂêàÂ§öÁßçËâ∫ÊúØÈ£éÊ†ºÁöÑÂäüËÉΩÔºåÂπ∂‰∏î‰ºòÂåñ‰∫ÜÂÜÖÂ≠ò‰ΩøÁî®ÂíåËøêÁÆóÈÄüÂ∫¶ÔºåÂèØ‰ª•Âú®ÁßªÂä®ËÆæÂ§á‰∏äÂø´ÈÄüËøêÁÆó„ÄÇ</p>\n<p>ÊúÄËøëÂú®Á†îÁ©∂ Tensorflow Êï¥Âêà iOS ËøáÁ®ã‰∏≠ÔºåÂèëÁé∞ google ÂÖ¨ÂºÄ‰∫ÜËÆ∫ÊñáÂÆûÁé∞ÁöÑÊ∫êÁ†ÅÂíåËÆ≠ÁªÉÊï∞ÊçÆÔºå‰πüÂ∞±ÊòØËØ¥Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáËá™Â∑±ÂÜô‰∏Ä‰∏™ÂâçÂêëËøêÁÆóÂõæÔºåÊï¥ÂêàÂÖ∂ËÆ≠ÁªÉÂèÇÊï∞Â∞±ÂèØ‰ª•Âø´ÈÄüÂÆûÁé∞Á±ª Prisma ÁöÑÂ∫îÁî®„ÄÇ</p>\n<p>‰∏ãÈù¢Â∞±‰ªãÁªç‰∏Ä‰∏ãÂ¶Ç‰ΩïÂú® iPhone ‰∏äË∑ë‰∏Ä‰∏™Ëá™Â∑±ÁöÑ**‚ÄúPrisma‚Äù**„ÄÇ</p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-ab4749c205d9f6f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ÊãõË¥¢ÂíåÂíïÂôú\"></p>\n<h2 id=\"ÂáÜÂ§áÂ∑•‰Ωú\"><a class=\"header-anchor\" href=\"#ÂáÜÂ§áÂ∑•‰Ωú\">¬∂</a>ÂáÜÂ§áÂ∑•‰Ωú</h2>\n<hr>\n<ol>\n<li>ÂÆâË£Ö<a href=\"https://www.tensorflow.org/versions/r0.12/get_started/os_setup.html#download-and-setup\" target=\"_blank\" rel=\"noopener\">Tensorflow</a>ÔºåËøô‰∏™ÂÆòÁΩë‰∏äÊúâËØ¶ÁªÜÊïôÁ®ãËøôÈáåÂ∞±‰∏çÂ§öËØ¥‰∫Ü„ÄÇ</li>\n<li>Êê≠Âª∫<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/ios_examples/\" target=\"_blank\" rel=\"noopener\">iOS+Tensorflow</a>Â∑•Á®ãÔºåËøô‰∏™ÂèØ‰ª•Ê†πÊçÆ Git ‰∏äÁöÑÊ≠•È™§ÂÆûÁé∞Ôºå‰πüÂèØ‰ª•ÂèÇËÄÉÂÆòÊñπÁöÑ Demo Á®ãÂ∫èÈÖçÁΩÆ„ÄÇÔºàËøô‰∏™ËøáÁ®ãÊúâÂæàÂ§öÂùëÔºåÂ§öÊ¨°Â∞ùËØïÔºåÂ∫îËØ•ÂèØ‰ª•ÈÖçÁΩÆÊàêÂäüÔºâ</li>\n<li>‰∏ãËΩΩÊ®°ÂûãÔºåÊú¨Ê¨°‰ΩøÁî®ÁöÑÊ®°ÂûãÊòØ<a href=\"https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization\" target=\"_blank\" rel=\"noopener\">image_stylization</a>Ôºågoogle Â∑≤ÂºÄÊ∫êÂú® GitHub ‰∏ä„ÄÇ</li>\n<li>‰∏ãËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÂèÇÊï∞ÔºåGoogle Êèê‰æõ‰∫Ü 2 ‰∏™Ôºö<br>\n<a href=\"http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-monet.ckpt\" target=\"_blank\" rel=\"noopener\">Monet</a><br>\n<a href=\"http://download.magenta.tensorflow.org/models/multistyle-pastiche-generator-varied.ckpt\" target=\"_blank\" rel=\"noopener\">Varied</a><br>\nMonet ËÆ≠ÁªÉ‰∫Ü 10 ÁßçËâ∫ÊúØÂõæÁâáÔºåVaried ËÆ≠ÁªÉ‰∫Ü 32 Áßç„ÄÇ<br>\nÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•Ëá™Â∑±ËÆ≠ÁªÉËâ∫ÊúØÂõæÁâáÔºå‰ΩÜÊòØÂæó‰∏ãËΩΩ VGG ÁöÑËÆ≠ÁªÉÂèÇÊï∞Âíå ImageNet Êï∞ÊçÆÔºåÁÑ∂ÂêéËá™Â∑±ËÆ≠ÁªÉÔºåÊØîËæÉËä±Êó∂Èó¥„ÄÇ</li>\n</ol>\n<h2 id=\"ÊûÑÂª∫ËÆ°ÁÆóÂõæ\"><a class=\"header-anchor\" href=\"#ÊûÑÂª∫ËÆ°ÁÆóÂõæ\">¬∂</a>ÊûÑÂª∫ËÆ°ÁÆóÂõæ</h2>\n<hr>\n<p>ËôΩÁÑ∂ Google Êèê‰æõ‰∫ÜÊ®°ÂûãÁöÑÊ∫êÁ†ÅÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâÂú®Ê∫êÁ†Å‰∏≠ËæìÂá∫ËøêÁÆóÂõæÂ∑≤Êñπ‰æøËøÅÁßªÂà∞ÁßªÂä®ËÆæÂ§á‰∏≠‰ΩøÁî®ÔºåAndroid ÁöÑ Demo ‰∏≠ÂÄíÊòØÊèê‰æõ‰∫ÜÁîüÊàêÁöÑ pbÔºåÂ¶Ç‰ΩïËßâÂæóËá™Â∑±ÂÜôËÆ°ÁÆóÂõæÈ∫ªÁÉ¶ÂèØ‰ª•Áõ¥Êé•Êã∑Âà∞Ëá™Â∑± iOS Â∑•Á®ã‰∏≠‰ΩøÁî®„ÄÇ</p>\n<p>ÊàëËøôÈáåÂàõÂª∫‰∫Ü‰∏Ä‰∏™ python ÁöÑÂ∑•Á®ãÔºåÁÑ∂ÂêéÊää Google Ê∫êÁ†Å‰∏≠ <a href=\"http://model.py\" target=\"_blank\" rel=\"noopener\">model.py</a> Áõ∏ÂÖ≥ÁöÑÊñá‰ª∂ÈÉΩÂä†ÂÖ•‰∫ÜÂ∑•Á®ã„ÄÇ<br>\nÊàëÁöÑÂª∫Âõæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import tensorflow as tf</span><br><span class=\"line\">import ast</span><br><span class=\"line\">import os</span><br><span class=\"line\">from tensorflow.python import pywrap_tensorflow</span><br><span class=\"line\"></span><br><span class=\"line\">from matplotlib import pyplot</span><br><span class=\"line\">from matplotlib.pyplot import imshow</span><br><span class=\"line\"></span><br><span class=\"line\">import image_utils</span><br><span class=\"line\">import model</span><br><span class=\"line\">import ops</span><br><span class=\"line\">import argparse</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">num_styles = 32</span><br><span class=\"line\">imgWidth = 512</span><br><span class=\"line\">imgHeight = 512</span><br><span class=\"line\">channel = 3</span><br><span class=\"line\">checkpoint = &quot;/Users/Jiao/Desktop/TFProject/style-image/checkpoint/multistyle-pastiche-generator-varied.ckpt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">inputImage = tf.placeholder(tf.float32,shape=[None,imgWidth,imgHeight,channel],name=&quot;input&quot;)</span><br><span class=\"line\">styles = tf.placeholder(tf.float32,shape=[num_styles],name=&quot;style&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">with tf.name_scope(&quot;&quot;):</span><br><span class=\"line\">    transform = model.transform(inputImage,</span><br><span class=\"line\">                            normalizer_fn=ops.weighted_instance_norm,</span><br><span class=\"line\">                            normalizer_params=&#123;</span><br><span class=\"line\">                                # &apos;weights&apos;: tf.constant(mixture),</span><br><span class=\"line\">                                &apos;weights&apos; : styles,</span><br><span class=\"line\">                                &apos;num_categories&apos;: num_styles,</span><br><span class=\"line\">                                &apos;center&apos;: True,</span><br><span class=\"line\">                                &apos;scale&apos;: True&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">model_saver = tf.train.Saver(tf.global_variables())</span><br><span class=\"line\"></span><br><span class=\"line\">with tf.Session() as sess:</span><br><span class=\"line\">    tf.train.write_graph(sess.graph_def, &quot;/Users/Jiao/Desktop/TFProject/style-image/protobuf&quot;, &quot;input.pb&quot;)</span><br><span class=\"line\">    #checkpoint = os.path.expanduser(checkpoint)</span><br><span class=\"line\">    #if tf.gfile.IsDirectory(checkpoint):</span><br><span class=\"line\">    #    checkpoint = tf.train.latest_checkpoint(checkpoint)</span><br><span class=\"line\">    #    tf.logging.info(&apos;loading latest checkpoint file: &#123;&#125;&apos;.format(checkpoint))</span><br><span class=\"line\">    #model_saver.restore(sess, checkpoint)</span><br><span class=\"line\"></span><br><span class=\"line\">    #newstyle = np.zeros([num_styles], dtype=np.float32)</span><br><span class=\"line\">    #newstyle[18] = 0.5</span><br><span class=\"line\">    #newstyle[17] = 0.5</span><br><span class=\"line\">    #newImage = np.zeros((1,imgWidth,imgHeight,channel))</span><br><span class=\"line\">    #style_image = transform.eval(feed_dict=&#123;inputImage:newImage,styles:newstyle&#125;)</span><br><span class=\"line\">    #style_image = style_image[0]</span><br><span class=\"line\">    #imshow(style_image)</span><br><span class=\"line\">    #pyplot.show()</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáåËæìÂÖ•ËäÇÁÇπÊòØ<code>input</code>Âíå<code>style</code>ÔºåËæìÂá∫ËäÇÁÇπÊòØ model ‰∏≠ÁöÑ<code>transformer/expand/conv3/conv/Sigmoid</code>„ÄÇ</p>\n<p>Âà∞Ê≠§Â∞±Â∞ÜÊ®°ÂûãÁöÑËÆ°ÁÆóÂõæ‰øùÂ≠òÂà∞‰∫ÜÊú¨Âú∞Êñá‰ª∂Â§π‰∏≠„ÄÇ<br>\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂõæÂíå ckpt ‰∏≠ÁöÑÂèÇÊï∞ÂêàÂπ∂ÔºåÂπ∂‰∏îÁîüÊàêÁßªÂä®Á´ØÁöÑÂèØ‰ª•‰ΩøÁî®ÁöÑ pb Êñá‰ª∂ÔºåËøô‰∏ÄÊ≠•ÂèØ‰ª•ÂèÇËÄÉÊàë‰∏ä‰∏ÄÁØáÊñáÁ´†<a href=\"http://www.jianshu.com/p/f096fe2212ce\" target=\"_blank\" rel=\"noopener\">„ÄäiOS+Tensorflow ÂÆûÁé∞ÂõæÂÉèËØÜÂà´„Äã</a>ÔºåÂæàÂÆπÊòìÂ∞±ÂÆûÁé∞„ÄÇ</p>\n<h2 id=\"ios-Â∑•Á®ã\"><a class=\"header-anchor\" href=\"#ios-Â∑•Á®ã\">¬∂</a>iOS Â∑•Á®ã</h2>\n<hr>\n<p>Âú®‰∏äÈù¢ÂáÜÂ§áÂ∑•‰Ωú‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÊåâÊ≠•È™§Êê≠Âª∫Â•Ω iOS+TF ÁöÑÂ∑•Á®ãÔºåËøôÈáå‰Ω†Âè™ÈúÄË¶ÅÂØºÂÖ•ÁîüÊàêÁöÑÊúÄÁªà pb Êñá‰ª∂Â∞±Ë°å‰∫Ü„ÄÇÂ∑•Á®ãÁªìÊûÑÂ¶ÇÂõæÔºö</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-ca34abd1c875504c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"XCodeÂ∑•Á®ã\"></p>\n<p>ÁÑ∂ÂêéÂú® iOS ‰ΩøÁî® pb Êñá‰ª∂ÔºåÊàëËøôÈáåÁõ¥Êé•ÂØºÂÖ•‰∫Ü Google Êèê‰æõÁöÑ<code>tensorflow_utils</code>Ôºå‰ΩøÁî®Ëøô‰∏™Á±ªÈáåÈù¢ÁöÑ LoadModel ÊñπÊ≥ïÂèØ‰ª•ÂæàÂø´ÁöÑÁîüÊàêÂê´ÊúâËÆ°ÁÆóÂõæÁöÑ session„ÄÇ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)viewDidLoad &#123;</span><br><span class=\"line\">    [super viewDidLoad];</span><br><span class=\"line\">    tensorflow::Status load_status;</span><br><span class=\"line\">    load_status = LoadModel(@&quot;rounded_graph&quot;, @&quot;pb&quot;, &amp;tf_session);</span><br><span class=\"line\">    if (!load_status.ok()) &#123;</span><br><span class=\"line\">        LOG(FATAL) &lt;&lt; &quot;Couldn&apos;t load model: &quot; &lt;&lt; load_status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    currentStyle = 0;</span><br><span class=\"line\">    isDone = true;</span><br><span class=\"line\">    _styleImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class=\"line\">    _styleImageView.layer.borderWidth = 0.5;</span><br><span class=\"line\">    _ogImageView.layer.borderColor = [UIColor grayColor].CGColor;</span><br><span class=\"line\">    _ogImageView.layer.borderWidth = 0.5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ÊúÄÂêéÂ∞±ÊòØËé∑ÂèñÂõæÁâáÔºåÊâßË°åËøêÁÆóÔºåÁîüÊàêËâ∫ÊúØÂõæÁâáÂ±ïÁ§∫„ÄÇËøôÈáåÂõæÁâáÈúÄË¶ÅËΩ¨Êç¢Êàê bitmap ÁÑ∂ÂêéËé∑Âèñ data ÂÄºÔºåÂ±ïÁ§∫ÂõæÁâá‰πüÊòØÁõ∏ËØÜÁöÑËøáÁ®ã„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)runCnn:(UIImage *)compressedImg</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned char *pixels = [self getImagePixel:compressedImg];</span><br><span class=\"line\">    int image_channels = 4;</span><br><span class=\"line\">    tensorflow::Tensor image_tensor(</span><br><span class=\"line\">                                    tensorflow::DT_FLOAT,</span><br><span class=\"line\">                                    tensorflow::TensorShape(</span><br><span class=\"line\">                                                            &#123;1, wanted_input_height, wanted_input_width, wanted_input_channels&#125;));</span><br><span class=\"line\">    auto image_tensor_mapped = image_tensor.tensor&lt;float, 4&gt;();</span><br><span class=\"line\">    tensorflow::uint8 *in = pixels;</span><br><span class=\"line\">    float *out = image_tensor_mapped.data();</span><br><span class=\"line\">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class=\"line\">        float *out_row = out + (y * wanted_input_width * wanted_input_channels);</span><br><span class=\"line\">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class=\"line\">            tensorflow::uint8 *in_pixel =</span><br><span class=\"line\">            in + (x * wanted_input_width * image_channels) + (y * image_channels);</span><br><span class=\"line\">            float *out_pixel = out_row + (x * wanted_input_channels);</span><br><span class=\"line\">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class=\"line\">                out_pixel[c] = in_pixel[c];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    tensorflow::Tensor style(tensorflow::DT_FLOAT, tensorflow::TensorShape(&#123;32&#125;));</span><br><span class=\"line\">    float *style_data = style.tensor&lt;float, 1&gt;().data();</span><br><span class=\"line\">    memset(style_data, 0, sizeof(float) * 32);</span><br><span class=\"line\">    style_data[currentStyle] = 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (tf_session.get()) &#123;</span><br><span class=\"line\">        std::vector&lt;tensorflow::Tensor&gt; outputs;</span><br><span class=\"line\">        tensorflow::Status run_status = tf_session-&gt;Run(</span><br><span class=\"line\">                                                        &#123;&#123;contentNode, image_tensor&#125;,</span><br><span class=\"line\">                                                            &#123;styleNode, style&#125;&#125;,</span><br><span class=\"line\">                                                        &#123;outputNode&#125;,</span><br><span class=\"line\">                                                        &#123;&#125;,</span><br><span class=\"line\">                                                        &amp;outputs);</span><br><span class=\"line\">        if (!run_status.ok()) &#123;</span><br><span class=\"line\">            LOG(ERROR) &lt;&lt; &quot;Running model failed:&quot; &lt;&lt; run_status;</span><br><span class=\"line\">            isDone = true;</span><br><span class=\"line\">            free(pixels);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            float *styledData = outputs[0].tensor&lt;float,4&gt;().data();</span><br><span class=\"line\">            UIImage *styledImg = [self createImage:styledData];</span><br><span class=\"line\">            dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">                _styleImageView.image = styledImg;</span><br><span class=\"line\">                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">                    isDone = true;</span><br><span class=\"line\">                    free(pixels);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (unsigned char *)getImagePixel:(UIImage *)image</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int width = image.size.width;</span><br><span class=\"line\">    int height = image.size.height;</span><br><span class=\"line\">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class=\"line\">    unsigned char *rawData = (unsigned char*) calloc(height * width * 4, sizeof(unsigned char));</span><br><span class=\"line\">    NSUInteger bytesPerPixel = 4;</span><br><span class=\"line\">    NSUInteger bytesPerRow = bytesPerPixel * width;</span><br><span class=\"line\">    NSUInteger bitsPerComponent = 8;</span><br><span class=\"line\">    CGContextRef context = CGBitmapContextCreate(rawData, width, height,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class=\"line\"></span><br><span class=\"line\">    CGColorSpaceRelease(colorSpace);</span><br><span class=\"line\">    CGContextDrawImage(context, CGRectMake(0, 0, width, height), image.CGImage);</span><br><span class=\"line\">    UIImage *ogImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class=\"line\">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class=\"line\">        _ogImageView.image = ogImg;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    CGContextRelease(context);</span><br><span class=\"line\">    return rawData;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (UIImage *)createImage:(float *)pixels</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned char *rawData = (unsigned char*) calloc(wanted_input_height * wanted_input_width * 4, sizeof(unsigned char));</span><br><span class=\"line\">    for (int y = 0; y &lt; wanted_input_height; ++y) &#123;</span><br><span class=\"line\">        unsigned char *out_row = rawData + (y * wanted_input_width * 4);</span><br><span class=\"line\">        for (int x = 0; x &lt; wanted_input_width; ++x) &#123;</span><br><span class=\"line\">            float *in_pixel =</span><br><span class=\"line\">            pixels + (x * wanted_input_width * 3) + (y * 3);</span><br><span class=\"line\">            unsigned char *out_pixel = out_row + (x * 4);</span><br><span class=\"line\">            for (int c = 0; c &lt; wanted_input_channels; ++c) &#123;</span><br><span class=\"line\">                out_pixel[c] = in_pixel[c] * 255;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            out_pixel[3] = UINT8_MAX;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class=\"line\">    NSUInteger bytesPerPixel = 4;</span><br><span class=\"line\">    NSUInteger bytesPerRow = bytesPerPixel * wanted_input_width;</span><br><span class=\"line\">    NSUInteger bitsPerComponent = 8;</span><br><span class=\"line\">    CGContextRef context = CGBitmapContextCreate(rawData, wanted_input_width, wanted_input_height,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class=\"line\"></span><br><span class=\"line\">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class=\"line\"></span><br><span class=\"line\">    CGColorSpaceRelease(colorSpace);</span><br><span class=\"line\">    UIImage *retImg = [UIImage imageWithCGImage:CGBitmapContextCreateImage(context)];</span><br><span class=\"line\">    CGContextRelease(context);</span><br><span class=\"line\">    free(rawData);</span><br><span class=\"line\">    return retImg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>ËøôÈáåËØ¥Êòé‰∏Ä‰∏ãÔºåÂâçÈù¢ python Â∑•Á®ãÂ∑≤ÁªèÂÆö‰πâ‰∫ÜÔºåÊàëÁöÑËæìÂÖ•ÂíåËæìÂá∫ÂõæÁâáÁöÑÂ§ßÂ∞èÊòØ 512‚úï512„ÄÇ</em></p>\n<h2 id=\"ËøûÊé•-iphone-ËøêË°åÂ∑•Á®ã\"><a class=\"header-anchor\" href=\"#ËøûÊé•-iphone-ËøêË°åÂ∑•Á®ã\">¬∂</a>ËøûÊé• iPhoneÔºåËøêË°åÂ∑•Á®ã</h2>\n<hr>\n<p>ÊúÄÂêéËøû‰∏äÊâãÊú∫ËøêË°åÔºåÂ∞±ÂèØ‰ª•Ëá™Â∑±ÂàõÂª∫Ëá™Â∑±ÁöÑËâ∫ÊúØÁ±ªÂõæÁâá‰∫Ü„ÄÇüòä</p>\n<p>ÊîæÂá†Âº†ËøêË°åÊïàÊûúÂõæÔºö<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/2641798-d105c1089f62c634.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ1\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-6b722e433ca66c5b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ2\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-1b5acd6620b5b447.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êà™Âõæ3\"></p>"},{"title":"ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ","date":"2018-08-29T01:50:00.000Z","toc":true,"thumbnail":"https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/124","_content":"\n## ÂâçË®Ä\n\nÈõ∑ËææÂõæÔºàRadar ChartÔºâÔºåÂèàÂèØÁß∞‰∏∫Êà¥Â∏ÉÊãâÂõæ„ÄÅËúòËõõÁΩëÂõæÔºàSpider ChartÔºâÔºåÊòØË¥¢Âä°ÂàÜÊûêÊä•Ë°®ÁöÑ‰∏ÄÁßç„ÄÇ‰ΩøÁî®ËÄÖËÉΩ‰∏ÄÁõÆ‰∫ÜÁÑ∂ÁöÑ‰∫ÜËß£ÂêÑÈ°πÊåáÊ†áÁöÑÂèòÂä®ÊÉÖÂΩ¢ÂèäÂÖ∂Â•ΩÂùèË∂ãÂêë„ÄÇ\nÊú¨Êñá‰ªãÁªçÂ¶Ç‰ΩïÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÂÆûÁé∞Èõ∑ËææÂõæÁªòÂà∂„ÄÇ\n\n<!-- more -->\n\n![Èõ∑ËææÂõæ](https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ËÉåÊôØ\n\nÈ¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÁªòÂà∂Âá∫Èõ∑ËææÂõæÂêéÈù¢ÁöÑ‚ÄúËúòËõõÁΩë‚Äù„ÄÇÂÖ∑‰ΩìÂéüÁêÜÂ∞±ÊòØ‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂ∞ÜÂ§öËæπÂΩ¢ÁîªÂá∫Êù•ÔºåÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÊØè‰∏Ä‰∏™ÁÇπÁöÑ‰ΩçÁΩÆÂíåÂçäÂæÑÈïøÂ∫¶„ÄÇ\n\n```\nvar angle = Math.PI * 2 / length;\nfor (var layer = 5; layer > 0; layer--) {\n        context.beginPath();\n        context.setGlobalAlpha(1);\n        context.setStrokeStyle(\"#D3D3D3\");\n        if (layer % 2 != 0) {\n          context.setFillStyle(\"white\");\n        } else {\n          context.setFillStyle(\"#F5F5F5\");\n        }\n        var currentRad = layer / 5 * radius;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        context.fill();\n        context.closePath();\n        context.stroke();\n      }\n```\n\nÂ¶Ç‰ª£Á†ÅÊâÄÁ§∫Ôºå`angle`ÊòØÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÁöÑÔºåËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºå‰∏ÄÂÖ±Áîª‰∫îÂ±ÇÔºåÂπ∂‰∏î‰∫§ÊõøÊ∂ÇÊäπÈ¢úËâ≤„ÄÇ‰∏ãÂõæÊòØ`length=6`ÁöÑÊïàÊûúÔºö\n![ËúòËõõÁΩë](https://upload-images.jianshu.io/upload_images/2641798-482cb08a73db4b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ËΩ¥\n\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂêÑ‰∏™È°∂ÁÇπ‰∏éÂúÜÂøÉËøûÊé•Ëµ∑Êù•„ÄÇÊúâ‰∫Ü‚ÄúËúòËõõÁΩë‚ÄùÁöÑÁªèÈ™åÔºåÁîªËΩ¥Â∞±ÁÆÄÂçïÂ§ö‰∫ÜÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπ‰ΩçÁΩÆÁÑ∂Âêé`lineTo`ÂúÜÂøÉÂ∞±Ë°å‰∫Ü„ÄÇ\n\n```\n      // draw Axis\n      context.beginPath();\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));\n        context.lineTo(center.x, center.y);\n        currentAngle += angle;\n      }\n      context.closePath();\n      context.stroke();\n```\n\n‰ª•‰∏ãÊòØÂä†‰∏äËΩ¥Á∫øÂêéÁöÑÊïàÊûúÔºö\n![Êï∞ËΩ¥](https://upload-images.jianshu.io/upload_images/2641798-fd3a8dd75cc634c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ÊåáÊ†á\n\nÊé•‰∏ãÊù•ÊòØÂ∞ÜÂêÑ‰∏™Áª¥Â∫¶ÊåáÊ†áÂêçÂ≠óÊ∑ªÂä†Âà∞ÂõæË°®‰∏ä„ÄÇÂêåÊï∞ËΩ¥‰∏ÄÊ†∑ÔºåÈ¶ñÂÖàÈúÄË¶ÅÁ°ÆÂÆöÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÊ†πÊçÆ‰ΩçÁΩÆË∞ÉÊï¥ÊñáÂ≠óÊòæÁ§∫ÁöÑÂü∫ÂáÜÔºåÂ∞ÜÊñáÂ≠óÂÜô‰∏äÂéª„ÄÇ\n\n```\n      // draw Index\n      context.beginPath();\n      context.setFillStyle(\"#D3D3D3\");\n      context.setFontSize(14);\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        var posX = center.x + radius * Math.cos(currentAngle);\n        var posY = center.y + radius * Math.sin(currentAngle);\n        if (posX < center.x) context.setTextAlign(\"right\");\n        else context.setTextAlign(\"left\");\n        if (posY > center.y) context.setTextBaseline(\"top\");\n        else context.setTextBaseline(\"bottom\");\n        context.fillText(that.options.xLabel[i], posX, posY);\n        currentAngle += angle;\n      }\n      context.closePath();\n```\n\nËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºåÂØπ‰∫éÊñáÂ≠óË¶ÅÊòæÁ§∫ÁöÑ‰ΩçÁΩÆÂ∞è‰∫é‰∏≠ÂøÉÁÇπ x ÂùêÊ†áÁöÑÈù†Âè≥ÂØπÈΩêÔºåÂê¶ÂàôÈù†Â∑¶ÂØπÈΩêÔºõÂØπ‰∫éÊñáÂ≠ó‰ΩçÁΩÆÂ§ß‰∫é‰∏≠ÂøÉÁÇπ y ÂùêÊ†áÁöÑÂü∫ÂáÜËÆæÁΩÆÂú®‰∏äÊñπÔºåÂê¶ÂàôÂú®‰∏ãÊñπ„ÄÇ‰ª•‰∏ãÊòØÂä†‰∏äÊåáÊ†áÂêéÁöÑÊïàÊûúÔºö\n![ÊåáÊ†á](https://upload-images.jianshu.io/upload_images/2641798-896f6d32eda04d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂Êï∞ÊçÆ\n\nÊúÄÂêéÔºåÊàë‰ª¨Â∞ÜÊï∞ÊçÆÁªòÂà∂Âà∞ÂõæË°®‰∏ä„ÄÇÈ¶ñÂÖàÔºåÊàë‰ª¨Ë¶ÅÁ°ÆÂÆöÊâÄÊúâÊï∞ÊçÆÁöÑÊúÄÂ§ßÂÄºÔºåÂ¶ÇÊûúÊúÄÂ§ßÂÄºÂ§ß‰∫é 10ÔºåÈÇ£‰πàÂèñ 10 ÁöÑÂÄçÊï∞„ÄÇÁÑ∂ÂêéÂêåÁîª‚ÄúËúòËõõÁΩë‚Äù‰∏ÄÊ†∑ÔºåÂ∞ÜÂêÑ‰∏™Êï∞ÊçÆÁÇπÁöÑÂçäÂæÑÊ†πÊçÆÁõ∏ÂØπ‰∫éÊúÄÂ§ßÂÄºÊØî‰æãÊç¢ÁÆóÂá∫Êù•ÔºåÁÑ∂ÂêéÁªòÂà∂Âú®ÂõæË°®‰∏ä„ÄÇ\n\n```\n      // draw data\n      var MaxValue = Math.max.apply(null, that.options.data[0].value);\n      that.options.data.forEach(function(val) {\n        var temp = Math.max.apply(null, val.value);\n        if (temp > MaxValue) MaxValue = temp;\n      });\n      if (MaxValue > 10) {\n        MaxValue = Math.ceil(MaxValue / 10) * 10\n      }\n\n      that.options.data.forEach(function(val) {\n        context.beginPath();\n        context.setStrokeStyle(val.color);\n        var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          currentRad = radius * val.value[i] / MaxValue * step / MaxStep;\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.lineTo(center.x, center.y - currentRad);\n        context.stroke();\n        if (that.options.area) {\n          context.setFillStyle(val.color);\n          context.setGlobalAlpha(0.5);\n          context.fill();\n        }\n        context.closePath();\n      });\n      context.draw();\n```\n\n‰ª•‰∏ãÂ∞±ÊòØÊ∑ªÂä†Êï∞ÊçÆÂêéÁöÑÂÆåÊï¥ÊïàÊûúÔºö\n![Êï∞ÊçÆ](https://upload-images.jianshu.io/upload_images/2641798-cb22523fbd815021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\n\n‰∏∫‰∫ÜÊòæÁ§∫ÊïàÊûúÊõ¥‰Ω≥ÔºåÊàë‰ª¨ÂèØ‰ª•ÁªôÁªòÂà∂ÂõæË°®Âä†‰∏äÂä®ÁîªÔºåÂÖ∑‰ΩìÂÆûÁé∞Â¶Ç‰∏ãÔºö\n\n```\n  var angle = Math.PI * 2 / length;\n\n  var step = 1;\n  var MaxStep = that.options.animation ? 50 : 1;\n  var animation = function() {\n    if (step <= MaxStep) {\n      // draw background\n      for (var layer = 5; layer > 0; layer--) {\n        context.beginPath();\n        context.setGlobalAlpha(1);\n        context.setStrokeStyle(\"#D3D3D3\");\n        if (layer % 2 != 0) {\n          context.setFillStyle(\"white\");\n        } else {\n          context.setFillStyle(\"#F5F5F5\");\n        }\n        var currentRad = layer / 5 * radius;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        context.fill();\n        context.closePath();\n        context.stroke();\n      }\n\n      // draw Axis\n      context.beginPath();\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));\n        context.lineTo(center.x, center.y);\n        currentAngle += angle;\n      }\n      context.closePath();\n      context.stroke();\n\n      // draw Index\n      context.beginPath();\n      context.setFillStyle(\"#D3D3D3\");\n      context.setFontSize(14);\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        var posX = center.x + radius * Math.cos(currentAngle);\n        var posY = center.y + radius * Math.sin(currentAngle);\n        if (posX < center.x) context.setTextAlign(\"right\");\n        else context.setTextAlign(\"left\");\n        if (posY > center.y) context.setTextBaseline(\"top\");\n        else context.setTextBaseline(\"bottom\");\n        context.fillText(that.options.xLabel[i], posX, posY);\n        currentAngle += angle;\n      }\n      context.closePath();\n\n      // draw data\n      var MaxValue = Math.max.apply(null, that.options.data[0].value);\n      that.options.data.forEach(function(val) {\n        var temp = Math.max.apply(null, val.value);\n        if (temp > MaxValue) MaxValue = temp;\n      });\n      if (MaxValue > 10) {\n        MaxValue = Math.ceil(MaxValue / 10) * 10\n      }\n\n      that.options.data.forEach(function(val) {\n        context.beginPath();\n        context.setStrokeStyle(val.color);\n        var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          currentRad = radius * val.value[i] / MaxValue * step / MaxStep;\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.lineTo(center.x, center.y - currentRad);\n        context.stroke();\n        if (that.options.area) {\n          context.setFillStyle(val.color);\n          context.setGlobalAlpha(0.5);\n          context.fill();\n        }\n        context.closePath();\n      });\n      context.draw();\n      step++;\n    } else {\n      clearInterval(aniName);\n    }\n  }\n  var aniName = setInterval(animation, 10);\n```\n\nÊúÄÁªàÊïàÊûúÂ¶Ç‰∏ãÔºö\n![Âä®ÁîªÊïàÊûú](https://upload-images.jianshu.io/upload_images/2641798-d476058258f845d5.gif?imageMogr2/auto-orient/strip)\n\n## ÁªìËØ≠\n\nüòä ‰ª•‰∏äÂ∞±ÊòØÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæÁöÑÊñπÊ≥ï„ÄÇÂ¶ÇÊúâÂÖ¥Ë∂£‰∫ÜËß£Êõ¥Â§öÔºåÂèØ‰ª•Êü•ÁúãÂÆåÊï¥‰ª£Á†ÅÔºö[https://github.com/chmini-app/CHCharts-wechat](https://github.com/chmini-app/CHCharts-wechat)„ÄÇ\n","source":"_posts/ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ.md","raw":"---\ntitle: ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ\ndate: 2018-08-29 09:50:00\ntags: [Â∞èÁ®ãÂ∫è, html, ÂâçÁ´Ø]\ntoc: true\ncategories:\n  - Â∑•‰Ωú\n  - Â∞èÁ®ãÂ∫è\nthumbnail: https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/124\n---\n\n## ÂâçË®Ä\n\nÈõ∑ËææÂõæÔºàRadar ChartÔºâÔºåÂèàÂèØÁß∞‰∏∫Êà¥Â∏ÉÊãâÂõæ„ÄÅËúòËõõÁΩëÂõæÔºàSpider ChartÔºâÔºåÊòØË¥¢Âä°ÂàÜÊûêÊä•Ë°®ÁöÑ‰∏ÄÁßç„ÄÇ‰ΩøÁî®ËÄÖËÉΩ‰∏ÄÁõÆ‰∫ÜÁÑ∂ÁöÑ‰∫ÜËß£ÂêÑÈ°πÊåáÊ†áÁöÑÂèòÂä®ÊÉÖÂΩ¢ÂèäÂÖ∂Â•ΩÂùèË∂ãÂêë„ÄÇ\nÊú¨Êñá‰ªãÁªçÂ¶Ç‰ΩïÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÂÆûÁé∞Èõ∑ËææÂõæÁªòÂà∂„ÄÇ\n\n<!-- more -->\n\n![Èõ∑ËææÂõæ](https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ËÉåÊôØ\n\nÈ¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÁªòÂà∂Âá∫Èõ∑ËææÂõæÂêéÈù¢ÁöÑ‚ÄúËúòËõõÁΩë‚Äù„ÄÇÂÖ∑‰ΩìÂéüÁêÜÂ∞±ÊòØ‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂ∞ÜÂ§öËæπÂΩ¢ÁîªÂá∫Êù•ÔºåÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÊØè‰∏Ä‰∏™ÁÇπÁöÑ‰ΩçÁΩÆÂíåÂçäÂæÑÈïøÂ∫¶„ÄÇ\n\n```\nvar angle = Math.PI * 2 / length;\nfor (var layer = 5; layer > 0; layer--) {\n        context.beginPath();\n        context.setGlobalAlpha(1);\n        context.setStrokeStyle(\"#D3D3D3\");\n        if (layer % 2 != 0) {\n          context.setFillStyle(\"white\");\n        } else {\n          context.setFillStyle(\"#F5F5F5\");\n        }\n        var currentRad = layer / 5 * radius;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        context.fill();\n        context.closePath();\n        context.stroke();\n      }\n```\n\nÂ¶Ç‰ª£Á†ÅÊâÄÁ§∫Ôºå`angle`ÊòØÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÁöÑÔºåËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºå‰∏ÄÂÖ±Áîª‰∫îÂ±ÇÔºåÂπ∂‰∏î‰∫§ÊõøÊ∂ÇÊäπÈ¢úËâ≤„ÄÇ‰∏ãÂõæÊòØ`length=6`ÁöÑÊïàÊûúÔºö\n![ËúòËõõÁΩë](https://upload-images.jianshu.io/upload_images/2641798-482cb08a73db4b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ËΩ¥\n\nÊé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂêÑ‰∏™È°∂ÁÇπ‰∏éÂúÜÂøÉËøûÊé•Ëµ∑Êù•„ÄÇÊúâ‰∫Ü‚ÄúËúòËõõÁΩë‚ÄùÁöÑÁªèÈ™åÔºåÁîªËΩ¥Â∞±ÁÆÄÂçïÂ§ö‰∫ÜÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπ‰ΩçÁΩÆÁÑ∂Âêé`lineTo`ÂúÜÂøÉÂ∞±Ë°å‰∫Ü„ÄÇ\n\n```\n      // draw Axis\n      context.beginPath();\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));\n        context.lineTo(center.x, center.y);\n        currentAngle += angle;\n      }\n      context.closePath();\n      context.stroke();\n```\n\n‰ª•‰∏ãÊòØÂä†‰∏äËΩ¥Á∫øÂêéÁöÑÊïàÊûúÔºö\n![Êï∞ËΩ¥](https://upload-images.jianshu.io/upload_images/2641798-fd3a8dd75cc634c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂ÊåáÊ†á\n\nÊé•‰∏ãÊù•ÊòØÂ∞ÜÂêÑ‰∏™Áª¥Â∫¶ÊåáÊ†áÂêçÂ≠óÊ∑ªÂä†Âà∞ÂõæË°®‰∏ä„ÄÇÂêåÊï∞ËΩ¥‰∏ÄÊ†∑ÔºåÈ¶ñÂÖàÈúÄË¶ÅÁ°ÆÂÆöÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÊ†πÊçÆ‰ΩçÁΩÆË∞ÉÊï¥ÊñáÂ≠óÊòæÁ§∫ÁöÑÂü∫ÂáÜÔºåÂ∞ÜÊñáÂ≠óÂÜô‰∏äÂéª„ÄÇ\n\n```\n      // draw Index\n      context.beginPath();\n      context.setFillStyle(\"#D3D3D3\");\n      context.setFontSize(14);\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        var posX = center.x + radius * Math.cos(currentAngle);\n        var posY = center.y + radius * Math.sin(currentAngle);\n        if (posX < center.x) context.setTextAlign(\"right\");\n        else context.setTextAlign(\"left\");\n        if (posY > center.y) context.setTextBaseline(\"top\");\n        else context.setTextBaseline(\"bottom\");\n        context.fillText(that.options.xLabel[i], posX, posY);\n        currentAngle += angle;\n      }\n      context.closePath();\n```\n\nËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºåÂØπ‰∫éÊñáÂ≠óË¶ÅÊòæÁ§∫ÁöÑ‰ΩçÁΩÆÂ∞è‰∫é‰∏≠ÂøÉÁÇπ x ÂùêÊ†áÁöÑÈù†Âè≥ÂØπÈΩêÔºåÂê¶ÂàôÈù†Â∑¶ÂØπÈΩêÔºõÂØπ‰∫éÊñáÂ≠ó‰ΩçÁΩÆÂ§ß‰∫é‰∏≠ÂøÉÁÇπ y ÂùêÊ†áÁöÑÂü∫ÂáÜËÆæÁΩÆÂú®‰∏äÊñπÔºåÂê¶ÂàôÂú®‰∏ãÊñπ„ÄÇ‰ª•‰∏ãÊòØÂä†‰∏äÊåáÊ†áÂêéÁöÑÊïàÊûúÔºö\n![ÊåáÊ†á](https://upload-images.jianshu.io/upload_images/2641798-896f6d32eda04d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## ÁªòÂà∂Êï∞ÊçÆ\n\nÊúÄÂêéÔºåÊàë‰ª¨Â∞ÜÊï∞ÊçÆÁªòÂà∂Âà∞ÂõæË°®‰∏ä„ÄÇÈ¶ñÂÖàÔºåÊàë‰ª¨Ë¶ÅÁ°ÆÂÆöÊâÄÊúâÊï∞ÊçÆÁöÑÊúÄÂ§ßÂÄºÔºåÂ¶ÇÊûúÊúÄÂ§ßÂÄºÂ§ß‰∫é 10ÔºåÈÇ£‰πàÂèñ 10 ÁöÑÂÄçÊï∞„ÄÇÁÑ∂ÂêéÂêåÁîª‚ÄúËúòËõõÁΩë‚Äù‰∏ÄÊ†∑ÔºåÂ∞ÜÂêÑ‰∏™Êï∞ÊçÆÁÇπÁöÑÂçäÂæÑÊ†πÊçÆÁõ∏ÂØπ‰∫éÊúÄÂ§ßÂÄºÊØî‰æãÊç¢ÁÆóÂá∫Êù•ÔºåÁÑ∂ÂêéÁªòÂà∂Âú®ÂõæË°®‰∏ä„ÄÇ\n\n```\n      // draw data\n      var MaxValue = Math.max.apply(null, that.options.data[0].value);\n      that.options.data.forEach(function(val) {\n        var temp = Math.max.apply(null, val.value);\n        if (temp > MaxValue) MaxValue = temp;\n      });\n      if (MaxValue > 10) {\n        MaxValue = Math.ceil(MaxValue / 10) * 10\n      }\n\n      that.options.data.forEach(function(val) {\n        context.beginPath();\n        context.setStrokeStyle(val.color);\n        var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          currentRad = radius * val.value[i] / MaxValue * step / MaxStep;\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.lineTo(center.x, center.y - currentRad);\n        context.stroke();\n        if (that.options.area) {\n          context.setFillStyle(val.color);\n          context.setGlobalAlpha(0.5);\n          context.fill();\n        }\n        context.closePath();\n      });\n      context.draw();\n```\n\n‰ª•‰∏ãÂ∞±ÊòØÊ∑ªÂä†Êï∞ÊçÆÂêéÁöÑÂÆåÊï¥ÊïàÊûúÔºö\n![Êï∞ÊçÆ](https://upload-images.jianshu.io/upload_images/2641798-cb22523fbd815021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\n\n‰∏∫‰∫ÜÊòæÁ§∫ÊïàÊûúÊõ¥‰Ω≥ÔºåÊàë‰ª¨ÂèØ‰ª•ÁªôÁªòÂà∂ÂõæË°®Âä†‰∏äÂä®ÁîªÔºåÂÖ∑‰ΩìÂÆûÁé∞Â¶Ç‰∏ãÔºö\n\n```\n  var angle = Math.PI * 2 / length;\n\n  var step = 1;\n  var MaxStep = that.options.animation ? 50 : 1;\n  var animation = function() {\n    if (step <= MaxStep) {\n      // draw background\n      for (var layer = 5; layer > 0; layer--) {\n        context.beginPath();\n        context.setGlobalAlpha(1);\n        context.setStrokeStyle(\"#D3D3D3\");\n        if (layer % 2 != 0) {\n          context.setFillStyle(\"white\");\n        } else {\n          context.setFillStyle(\"#F5F5F5\");\n        }\n        var currentRad = layer / 5 * radius;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        context.fill();\n        context.closePath();\n        context.stroke();\n      }\n\n      // draw Axis\n      context.beginPath();\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));\n        context.lineTo(center.x, center.y);\n        currentAngle += angle;\n      }\n      context.closePath();\n      context.stroke();\n\n      // draw Index\n      context.beginPath();\n      context.setFillStyle(\"#D3D3D3\");\n      context.setFontSize(14);\n      var currentAngle = -Math.PI / 2;\n      for (var i = 0; i < length; i++) {\n        var posX = center.x + radius * Math.cos(currentAngle);\n        var posY = center.y + radius * Math.sin(currentAngle);\n        if (posX < center.x) context.setTextAlign(\"right\");\n        else context.setTextAlign(\"left\");\n        if (posY > center.y) context.setTextBaseline(\"top\");\n        else context.setTextBaseline(\"bottom\");\n        context.fillText(that.options.xLabel[i], posX, posY);\n        currentAngle += angle;\n      }\n      context.closePath();\n\n      // draw data\n      var MaxValue = Math.max.apply(null, that.options.data[0].value);\n      that.options.data.forEach(function(val) {\n        var temp = Math.max.apply(null, val.value);\n        if (temp > MaxValue) MaxValue = temp;\n      });\n      if (MaxValue > 10) {\n        MaxValue = Math.ceil(MaxValue / 10) * 10\n      }\n\n      that.options.data.forEach(function(val) {\n        context.beginPath();\n        context.setStrokeStyle(val.color);\n        var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.moveTo(center.x, center.y - currentRad);\n        var currentAngle = -Math.PI / 2;\n        for (var i = 0; i < length; i++) {\n          currentRad = radius * val.value[i] / MaxValue * step / MaxStep;\n          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));\n          currentAngle += angle;\n        }\n        currentRad = radius * val.value[0] / MaxValue * step / MaxStep;\n        context.lineTo(center.x, center.y - currentRad);\n        context.stroke();\n        if (that.options.area) {\n          context.setFillStyle(val.color);\n          context.setGlobalAlpha(0.5);\n          context.fill();\n        }\n        context.closePath();\n      });\n      context.draw();\n      step++;\n    } else {\n      clearInterval(aniName);\n    }\n  }\n  var aniName = setInterval(animation, 10);\n```\n\nÊúÄÁªàÊïàÊûúÂ¶Ç‰∏ãÔºö\n![Âä®ÁîªÊïàÊûú](https://upload-images.jianshu.io/upload_images/2641798-d476058258f845d5.gif?imageMogr2/auto-orient/strip)\n\n## ÁªìËØ≠\n\nüòä ‰ª•‰∏äÂ∞±ÊòØÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæÁöÑÊñπÊ≥ï„ÄÇÂ¶ÇÊúâÂÖ¥Ë∂£‰∫ÜËß£Êõ¥Â§öÔºåÂèØ‰ª•Êü•ÁúãÂÆåÊï¥‰ª£Á†ÅÔºö[https://github.com/chmini-app/CHCharts-wechat](https://github.com/chmini-app/CHCharts-wechat)„ÄÇ\n","slug":"ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæ","published":1,"updated":"2019-01-08T05:32:48.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpj3001zhqoxlrujnuvf","content":"<h2 id=\"ÂâçË®Ä\"><a class=\"header-anchor\" href=\"#ÂâçË®Ä\">¬∂</a>ÂâçË®Ä</h2>\n<p>Èõ∑ËææÂõæÔºàRadar ChartÔºâÔºåÂèàÂèØÁß∞‰∏∫Êà¥Â∏ÉÊãâÂõæ„ÄÅËúòËõõÁΩëÂõæÔºàSpider ChartÔºâÔºåÊòØË¥¢Âä°ÂàÜÊûêÊä•Ë°®ÁöÑ‰∏ÄÁßç„ÄÇ‰ΩøÁî®ËÄÖËÉΩ‰∏ÄÁõÆ‰∫ÜÁÑ∂ÁöÑ‰∫ÜËß£ÂêÑÈ°πÊåáÊ†áÁöÑÂèòÂä®ÊÉÖÂΩ¢ÂèäÂÖ∂Â•ΩÂùèË∂ãÂêë„ÄÇ<br>\nÊú¨Êñá‰ªãÁªçÂ¶Ç‰ΩïÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÂÆûÁé∞Èõ∑ËææÂõæÁªòÂà∂„ÄÇ</p>\n<a id=\"more\"></a>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Èõ∑ËææÂõæ\"></p>\n<h2 id=\"ÁªòÂà∂ËÉåÊôØ\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ËÉåÊôØ\">¬∂</a>ÁªòÂà∂ËÉåÊôØ</h2>\n<p>È¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÁªòÂà∂Âá∫Èõ∑ËææÂõæÂêéÈù¢ÁöÑ‚ÄúËúòËõõÁΩë‚Äù„ÄÇÂÖ∑‰ΩìÂéüÁêÜÂ∞±ÊòØ‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂ∞ÜÂ§öËæπÂΩ¢ÁîªÂá∫Êù•ÔºåÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÊØè‰∏Ä‰∏™ÁÇπÁöÑ‰ΩçÁΩÆÂíåÂçäÂæÑÈïøÂ∫¶„ÄÇ</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var angle = Math.PI * 2 / length;</span><br><span class=\"line\">for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.setGlobalAlpha(1);</span><br><span class=\"line\">        context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">        if (layer % 2 != 0) &#123;</span><br><span class=\"line\">          context.setFillStyle(&quot;white&quot;);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var currentRad = layer / 5 * radius;</span><br><span class=\"line\">        context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">        var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">        for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">          currentAngle += angle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">        context.closePath();</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<p>Â¶Ç‰ª£Á†ÅÊâÄÁ§∫Ôºå<code>angle</code>ÊòØÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÁöÑÔºåËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºå‰∏ÄÂÖ±Áîª‰∫îÂ±ÇÔºåÂπ∂‰∏î‰∫§ÊõøÊ∂ÇÊäπÈ¢úËâ≤„ÄÇ‰∏ãÂõæÊòØ<code>length=6</code>ÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-482cb08a73db4b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ËúòËõõÁΩë\"></p>\n<h2 id=\"ÁªòÂà∂ËΩ¥\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ËΩ¥\">¬∂</a>ÁªòÂà∂ËΩ¥</h2>\n<p>Êé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂêÑ‰∏™È°∂ÁÇπ‰∏éÂúÜÂøÉËøûÊé•Ëµ∑Êù•„ÄÇÊúâ‰∫Ü‚ÄúËúòËõõÁΩë‚ÄùÁöÑÁªèÈ™åÔºåÁîªËΩ¥Â∞±ÁÆÄÂçïÂ§ö‰∫ÜÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπ‰ΩçÁΩÆÁÑ∂Âêé<code>lineTo</code>ÂúÜÂøÉÂ∞±Ë°å‰∫Ü„ÄÇ</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw Axis</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">  context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class=\"line\">  context.lineTo(center.x, center.y);</span><br><span class=\"line\">  currentAngle += angle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">context.closePath();</span><br><span class=\"line\">context.stroke();</span><br></pre></td></tr></table></figure>\n<p>‰ª•‰∏ãÊòØÂä†‰∏äËΩ¥Á∫øÂêéÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-fd3a8dd75cc634c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êï∞ËΩ¥\"></p>\n<h2 id=\"ÁªòÂà∂ÊåáÊ†á\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ÊåáÊ†á\">¬∂</a>ÁªòÂà∂ÊåáÊ†á</h2>\n<p>Êé•‰∏ãÊù•ÊòØÂ∞ÜÂêÑ‰∏™Áª¥Â∫¶ÊåáÊ†áÂêçÂ≠óÊ∑ªÂä†Âà∞ÂõæË°®‰∏ä„ÄÇÂêåÊï∞ËΩ¥‰∏ÄÊ†∑ÔºåÈ¶ñÂÖàÈúÄË¶ÅÁ°ÆÂÆöÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÊ†πÊçÆ‰ΩçÁΩÆË∞ÉÊï¥ÊñáÂ≠óÊòæÁ§∫ÁöÑÂü∫ÂáÜÔºåÂ∞ÜÊñáÂ≠óÂÜô‰∏äÂéª„ÄÇ</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw Index</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">context.setFontSize(14);</span><br><span class=\"line\">var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">  var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class=\"line\">  var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class=\"line\">  if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class=\"line\">  else context.setTextAlign(&quot;left&quot;);</span><br><span class=\"line\">  if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class=\"line\">  else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class=\"line\">  context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class=\"line\">  currentAngle += angle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">context.closePath();</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºåÂØπ‰∫éÊñáÂ≠óË¶ÅÊòæÁ§∫ÁöÑ‰ΩçÁΩÆÂ∞è‰∫é‰∏≠ÂøÉÁÇπ x ÂùêÊ†áÁöÑÈù†Âè≥ÂØπÈΩêÔºåÂê¶ÂàôÈù†Â∑¶ÂØπÈΩêÔºõÂØπ‰∫éÊñáÂ≠ó‰ΩçÁΩÆÂ§ß‰∫é‰∏≠ÂøÉÁÇπ y ÂùêÊ†áÁöÑÂü∫ÂáÜËÆæÁΩÆÂú®‰∏äÊñπÔºåÂê¶ÂàôÂú®‰∏ãÊñπ„ÄÇ‰ª•‰∏ãÊòØÂä†‰∏äÊåáÊ†áÂêéÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-896f6d32eda04d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ÊåáÊ†á\"></p>\n<h2 id=\"ÁªòÂà∂Êï∞ÊçÆ\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂Êï∞ÊçÆ\">¬∂</a>ÁªòÂà∂Êï∞ÊçÆ</h2>\n<p>ÊúÄÂêéÔºåÊàë‰ª¨Â∞ÜÊï∞ÊçÆÁªòÂà∂Âà∞ÂõæË°®‰∏ä„ÄÇÈ¶ñÂÖàÔºåÊàë‰ª¨Ë¶ÅÁ°ÆÂÆöÊâÄÊúâÊï∞ÊçÆÁöÑÊúÄÂ§ßÂÄºÔºåÂ¶ÇÊûúÊúÄÂ§ßÂÄºÂ§ß‰∫é 10ÔºåÈÇ£‰πàÂèñ 10 ÁöÑÂÄçÊï∞„ÄÇÁÑ∂ÂêéÂêåÁîª‚ÄúËúòËõõÁΩë‚Äù‰∏ÄÊ†∑ÔºåÂ∞ÜÂêÑ‰∏™Êï∞ÊçÆÁÇπÁöÑÂçäÂæÑÊ†πÊçÆÁõ∏ÂØπ‰∫éÊúÄÂ§ßÂÄºÊØî‰æãÊç¢ÁÆóÂá∫Êù•ÔºåÁÑ∂ÂêéÁªòÂà∂Âú®ÂõæË°®‰∏ä„ÄÇ</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw data</span><br><span class=\"line\">var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class=\"line\">that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">  var temp = Math.max.apply(null, val.value);</span><br><span class=\"line\">  if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">if (MaxValue &gt; 10) &#123;</span><br><span class=\"line\">  MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">  context.beginPath();</span><br><span class=\"line\">  context.setStrokeStyle(val.color);</span><br><span class=\"line\">  var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">  context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">  var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">  for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">    currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class=\"line\">    context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">    currentAngle += angle;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">  context.lineTo(center.x, center.y - currentRad);</span><br><span class=\"line\">  context.stroke();</span><br><span class=\"line\">  if (that.options.area) &#123;</span><br><span class=\"line\">    context.setFillStyle(val.color);</span><br><span class=\"line\">    context.setGlobalAlpha(0.5);</span><br><span class=\"line\">    context.fill();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  context.closePath();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">context.draw();</span><br></pre></td></tr></table></figure>\n<p>‰ª•‰∏ãÂ∞±ÊòØÊ∑ªÂä†Êï∞ÊçÆÂêéÁöÑÂÆåÊï¥ÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-cb22523fbd815021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êï∞ÊçÆ\"></p>\n<h2 id=\"Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\"><a class=\"header-anchor\" href=\"#Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\">¬∂</a>Ê∑ªÂä†ÁªòÂà∂Âä®Áîª</h2>\n<p>‰∏∫‰∫ÜÊòæÁ§∫ÊïàÊûúÊõ¥‰Ω≥ÔºåÊàë‰ª¨ÂèØ‰ª•ÁªôÁªòÂà∂ÂõæË°®Âä†‰∏äÂä®ÁîªÔºåÂÖ∑‰ΩìÂÆûÁé∞Â¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var angle = Math.PI * 2 / length;</span><br><span class=\"line\"></span><br><span class=\"line\">var step = 1;</span><br><span class=\"line\">var MaxStep = that.options.animation ? 50 : 1;</span><br><span class=\"line\">var animation = function() &#123;</span><br><span class=\"line\">  if (step &lt;= MaxStep) &#123;</span><br><span class=\"line\">    // draw background</span><br><span class=\"line\">    for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class=\"line\">      context.beginPath();</span><br><span class=\"line\">      context.setGlobalAlpha(1);</span><br><span class=\"line\">      context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">      if (layer % 2 != 0) &#123;</span><br><span class=\"line\">        context.setFillStyle(&quot;white&quot;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      var currentRad = layer / 5 * radius;</span><br><span class=\"line\">      context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">        currentAngle += angle;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      context.fill();</span><br><span class=\"line\">      context.closePath();</span><br><span class=\"line\">      context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw Axis</span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">      context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class=\"line\">      context.lineTo(center.x, center.y);</span><br><span class=\"line\">      currentAngle += angle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw Index</span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">    context.setFontSize(14);</span><br><span class=\"line\">    var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">      var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class=\"line\">      var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class=\"line\">      if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class=\"line\">      else context.setTextAlign(&quot;left&quot;);</span><br><span class=\"line\">      if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class=\"line\">      else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class=\"line\">      context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class=\"line\">      currentAngle += angle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw data</span><br><span class=\"line\">    var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class=\"line\">    that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">      var temp = Math.max.apply(null, val.value);</span><br><span class=\"line\">      if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    if (MaxValue &gt; 10) &#123;</span><br><span class=\"line\">      MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">      context.beginPath();</span><br><span class=\"line\">      context.setStrokeStyle(val.color);</span><br><span class=\"line\">      var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">      context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class=\"line\">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">        currentAngle += angle;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">      context.lineTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      context.stroke();</span><br><span class=\"line\">      if (that.options.area) &#123;</span><br><span class=\"line\">        context.setFillStyle(val.color);</span><br><span class=\"line\">        context.setGlobalAlpha(0.5);</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      context.closePath();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    context.draw();</span><br><span class=\"line\">    step++;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    clearInterval(aniName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var aniName = setInterval(animation, 10);</span><br></pre></td></tr></table></figure>\n<p>ÊúÄÁªàÊïàÊûúÂ¶Ç‰∏ãÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-d476058258f845d5.gif?imageMogr2/auto-orient/strip\" alt=\"Âä®ÁîªÊïàÊûú\"></p>\n<h2 id=\"ÁªìËØ≠\"><a class=\"header-anchor\" href=\"#ÁªìËØ≠\">¬∂</a>ÁªìËØ≠</h2>\n<p>üòä ‰ª•‰∏äÂ∞±ÊòØÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæÁöÑÊñπÊ≥ï„ÄÇÂ¶ÇÊúâÂÖ¥Ë∂£‰∫ÜËß£Êõ¥Â§öÔºåÂèØ‰ª•Êü•ÁúãÂÆåÊï¥‰ª£Á†ÅÔºö<a href=\"https://github.com/chmini-app/CHCharts-wechat\" target=\"_blank\" rel=\"noopener\">https://github.com/chmini-app/CHCharts-wechat</a>„ÄÇ</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"ÂâçË®Ä\"><a class=\"header-anchor\" href=\"#ÂâçË®Ä\">¬∂</a>ÂâçË®Ä</h2>\n<p>Èõ∑ËææÂõæÔºàRadar ChartÔºâÔºåÂèàÂèØÁß∞‰∏∫Êà¥Â∏ÉÊãâÂõæ„ÄÅËúòËõõÁΩëÂõæÔºàSpider ChartÔºâÔºåÊòØË¥¢Âä°ÂàÜÊûêÊä•Ë°®ÁöÑ‰∏ÄÁßç„ÄÇ‰ΩøÁî®ËÄÖËÉΩ‰∏ÄÁõÆ‰∫ÜÁÑ∂ÁöÑ‰∫ÜËß£ÂêÑÈ°πÊåáÊ†áÁöÑÂèòÂä®ÊÉÖÂΩ¢ÂèäÂÖ∂Â•ΩÂùèË∂ãÂêë„ÄÇ<br>\nÊú¨Êñá‰ªãÁªçÂ¶Ç‰ΩïÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÂÆûÁé∞Èõ∑ËææÂõæÁªòÂà∂„ÄÇ</p>","more":"<p><img src=\"https://upload-images.jianshu.io/upload_images/2641798-4cb2f61add473cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Èõ∑ËææÂõæ\"></p>\n<h2 id=\"ÁªòÂà∂ËÉåÊôØ\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ËÉåÊôØ\">¬∂</a>ÁªòÂà∂ËÉåÊôØ</h2>\n<p>È¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÁªòÂà∂Âá∫Èõ∑ËææÂõæÂêéÈù¢ÁöÑ‚ÄúËúòËõõÁΩë‚Äù„ÄÇÂÖ∑‰ΩìÂéüÁêÜÂ∞±ÊòØ‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂ∞ÜÂ§öËæπÂΩ¢ÁîªÂá∫Êù•ÔºåÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÊØè‰∏Ä‰∏™ÁÇπÁöÑ‰ΩçÁΩÆÂíåÂçäÂæÑÈïøÂ∫¶„ÄÇ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var angle = Math.PI * 2 / length;</span><br><span class=\"line\">for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.setGlobalAlpha(1);</span><br><span class=\"line\">        context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">        if (layer % 2 != 0) &#123;</span><br><span class=\"line\">          context.setFillStyle(&quot;white&quot;);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var currentRad = layer / 5 * radius;</span><br><span class=\"line\">        context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">        var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">        for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">          context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">          currentAngle += angle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">        context.closePath();</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<p>Â¶Ç‰ª£Á†ÅÊâÄÁ§∫Ôºå<code>angle</code>ÊòØÊ†πÊçÆÊï∞ÊçÆÈïøÂ∫¶ÂÜ≥ÂÆöÁöÑÔºåËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºå‰∏ÄÂÖ±Áîª‰∫îÂ±ÇÔºåÂπ∂‰∏î‰∫§ÊõøÊ∂ÇÊäπÈ¢úËâ≤„ÄÇ‰∏ãÂõæÊòØ<code>length=6</code>ÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-482cb08a73db4b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ËúòËõõÁΩë\"></p>\n<h2 id=\"ÁªòÂà∂ËΩ¥\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ËΩ¥\">¬∂</a>ÁªòÂà∂ËΩ¥</h2>\n<p>Êé•‰∏ãÊù•Â∞±ÊòØÂ∞ÜÂêÑ‰∏™È°∂ÁÇπ‰∏éÂúÜÂøÉËøûÊé•Ëµ∑Êù•„ÄÇÊúâ‰∫Ü‚ÄúËúòËõõÁΩë‚ÄùÁöÑÁªèÈ™åÔºåÁîªËΩ¥Â∞±ÁÆÄÂçïÂ§ö‰∫ÜÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπ‰ΩçÁΩÆÁÑ∂Âêé<code>lineTo</code>ÂúÜÂøÉÂ∞±Ë°å‰∫Ü„ÄÇ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw Axis</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">  context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class=\"line\">  context.lineTo(center.x, center.y);</span><br><span class=\"line\">  currentAngle += angle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">context.closePath();</span><br><span class=\"line\">context.stroke();</span><br></pre></td></tr></table></figure>\n<p>‰ª•‰∏ãÊòØÂä†‰∏äËΩ¥Á∫øÂêéÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-fd3a8dd75cc634c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êï∞ËΩ¥\"></p>\n<h2 id=\"ÁªòÂà∂ÊåáÊ†á\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂ÊåáÊ†á\">¬∂</a>ÁªòÂà∂ÊåáÊ†á</h2>\n<p>Êé•‰∏ãÊù•ÊòØÂ∞ÜÂêÑ‰∏™Áª¥Â∫¶ÊåáÊ†áÂêçÂ≠óÊ∑ªÂä†Âà∞ÂõæË°®‰∏ä„ÄÇÂêåÊï∞ËΩ¥‰∏ÄÊ†∑ÔºåÈ¶ñÂÖàÈúÄË¶ÅÁ°ÆÂÆöÊúÄÂ§ñÂ±ÇÈ°∂ÁÇπÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÊ†πÊçÆ‰ΩçÁΩÆË∞ÉÊï¥ÊñáÂ≠óÊòæÁ§∫ÁöÑÂü∫ÂáÜÔºåÂ∞ÜÊñáÂ≠óÂÜô‰∏äÂéª„ÄÇ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw Index</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">context.setFontSize(14);</span><br><span class=\"line\">var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">  var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class=\"line\">  var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class=\"line\">  if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class=\"line\">  else context.setTextAlign(&quot;left&quot;);</span><br><span class=\"line\">  if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class=\"line\">  else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class=\"line\">  context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class=\"line\">  currentAngle += angle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">context.closePath();</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáå‰∏∫‰∫ÜÂ•ΩÁúãÔºåÂØπ‰∫éÊñáÂ≠óË¶ÅÊòæÁ§∫ÁöÑ‰ΩçÁΩÆÂ∞è‰∫é‰∏≠ÂøÉÁÇπ x ÂùêÊ†áÁöÑÈù†Âè≥ÂØπÈΩêÔºåÂê¶ÂàôÈù†Â∑¶ÂØπÈΩêÔºõÂØπ‰∫éÊñáÂ≠ó‰ΩçÁΩÆÂ§ß‰∫é‰∏≠ÂøÉÁÇπ y ÂùêÊ†áÁöÑÂü∫ÂáÜËÆæÁΩÆÂú®‰∏äÊñπÔºåÂê¶ÂàôÂú®‰∏ãÊñπ„ÄÇ‰ª•‰∏ãÊòØÂä†‰∏äÊåáÊ†áÂêéÁöÑÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-896f6d32eda04d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ÊåáÊ†á\"></p>\n<h2 id=\"ÁªòÂà∂Êï∞ÊçÆ\"><a class=\"header-anchor\" href=\"#ÁªòÂà∂Êï∞ÊçÆ\">¬∂</a>ÁªòÂà∂Êï∞ÊçÆ</h2>\n<p>ÊúÄÂêéÔºåÊàë‰ª¨Â∞ÜÊï∞ÊçÆÁªòÂà∂Âà∞ÂõæË°®‰∏ä„ÄÇÈ¶ñÂÖàÔºåÊàë‰ª¨Ë¶ÅÁ°ÆÂÆöÊâÄÊúâÊï∞ÊçÆÁöÑÊúÄÂ§ßÂÄºÔºåÂ¶ÇÊûúÊúÄÂ§ßÂÄºÂ§ß‰∫é 10ÔºåÈÇ£‰πàÂèñ 10 ÁöÑÂÄçÊï∞„ÄÇÁÑ∂ÂêéÂêåÁîª‚ÄúËúòËõõÁΩë‚Äù‰∏ÄÊ†∑ÔºåÂ∞ÜÂêÑ‰∏™Êï∞ÊçÆÁÇπÁöÑÂçäÂæÑÊ†πÊçÆÁõ∏ÂØπ‰∫éÊúÄÂ§ßÂÄºÊØî‰æãÊç¢ÁÆóÂá∫Êù•ÔºåÁÑ∂ÂêéÁªòÂà∂Âú®ÂõæË°®‰∏ä„ÄÇ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// draw data</span><br><span class=\"line\">var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class=\"line\">that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">  var temp = Math.max.apply(null, val.value);</span><br><span class=\"line\">  if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">if (MaxValue &gt; 10) &#123;</span><br><span class=\"line\">  MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">  context.beginPath();</span><br><span class=\"line\">  context.setStrokeStyle(val.color);</span><br><span class=\"line\">  var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">  context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">  var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">  for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">    currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class=\"line\">    context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">    currentAngle += angle;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">  context.lineTo(center.x, center.y - currentRad);</span><br><span class=\"line\">  context.stroke();</span><br><span class=\"line\">  if (that.options.area) &#123;</span><br><span class=\"line\">    context.setFillStyle(val.color);</span><br><span class=\"line\">    context.setGlobalAlpha(0.5);</span><br><span class=\"line\">    context.fill();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  context.closePath();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">context.draw();</span><br></pre></td></tr></table></figure>\n<p>‰ª•‰∏ãÂ∞±ÊòØÊ∑ªÂä†Êï∞ÊçÆÂêéÁöÑÂÆåÊï¥ÊïàÊûúÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-cb22523fbd815021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Êï∞ÊçÆ\"></p>\n<h2 id=\"Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\"><a class=\"header-anchor\" href=\"#Ê∑ªÂä†ÁªòÂà∂Âä®Áîª\">¬∂</a>Ê∑ªÂä†ÁªòÂà∂Âä®Áîª</h2>\n<p>‰∏∫‰∫ÜÊòæÁ§∫ÊïàÊûúÊõ¥‰Ω≥ÔºåÊàë‰ª¨ÂèØ‰ª•ÁªôÁªòÂà∂ÂõæË°®Âä†‰∏äÂä®ÁîªÔºåÂÖ∑‰ΩìÂÆûÁé∞Â¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var angle = Math.PI * 2 / length;</span><br><span class=\"line\"></span><br><span class=\"line\">var step = 1;</span><br><span class=\"line\">var MaxStep = that.options.animation ? 50 : 1;</span><br><span class=\"line\">var animation = function() &#123;</span><br><span class=\"line\">  if (step &lt;= MaxStep) &#123;</span><br><span class=\"line\">    // draw background</span><br><span class=\"line\">    for (var layer = 5; layer &gt; 0; layer--) &#123;</span><br><span class=\"line\">      context.beginPath();</span><br><span class=\"line\">      context.setGlobalAlpha(1);</span><br><span class=\"line\">      context.setStrokeStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">      if (layer % 2 != 0) &#123;</span><br><span class=\"line\">        context.setFillStyle(&quot;white&quot;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        context.setFillStyle(&quot;#F5F5F5&quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      var currentRad = layer / 5 * radius;</span><br><span class=\"line\">      context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">        currentAngle += angle;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      context.fill();</span><br><span class=\"line\">      context.closePath();</span><br><span class=\"line\">      context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw Axis</span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">      context.moveTo(center.x + radius * Math.cos(currentAngle), center.y + radius * Math.sin(currentAngle));</span><br><span class=\"line\">      context.lineTo(center.x, center.y);</span><br><span class=\"line\">      currentAngle += angle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw Index</span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.setFillStyle(&quot;#D3D3D3&quot;);</span><br><span class=\"line\">    context.setFontSize(14);</span><br><span class=\"line\">    var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">    for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">      var posX = center.x + radius * Math.cos(currentAngle);</span><br><span class=\"line\">      var posY = center.y + radius * Math.sin(currentAngle);</span><br><span class=\"line\">      if (posX &lt; center.x) context.setTextAlign(&quot;right&quot;);</span><br><span class=\"line\">      else context.setTextAlign(&quot;left&quot;);</span><br><span class=\"line\">      if (posY &gt; center.y) context.setTextBaseline(&quot;top&quot;);</span><br><span class=\"line\">      else context.setTextBaseline(&quot;bottom&quot;);</span><br><span class=\"line\">      context.fillText(that.options.xLabel[i], posX, posY);</span><br><span class=\"line\">      currentAngle += angle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.closePath();</span><br><span class=\"line\"></span><br><span class=\"line\">    // draw data</span><br><span class=\"line\">    var MaxValue = Math.max.apply(null, that.options.data[0].value);</span><br><span class=\"line\">    that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">      var temp = Math.max.apply(null, val.value);</span><br><span class=\"line\">      if (temp &gt; MaxValue) MaxValue = temp;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    if (MaxValue &gt; 10) &#123;</span><br><span class=\"line\">      MaxValue = Math.ceil(MaxValue / 10) * 10</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    that.options.data.forEach(function(val) &#123;</span><br><span class=\"line\">      context.beginPath();</span><br><span class=\"line\">      context.setStrokeStyle(val.color);</span><br><span class=\"line\">      var currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">      context.moveTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      var currentAngle = -Math.PI / 2;</span><br><span class=\"line\">      for (var i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        currentRad = radius * val.value[i] / MaxValue * step / MaxStep;</span><br><span class=\"line\">        context.lineTo(center.x + currentRad * Math.cos(currentAngle), center.y + currentRad * Math.sin(currentAngle));</span><br><span class=\"line\">        currentAngle += angle;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      currentRad = radius * val.value[0] / MaxValue * step / MaxStep;</span><br><span class=\"line\">      context.lineTo(center.x, center.y - currentRad);</span><br><span class=\"line\">      context.stroke();</span><br><span class=\"line\">      if (that.options.area) &#123;</span><br><span class=\"line\">        context.setFillStyle(val.color);</span><br><span class=\"line\">        context.setGlobalAlpha(0.5);</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      context.closePath();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    context.draw();</span><br><span class=\"line\">    step++;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    clearInterval(aniName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var aniName = setInterval(animation, 10);</span><br></pre></td></tr></table></figure>\n<p>ÊúÄÁªàÊïàÊûúÂ¶Ç‰∏ãÔºö<br>\n<img src=\"https://upload-images.jianshu.io/upload_images/2641798-d476058258f845d5.gif?imageMogr2/auto-orient/strip\" alt=\"Âä®ÁîªÊïàÊûú\"></p>\n<h2 id=\"ÁªìËØ≠\"><a class=\"header-anchor\" href=\"#ÁªìËØ≠\">¬∂</a>ÁªìËØ≠</h2>\n<p>üòä ‰ª•‰∏äÂ∞±ÊòØÂú®ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏≠ÁªòÂà∂Èõ∑ËææÂõæÁöÑÊñπÊ≥ï„ÄÇÂ¶ÇÊúâÂÖ¥Ë∂£‰∫ÜËß£Êõ¥Â§öÔºåÂèØ‰ª•Êü•ÁúãÂÆåÊï¥‰ª£Á†ÅÔºö<a href=\"https://github.com/chmini-app/CHCharts-wechat\" target=\"_blank\" rel=\"noopener\">https://github.com/chmini-app/CHCharts-wechat</a>„ÄÇ</p>"},{"title":"Áî®DFSÊù•ÊéíÂ∫ß‰Ωç","date":"2016-08-02T02:49:54.000Z","thumbnail":"http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","_content":"\nDFSÔºàDepth-First-SearchÔºâÊ∑±Â∫¶‰ºòÂÖàÁÆóÊ≥ïÔºåÊòØÊêúÁ¥¢ÁÆóÊ≥ïÁöÑ‰∏ÄÁßç„ÄÇÊòØ‰∏ÄÁßçÂú®ÂºÄÂèëÁà¨Ëô´Êó©Êúü‰ΩøÁî®ËæÉÂ§öÁöÑÊñπÊ≥ï„ÄÇÂÆÉÁöÑÊÄùÊÉ≥ÊòØ‰ªé‰∏Ä‰∏™È°∂ÁÇπ V0 ÂºÄÂßãÔºåÊ≤øÁùÄ‰∏ÄÊù°Ë∑Ø‰∏ÄÁõ¥Ëµ∞Âà∞Â∫ïÔºåÂ¶ÇÊûúÂèëÁé∞‰∏çËÉΩÂà∞ËææÁõÆÊ†áËß£ÔºåÈÇ£Â∞±ËøîÂõûÂà∞‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºåÁÑ∂Âêé‰ªéÂè¶‰∏ÄÊù°Ë∑ØÂºÄÂßãËµ∞Âà∞Â∫ïÔºåËøôÁßçÂ∞ΩÈáèÂæÄÊ∑±Â§ÑËµ∞ÁöÑÊ¶ÇÂøµÂç≥ÊòØÊ∑±Â∫¶‰ºòÂÖàÁöÑÊ¶ÇÂøµ„ÄÇ\n\nÊ∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÊòØÂõæËÆ∫‰∏≠ÁöÑÁªèÂÖ∏ÁÆóÊ≥ïÔºåÂà©Áî®Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÁÆóÊ≥ïÂèØ‰ª•‰∫ßÁîüÁõÆÊ†áÂõæÁöÑÁõ∏Â∫îÊãìÊâëÊéíÂ∫èË°®ÔºåÂà©Áî®ÊãìÊâëÊéíÂ∫èË°®ÂèØ‰ª•Êñπ‰æøÁöÑËß£ÂÜ≥ÂæàÂ§öÁõ∏ÂÖ≥ÁöÑÂõæËÆ∫ÈóÆÈ¢òÔºåÂ¶ÇÊúÄÂ§ßË∑ØÂæÑÈóÆÈ¢òÁ≠âÁ≠â„ÄÇ\n\n<!-- more -->\n\n![DFS](http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n‰∏ãÈù¢‰ª•‰∏Ä‰∏™ÂÖ∑‰ΩìÈóÆÈ¢òÊù•Áúã DFS ÁöÑÂÆûÁé∞‰∏éÂÆûÁî®„ÄÇÔºàÈóÆÈ¢òÊù•Ê∫ê[GCJ2016-1A]BFFsÔºâ\n\n**Problem**\nYou are a teacher at the brand new Little Coders kindergarten. You have**N**kids in your class, and each one has a different student ID number from 1 through**N**. Every kid in your class has a single best friend forever (BFF), and you know who that BFF is for each kid. BFFs are not necessarily reciprocal -- that is, B being A's BFF does not imply that A is B's BFF.\nYour lesson plan for tomorrow includes an activity in which the participants must sit in a circle. You want to make the activity as successful as possible by building the largest possible circle of kids such that each kid in the circle is sitting directly next to their BFF, either to the left or to the right. Any kids not in the circle will watch the activity without participating.\nWhat is the greatest number of kids that can be in the circle?\n**Input**\nThe first line of the input gives the number of test cases,**T**.**T**test cases follow. Each test case consists of two lines. The first line of a test case contains a single integer**N**, the total number of kids in the class. The second line of a test case contains**N**integers**F1**,**F2**, ...,**FN**, where**Fi**is the student ID number of the BFF of the kid with student ID i.\n**Output**\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the maximum number of kids in the group that can be arranged in a circle such that each kid in the circle is sitting next to his or her BFF.\n**Limits**\n1 ‚â§**T**‚â§ 100.\n1 ‚â§**Fi**‚â§**N**, for all i.\n**Fi**‚â† i, for all i. (No kid is their own BFF.)\n**Small dataset**\n3 ‚â§**N**‚â§ 10.\n**Large dataset**\n3 ‚â§**N**‚â§ 1000.\n**Sample**\n\n> Input\n> 4\n> 4\n> 2 3 4 1\n> 4\n> 3 3 4 1\n> 4\n> 3 3 4 3\n> 10\n> 7 8 10 10 9 2 9 6 3 3\n> Output\n> Case #1: 4\n> Case #2: 3\n> Case #3: 3\n> Case #4: 6\n\nIn sample case #4, the largest possible circle seats the following kids in the following order:7 9 3 10 4 1. (Any reflection or rotation of this circle would also work.) Note that the kid with student ID 1 is next to the kid with student ID 7, as required, because the list represents a circle.\n\nËß£ÈáäÔºö\n‰∏Ä‰∏™ÂπºÂÑøÂõ≠ÔºåÊúâ N ‰∏™Â∞èÊúãÂèãÔºåÁºñÂè∑‰ªé 1 Âà∞ NÔºåÊØè‰∏™Â≠©Â≠êÊúâ‰∏Ä‰∏™Ê∞∏ËøúÊúÄÂ•ΩÁöÑÊúãÂèã„ÄÇËøô‰∏™ BFF ‰∏çÊòØÁõ∏‰∫íÁöÑÔºåA ÊòØ B ÁöÑ BFFÔºå‰∏ç‰ª£Ë°® B ‰πüÊòØ A ÁöÑÁöÑ BFF„ÄÇÊé•‰∏ãÊù•ÊòéÂ§©ÊúâËäÇËØæÈúÄË¶ÅÂ∞èÊúãÂèãÂùêÊàê‰∏Ä‰∏™ÂúàÁé©Ê∏∏ÊàèÔºå‰ΩÜÊòØÊØè‰∏™Â≠©Â≠êÈÉΩÂ∏åÊúõËá™Â∑±ÁöÑÂ∑¶ËæπÊàñËÄÖÂè≥ËæπÂùêÁöÑÊòØËá™Â∑±ÁöÑ BFFÔºåÊ≤°ÂùêËøõÂéªÁöÑÂ∞èÊúãÂèãÂ∞±Âè™ËÉΩËßÇÁúã‰ªñ‰ª¨Áé©ÔºåÈÇ£‰πàËøô‰∏™ÂúàÊúÄÂ§ßËÉΩÂùêÂ§öÂ∞ë‰∏™Â∞èÊúãÂèãÔºü\nËæìÂÖ•Á¨¨‰∏Ä‰∏™Êï∞ T ÊòØÊµãËØïÊï∞ÊçÆÁöÑÁªÑÊï∞ÔºåÁÑ∂ÂêéÊØè‰∏§Ë°å‰∏∫‰∏ÄÁªÑÔºåÁ¨¨‰∏ÄË°å‰∏Ä‰∏™Êï∞Â≠óÊòØ N Â∞èÊúãÂèãÁöÑ‰∏™Êï∞ÔºåÁ¨¨‰∫åË°å N ‰∏™Êï∞Â≠óÊòØÁºñÂè∑ 1 Âà∞ N ÁöÑÂ≠©Â≠êÁöÑÊúÄÂ•ΩÊúãÂèãÁºñÂè∑„ÄÇ\nËæìÂá∫ÊØèË°å‰ª£Ë°®ÊØèÁªÑÊµãËØïÊï∞ÊçÆÁöÑÊúÄÂ§ßÂúàÂùêÂ∞èÊúãÂèãÊï∞Èáè„ÄÇ\n\nÂàÜÊûêÔºö\nÁ¨¨‰∏ÄÊ≠•ÔºåÊàë‰ª¨ÈúÄË¶ÅÊâæÂà∞ÊØè‰∏™Â≠©Â≠êÈÄöËøá BFF Ëøô‰∏™ÂÖ≥Á≥ªÂçïÂêëËÉΩ‰∏ÄÂÖ±ËÉΩÈìæÂà∞Â§öÂ∞ëÂ≠©Â≠êËøõÊù•ÔºåËøôÈáåÂ∞±Ë¶ÅÁî®Âà∞ DFS ÊäÄÊúØÊù•ÂÆûÁé∞„ÄÇÊù•Áúã‰∏Ä‰∏ã‰ª£Á†ÅÔºö\n\n```\nvoid dfs(int *input, bool *flag ,int start, NSMutableArray *array)\n{\n¬† ¬† if (flag[start - 1] == true) {\n¬† ¬† ¬† ¬† return;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† flag[start - 1] = true;\n¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];\n¬† ¬† ¬† ¬† start = input[start - 1];\n¬† ¬† ¬† ¬† dfs(input, flag, start, array);\n¬† ¬† }\n}\n```\n\nËøôÈáå input ÊòØ BFF ÂÖ≥Á≥ªÊï∞ÁªÑÔºåflag ÊòØÊ†áÂøóÊüê‰∏Ä‰∏™Â∞èÂ≠©ÊòØÂê¶ËÆøÈóÆËøáÁöÑÊï∞ÁªÑÔºåstart ‰ª£Ë°®‰ªéÂì™‰∏™Â∞èÂ≠©ÂºÄÂßãÊêúÁ¥¢Ôºåarray ÊòØÊúÄÂêéÊàë‰ª¨Ë¶ÅÁöÑÈìæ„ÄÇ‰ªé start ‰º†ÂÖ•ÁöÑÂ∞èÂ≠©ÁºñÂè∑ÂºÄÂßãÊêúÁ¥¢ÔºåÂ∞Ü start Ëá™Â∑±ÂÜôÂà∞ array ‰∏≠Âπ∂Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆÔºåÁÑ∂Âêé start Êõ¥Êñ∞‰∏∫Ëá™Â∑±ÁöÑ BFFÔºåËø≠‰ª£Ë∞ÉÁî® dfsÔºåÁõ¥Âà∞Ëµ∞Âà∞Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆËäÇÁÇπÂÅúÊ≠¢ÊêúÁ¥¢„ÄÇÁÑ∂ÂêéÂ∞ÜÂàÜÂà´‰ªé 1 Âà∞ N ÁºñÂè∑ÁöÑÂ∞èÂ≠©‰∏∫Ëµ∑ÁÇπÁöÑÂΩ¢ÊàêÁöÑÊúÄÈïøÈìæÁöÑÈÉΩÂ≠òÂÇ®Ëµ∑Êù•„ÄÇËøôÈáåÊàë‰ª¨Â≠òÂú® chainArray ÈáåÈù¢ÔºåÊñπ‰æøÂêéÈù¢‰ΩøÁî®„ÄÇ\n\nÁ¨¨‰∫åÊ≠•ÔºåÊàë‰ª¨Áî®ÂàöÊâç‰øùÂ≠òÁöÑÈìæÊù•ÊãºÊé•ÁéØÔºåËøôÈáåÊàë‰ª¨Áî®‰∏Ä‰∏™Êï∞ÁªÑÊù•ËÆ∞ÂΩï‰ª•ÊØè‰∏™Â≠©Â≠ê‰∏∫Ëµ∑ÁÇπÁöÑÊúÄÂ§ßÁéØÈïøÂ∫¶ circleÔºåÂêåÊó∂Áî®‰∏Ä‰∏™Êï¥Êï∞ maxNum ËÆ∞ÂΩïÊâÄÊúâÁöÑÁéØ‰∏≠ÊúÄÂ§ßÂÄº„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÂºÄÂßãÈÅçÂéÜÂàöÊâçËÆ∞ÂΩïÂú® chainArray ÈáåÈù¢ÁöÑÈìæÔºåËÆ°ÁÆó‰ªñ‰ª¨ËÉΩÊãºÊé•ÊúÄÈïøÁéØÁöÑÂ§ßÂ∞è„ÄÇËÆ°ÁÆó‰∏≠ÂàÜ‰∏âÁßçÊÉÖÂÜµÔºö\n1„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèã‰∏çÊòØÁ¨¨‰∏Ä‰Ωç‰∏éÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå‰ΩÜÊòØ 4 ÁöÑ BFF ÊòØ 2ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØÊó†ÊïàÁöÑÔºå‰πü‰∏çËÉΩÂ§üÊàêÁéØÔºåÈïøÂ∫¶Â∞±ËÆ∞‰∏∫ 0Ôºõ\n2„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÁ¨¨‰∏Ä‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå4 ÁöÑ BFF ÊòØ 1ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØËá™ÊàêÁéØÔºåÈïøÂ∫¶ËÆ∞‰∏∫ÈìæÈïøÂ∫¶ 4„ÄÇ\n3„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå4 ÁöÑ BFF ÊòØ 3ÔºåËøôÁßçÈìæÊó¢Ëá™ÊàêÁéØÔºåÂèàÂèØ‰ª•ÂíåÂÖ∂ÂÆÉ‰ª• 3 ÁªìÂ∞æÁöÑÈìæÊãºÊé•ÊàêÁéØÔºåÂ¶Ç 5->4->3Ôºå‰∏§‰∏™ÈìæÊãºÊé•ÂêéÂ∞±Êàê‰∫Ü 1->2->3<->4<-5„ÄÇÂØπ‰∫éËøôÁßçÊÉÖÂÜµÔºåÊàë‰ª¨Â∞±ÂøÖÈ°ªÂÜçÊ¨°ÈÅçÂéÜÊâÄÊúâÈìæÔºåÊâæÂá∫ÂíåËØ•ÈìæÊãºÊé•ÂêéÁöÑÊúÄÈïøÈìæÔºåËÆ∞ÂΩï‰∏∫‰∏§ÈìæÈïøÂ∫¶ÂíåÂáè 2ÔºåÂπ∂‰øùÂ≠òËøõ circle ‰∏≠„ÄÇ\nÊúÄÂêéÔºåÊØèÊ¨°Êõ¥Êñ∞ËøáÂêéÁéØÈïøÂ∫¶ËøáÂêéÔºåÈúÄË¶ÅÊõ¥Êñ∞ maxNum ÁöÑÂÄº„ÄÇ\nÂÆûÁé∞‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n¬† ¬† for (int j = 0; j < N; j++) {\n¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];\n¬† ¬† ¬† ¬† int length = (int)array.count;\n¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];\n¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];\n¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] && nextValue != [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† length = 0;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] < length) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);\n¬† ¬† }\n```\n\nËá≥Ê≠§ÔºåÊàë‰ª¨Âü∫Êú¨ÊâæÂà∞‰∫Ü‰ª•ÊâÄÊúâÂ≠©Â≠ê‰∏∫Ëµ∑ÁÇπËÉΩÂΩ¢ÊàêÁöÑÂçï‰∏ÄÁéØÔºå‰ΩÜÊòØÂπ∂‰∏çÊòØËÉΩÂΩ¢ÊàêÁöÑÊúÄÂ§ßÁéØ„ÄÇ\n\nÁ¨¨‰∏âÊ≠•ÔºåÊâæÂá∫ÊúÄÂ§ßÁöÑÁéØÂ§ßÂ∞èÔºå‰∏äÈù¢ÁöÑ maxNum Â∑≤ÁªèËÆ∞ÂΩï‰∫ÜÂçïÁéØÊâÄËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄºÔºå‰ΩÜÊòØÂØπ‰∫éÂ¶Ç 1->2->3<->4<-5 ËøôÁßçÂõûÁéØÔºåÂÖ∂ÂÆûËøòÊòØÂèØ‰ª•ÂíåÂÖ∂ÂÆÉÂõûÁéØËøõË°åÊãºÊé•ÔºåÂ¶ÇÂíå 6->7<->8<-9 ÊãºÊé•ÔºåÊúÄÂêéÂæóÂà∞Êõ¥Â§ßÁöÑÁéØ 1->2->3<->4<-5\\6->7<->8<-9„ÄÇÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÊääÂàöÊâç circle ‰∏≠ËÆ∞ÂΩïÁöÑÂõûÁéØÈïøÂ∫¶ÈÉΩÂä†Ëµ∑Êù•Èô§‰ª• 2ÔºåÂÜçÊù•Êõ¥Êñ∞ maxNum ÂæóÂà∞ÊúÄÁªàÁöÑÁªìÊûúÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n¬† ¬† int tot = 0;\n¬† ¬† for (int k = 0; k < N; k ++) {\n¬† ¬† ¬† ¬† tot += circle[k];\n¬† ¬† }\n¬† ¬† maxNum = MAX(maxNum, tot / 2);\n¬† ¬† return maxNum;\n```\n\nËá≥Ê≠§ÔºåÊàë‰ª¨Â∞±ÂÆåÁæéÁöÑÂà©Áî® DFS ÂÆåÊàê‰∫ÜÂØπÂ∞èÊúãÂèãÊéíÂ∫ß‰ΩçÁöÑ‰ªªÂä°„ÄÇ\nÁúã‰∏Ä‰∏ãËæìÂá∫Âà§ÂÆöÁªìÊûúÔºö\n\n> Small input\n> 16 pointsSolve C-small\n> Judge's response for last submission: Correct.\n> Large input\n> 29 pointsSolve C-large\n> Judge's response for last submission: Correct.\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//¬† main.m\n//¬† BFFs\n//\n//¬† Created by Jiao Liu on 4/16/16.\n//¬† Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#import <Foundation/Foundation.h>\n\nvoid dfs(int *input, bool *flag ,int start, NSMutableArray *array)\n{\n¬† ¬† if (flag[start - 1] == true) {\n¬† ¬† ¬† ¬† return;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† flag[start - 1] = true;\n¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];\n¬† ¬† ¬† ¬† start = input[start - 1];\n¬† ¬† ¬† ¬† dfs(input, flag, start, array);\n¬† ¬† }\n}\n\nlong maxCircle(int *input, int N)\n{\n¬† ¬† long maxNum = 0;\n¬†¬† ¬†\n¬† ¬† NSMutableArray *chainArray = [NSMutableArray array];\n¬† ¬† int circle[N];\n¬† ¬† memset(circle, 0, sizeof(circle));\n¬† ¬† for (int i = 0; i < N; i++) {\n¬† ¬† ¬† ¬† bool flag[N];\n¬† ¬† ¬† ¬† memset(flag, false, sizeof(flag));\n¬† ¬† ¬† ¬† NSMutableArray *array = [NSMutableArray array];\n¬† ¬† ¬† ¬† dfs(input, flag, i + 1, array);\n¬† ¬† ¬† ¬† [chainArray addObject:array];\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† for (int j = 0; j < N; j++) {\n¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];\n¬† ¬† ¬† ¬† int length = (int)array.count;\n¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];\n¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];\n¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] && nextValue != [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† length = 0;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] < length) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† int tot = 0;\n¬† ¬† for (int k = 0; k < N; k ++) {\n¬† ¬† ¬† ¬† tot += circle[k];\n¬† ¬† }\n¬† ¬† maxNum = MAX(maxNum, tot / 2);\n¬† ¬† return maxNum;\n}\n\nint main(int argc, const char * argv[]) {\n¬† ¬† @autoreleasepool {\n¬† ¬† ¬† ¬† // insert code here...\n¬† ¬† ¬† ¬† freopen(\"/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.in\", \"r\", stdin);\n//¬† ¬† ¬† ¬† freopen(\"/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.out\", \"w\", stdout);\n¬† ¬† ¬† ¬† int T;\n¬† ¬† ¬† ¬† scanf(\"%d\",&T);\n¬† ¬† ¬† ¬† for (int i = 1; i<=T; i++) {\n¬† ¬† ¬† ¬† ¬† ¬† int N;\n¬† ¬† ¬† ¬† ¬† ¬† scanf(\"%d\",&N);\n¬† ¬† ¬† ¬† ¬† ¬† int Bffs[N];\n¬† ¬† ¬† ¬† ¬† ¬† for (int j = 0; j<N; j++) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int bestFriend;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† scanf(\"%d\",&bestFriend);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† Bffs[j]=bestFriend;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† printf(\"Case #%d: %ld\\n\",i,maxCircle(Bffs,N));\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† return 0;\n}\n```\n","source":"_posts/Áî®DFSÊù•ÊéíÂ∫ß‰Ωç.md","raw":"---\ntitle: Áî®DFSÊù•ÊéíÂ∫ß‰Ωç\ndate: 2016-08-02 10:49:54\ntags: [ÁÆóÊ≥ï, GCJ]\ncategories:\n  - Â∑•‰Ωú\n  - ACM\nthumbnail: http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n---\n\nDFSÔºàDepth-First-SearchÔºâÊ∑±Â∫¶‰ºòÂÖàÁÆóÊ≥ïÔºåÊòØÊêúÁ¥¢ÁÆóÊ≥ïÁöÑ‰∏ÄÁßç„ÄÇÊòØ‰∏ÄÁßçÂú®ÂºÄÂèëÁà¨Ëô´Êó©Êúü‰ΩøÁî®ËæÉÂ§öÁöÑÊñπÊ≥ï„ÄÇÂÆÉÁöÑÊÄùÊÉ≥ÊòØ‰ªé‰∏Ä‰∏™È°∂ÁÇπ V0 ÂºÄÂßãÔºåÊ≤øÁùÄ‰∏ÄÊù°Ë∑Ø‰∏ÄÁõ¥Ëµ∞Âà∞Â∫ïÔºåÂ¶ÇÊûúÂèëÁé∞‰∏çËÉΩÂà∞ËææÁõÆÊ†áËß£ÔºåÈÇ£Â∞±ËøîÂõûÂà∞‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºåÁÑ∂Âêé‰ªéÂè¶‰∏ÄÊù°Ë∑ØÂºÄÂßãËµ∞Âà∞Â∫ïÔºåËøôÁßçÂ∞ΩÈáèÂæÄÊ∑±Â§ÑËµ∞ÁöÑÊ¶ÇÂøµÂç≥ÊòØÊ∑±Â∫¶‰ºòÂÖàÁöÑÊ¶ÇÂøµ„ÄÇ\n\nÊ∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÊòØÂõæËÆ∫‰∏≠ÁöÑÁªèÂÖ∏ÁÆóÊ≥ïÔºåÂà©Áî®Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÁÆóÊ≥ïÂèØ‰ª•‰∫ßÁîüÁõÆÊ†áÂõæÁöÑÁõ∏Â∫îÊãìÊâëÊéíÂ∫èË°®ÔºåÂà©Áî®ÊãìÊâëÊéíÂ∫èË°®ÂèØ‰ª•Êñπ‰æøÁöÑËß£ÂÜ≥ÂæàÂ§öÁõ∏ÂÖ≥ÁöÑÂõæËÆ∫ÈóÆÈ¢òÔºåÂ¶ÇÊúÄÂ§ßË∑ØÂæÑÈóÆÈ¢òÁ≠âÁ≠â„ÄÇ\n\n<!-- more -->\n\n![DFS](http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n‰∏ãÈù¢‰ª•‰∏Ä‰∏™ÂÖ∑‰ΩìÈóÆÈ¢òÊù•Áúã DFS ÁöÑÂÆûÁé∞‰∏éÂÆûÁî®„ÄÇÔºàÈóÆÈ¢òÊù•Ê∫ê[GCJ2016-1A]BFFsÔºâ\n\n**Problem**\nYou are a teacher at the brand new Little Coders kindergarten. You have**N**kids in your class, and each one has a different student ID number from 1 through**N**. Every kid in your class has a single best friend forever (BFF), and you know who that BFF is for each kid. BFFs are not necessarily reciprocal -- that is, B being A's BFF does not imply that A is B's BFF.\nYour lesson plan for tomorrow includes an activity in which the participants must sit in a circle. You want to make the activity as successful as possible by building the largest possible circle of kids such that each kid in the circle is sitting directly next to their BFF, either to the left or to the right. Any kids not in the circle will watch the activity without participating.\nWhat is the greatest number of kids that can be in the circle?\n**Input**\nThe first line of the input gives the number of test cases,**T**.**T**test cases follow. Each test case consists of two lines. The first line of a test case contains a single integer**N**, the total number of kids in the class. The second line of a test case contains**N**integers**F1**,**F2**, ...,**FN**, where**Fi**is the student ID number of the BFF of the kid with student ID i.\n**Output**\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the maximum number of kids in the group that can be arranged in a circle such that each kid in the circle is sitting next to his or her BFF.\n**Limits**\n1 ‚â§**T**‚â§ 100.\n1 ‚â§**Fi**‚â§**N**, for all i.\n**Fi**‚â† i, for all i. (No kid is their own BFF.)\n**Small dataset**\n3 ‚â§**N**‚â§ 10.\n**Large dataset**\n3 ‚â§**N**‚â§ 1000.\n**Sample**\n\n> Input\n> 4\n> 4\n> 2 3 4 1\n> 4\n> 3 3 4 1\n> 4\n> 3 3 4 3\n> 10\n> 7 8 10 10 9 2 9 6 3 3\n> Output\n> Case #1: 4\n> Case #2: 3\n> Case #3: 3\n> Case #4: 6\n\nIn sample case #4, the largest possible circle seats the following kids in the following order:7 9 3 10 4 1. (Any reflection or rotation of this circle would also work.) Note that the kid with student ID 1 is next to the kid with student ID 7, as required, because the list represents a circle.\n\nËß£ÈáäÔºö\n‰∏Ä‰∏™ÂπºÂÑøÂõ≠ÔºåÊúâ N ‰∏™Â∞èÊúãÂèãÔºåÁºñÂè∑‰ªé 1 Âà∞ NÔºåÊØè‰∏™Â≠©Â≠êÊúâ‰∏Ä‰∏™Ê∞∏ËøúÊúÄÂ•ΩÁöÑÊúãÂèã„ÄÇËøô‰∏™ BFF ‰∏çÊòØÁõ∏‰∫íÁöÑÔºåA ÊòØ B ÁöÑ BFFÔºå‰∏ç‰ª£Ë°® B ‰πüÊòØ A ÁöÑÁöÑ BFF„ÄÇÊé•‰∏ãÊù•ÊòéÂ§©ÊúâËäÇËØæÈúÄË¶ÅÂ∞èÊúãÂèãÂùêÊàê‰∏Ä‰∏™ÂúàÁé©Ê∏∏ÊàèÔºå‰ΩÜÊòØÊØè‰∏™Â≠©Â≠êÈÉΩÂ∏åÊúõËá™Â∑±ÁöÑÂ∑¶ËæπÊàñËÄÖÂè≥ËæπÂùêÁöÑÊòØËá™Â∑±ÁöÑ BFFÔºåÊ≤°ÂùêËøõÂéªÁöÑÂ∞èÊúãÂèãÂ∞±Âè™ËÉΩËßÇÁúã‰ªñ‰ª¨Áé©ÔºåÈÇ£‰πàËøô‰∏™ÂúàÊúÄÂ§ßËÉΩÂùêÂ§öÂ∞ë‰∏™Â∞èÊúãÂèãÔºü\nËæìÂÖ•Á¨¨‰∏Ä‰∏™Êï∞ T ÊòØÊµãËØïÊï∞ÊçÆÁöÑÁªÑÊï∞ÔºåÁÑ∂ÂêéÊØè‰∏§Ë°å‰∏∫‰∏ÄÁªÑÔºåÁ¨¨‰∏ÄË°å‰∏Ä‰∏™Êï∞Â≠óÊòØ N Â∞èÊúãÂèãÁöÑ‰∏™Êï∞ÔºåÁ¨¨‰∫åË°å N ‰∏™Êï∞Â≠óÊòØÁºñÂè∑ 1 Âà∞ N ÁöÑÂ≠©Â≠êÁöÑÊúÄÂ•ΩÊúãÂèãÁºñÂè∑„ÄÇ\nËæìÂá∫ÊØèË°å‰ª£Ë°®ÊØèÁªÑÊµãËØïÊï∞ÊçÆÁöÑÊúÄÂ§ßÂúàÂùêÂ∞èÊúãÂèãÊï∞Èáè„ÄÇ\n\nÂàÜÊûêÔºö\nÁ¨¨‰∏ÄÊ≠•ÔºåÊàë‰ª¨ÈúÄË¶ÅÊâæÂà∞ÊØè‰∏™Â≠©Â≠êÈÄöËøá BFF Ëøô‰∏™ÂÖ≥Á≥ªÂçïÂêëËÉΩ‰∏ÄÂÖ±ËÉΩÈìæÂà∞Â§öÂ∞ëÂ≠©Â≠êËøõÊù•ÔºåËøôÈáåÂ∞±Ë¶ÅÁî®Âà∞ DFS ÊäÄÊúØÊù•ÂÆûÁé∞„ÄÇÊù•Áúã‰∏Ä‰∏ã‰ª£Á†ÅÔºö\n\n```\nvoid dfs(int *input, bool *flag ,int start, NSMutableArray *array)\n{\n¬† ¬† if (flag[start - 1] == true) {\n¬† ¬† ¬† ¬† return;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† flag[start - 1] = true;\n¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];\n¬† ¬† ¬† ¬† start = input[start - 1];\n¬† ¬† ¬† ¬† dfs(input, flag, start, array);\n¬† ¬† }\n}\n```\n\nËøôÈáå input ÊòØ BFF ÂÖ≥Á≥ªÊï∞ÁªÑÔºåflag ÊòØÊ†áÂøóÊüê‰∏Ä‰∏™Â∞èÂ≠©ÊòØÂê¶ËÆøÈóÆËøáÁöÑÊï∞ÁªÑÔºåstart ‰ª£Ë°®‰ªéÂì™‰∏™Â∞èÂ≠©ÂºÄÂßãÊêúÁ¥¢Ôºåarray ÊòØÊúÄÂêéÊàë‰ª¨Ë¶ÅÁöÑÈìæ„ÄÇ‰ªé start ‰º†ÂÖ•ÁöÑÂ∞èÂ≠©ÁºñÂè∑ÂºÄÂßãÊêúÁ¥¢ÔºåÂ∞Ü start Ëá™Â∑±ÂÜôÂà∞ array ‰∏≠Âπ∂Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆÔºåÁÑ∂Âêé start Êõ¥Êñ∞‰∏∫Ëá™Â∑±ÁöÑ BFFÔºåËø≠‰ª£Ë∞ÉÁî® dfsÔºåÁõ¥Âà∞Ëµ∞Âà∞Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆËäÇÁÇπÂÅúÊ≠¢ÊêúÁ¥¢„ÄÇÁÑ∂ÂêéÂ∞ÜÂàÜÂà´‰ªé 1 Âà∞ N ÁºñÂè∑ÁöÑÂ∞èÂ≠©‰∏∫Ëµ∑ÁÇπÁöÑÂΩ¢ÊàêÁöÑÊúÄÈïøÈìæÁöÑÈÉΩÂ≠òÂÇ®Ëµ∑Êù•„ÄÇËøôÈáåÊàë‰ª¨Â≠òÂú® chainArray ÈáåÈù¢ÔºåÊñπ‰æøÂêéÈù¢‰ΩøÁî®„ÄÇ\n\nÁ¨¨‰∫åÊ≠•ÔºåÊàë‰ª¨Áî®ÂàöÊâç‰øùÂ≠òÁöÑÈìæÊù•ÊãºÊé•ÁéØÔºåËøôÈáåÊàë‰ª¨Áî®‰∏Ä‰∏™Êï∞ÁªÑÊù•ËÆ∞ÂΩï‰ª•ÊØè‰∏™Â≠©Â≠ê‰∏∫Ëµ∑ÁÇπÁöÑÊúÄÂ§ßÁéØÈïøÂ∫¶ circleÔºåÂêåÊó∂Áî®‰∏Ä‰∏™Êï¥Êï∞ maxNum ËÆ∞ÂΩïÊâÄÊúâÁöÑÁéØ‰∏≠ÊúÄÂ§ßÂÄº„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÂºÄÂßãÈÅçÂéÜÂàöÊâçËÆ∞ÂΩïÂú® chainArray ÈáåÈù¢ÁöÑÈìæÔºåËÆ°ÁÆó‰ªñ‰ª¨ËÉΩÊãºÊé•ÊúÄÈïøÁéØÁöÑÂ§ßÂ∞è„ÄÇËÆ°ÁÆó‰∏≠ÂàÜ‰∏âÁßçÊÉÖÂÜµÔºö\n1„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèã‰∏çÊòØÁ¨¨‰∏Ä‰Ωç‰∏éÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå‰ΩÜÊòØ 4 ÁöÑ BFF ÊòØ 2ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØÊó†ÊïàÁöÑÔºå‰πü‰∏çËÉΩÂ§üÊàêÁéØÔºåÈïøÂ∫¶Â∞±ËÆ∞‰∏∫ 0Ôºõ\n2„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÁ¨¨‰∏Ä‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå4 ÁöÑ BFF ÊòØ 1ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØËá™ÊàêÁéØÔºåÈïøÂ∫¶ËÆ∞‰∏∫ÈìæÈïøÂ∫¶ 4„ÄÇ\n3„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1->2->3->4Ôºå4 ÁöÑ BFF ÊòØ 3ÔºåËøôÁßçÈìæÊó¢Ëá™ÊàêÁéØÔºåÂèàÂèØ‰ª•ÂíåÂÖ∂ÂÆÉ‰ª• 3 ÁªìÂ∞æÁöÑÈìæÊãºÊé•ÊàêÁéØÔºåÂ¶Ç 5->4->3Ôºå‰∏§‰∏™ÈìæÊãºÊé•ÂêéÂ∞±Êàê‰∫Ü 1->2->3<->4<-5„ÄÇÂØπ‰∫éËøôÁßçÊÉÖÂÜµÔºåÊàë‰ª¨Â∞±ÂøÖÈ°ªÂÜçÊ¨°ÈÅçÂéÜÊâÄÊúâÈìæÔºåÊâæÂá∫ÂíåËØ•ÈìæÊãºÊé•ÂêéÁöÑÊúÄÈïøÈìæÔºåËÆ∞ÂΩï‰∏∫‰∏§ÈìæÈïøÂ∫¶ÂíåÂáè 2ÔºåÂπ∂‰øùÂ≠òËøõ circle ‰∏≠„ÄÇ\nÊúÄÂêéÔºåÊØèÊ¨°Êõ¥Êñ∞ËøáÂêéÁéØÈïøÂ∫¶ËøáÂêéÔºåÈúÄË¶ÅÊõ¥Êñ∞ maxNum ÁöÑÂÄº„ÄÇ\nÂÆûÁé∞‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n¬† ¬† for (int j = 0; j < N; j++) {\n¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];\n¬† ¬† ¬† ¬† int length = (int)array.count;\n¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];\n¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];\n¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] && nextValue != [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† length = 0;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] < length) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);\n¬† ¬† }\n```\n\nËá≥Ê≠§ÔºåÊàë‰ª¨Âü∫Êú¨ÊâæÂà∞‰∫Ü‰ª•ÊâÄÊúâÂ≠©Â≠ê‰∏∫Ëµ∑ÁÇπËÉΩÂΩ¢ÊàêÁöÑÂçï‰∏ÄÁéØÔºå‰ΩÜÊòØÂπ∂‰∏çÊòØËÉΩÂΩ¢ÊàêÁöÑÊúÄÂ§ßÁéØ„ÄÇ\n\nÁ¨¨‰∏âÊ≠•ÔºåÊâæÂá∫ÊúÄÂ§ßÁöÑÁéØÂ§ßÂ∞èÔºå‰∏äÈù¢ÁöÑ maxNum Â∑≤ÁªèËÆ∞ÂΩï‰∫ÜÂçïÁéØÊâÄËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄºÔºå‰ΩÜÊòØÂØπ‰∫éÂ¶Ç 1->2->3<->4<-5 ËøôÁßçÂõûÁéØÔºåÂÖ∂ÂÆûËøòÊòØÂèØ‰ª•ÂíåÂÖ∂ÂÆÉÂõûÁéØËøõË°åÊãºÊé•ÔºåÂ¶ÇÂíå 6->7<->8<-9 ÊãºÊé•ÔºåÊúÄÂêéÂæóÂà∞Êõ¥Â§ßÁöÑÁéØ 1->2->3<->4<-5\\6->7<->8<-9„ÄÇÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÊääÂàöÊâç circle ‰∏≠ËÆ∞ÂΩïÁöÑÂõûÁéØÈïøÂ∫¶ÈÉΩÂä†Ëµ∑Êù•Èô§‰ª• 2ÔºåÂÜçÊù•Êõ¥Êñ∞ maxNum ÂæóÂà∞ÊúÄÁªàÁöÑÁªìÊûúÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\n\n```\n¬† ¬† int tot = 0;\n¬† ¬† for (int k = 0; k < N; k ++) {\n¬† ¬† ¬† ¬† tot += circle[k];\n¬† ¬† }\n¬† ¬† maxNum = MAX(maxNum, tot / 2);\n¬† ¬† return maxNum;\n```\n\nËá≥Ê≠§ÔºåÊàë‰ª¨Â∞±ÂÆåÁæéÁöÑÂà©Áî® DFS ÂÆåÊàê‰∫ÜÂØπÂ∞èÊúãÂèãÊéíÂ∫ß‰ΩçÁöÑ‰ªªÂä°„ÄÇ\nÁúã‰∏Ä‰∏ãËæìÂá∫Âà§ÂÆöÁªìÊûúÔºö\n\n> Small input\n> 16 pointsSolve C-small\n> Judge's response for last submission: Correct.\n> Large input\n> 29 pointsSolve C-large\n> Judge's response for last submission: Correct.\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//¬† main.m\n//¬† BFFs\n//\n//¬† Created by Jiao Liu on 4/16/16.\n//¬† Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#import <Foundation/Foundation.h>\n\nvoid dfs(int *input, bool *flag ,int start, NSMutableArray *array)\n{\n¬† ¬† if (flag[start - 1] == true) {\n¬† ¬† ¬† ¬† return;\n¬† ¬† }\n¬† ¬† else\n¬† ¬† {\n¬† ¬† ¬† ¬† flag[start - 1] = true;\n¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];\n¬† ¬† ¬† ¬† start = input[start - 1];\n¬† ¬† ¬† ¬† dfs(input, flag, start, array);\n¬† ¬† }\n}\n\nlong maxCircle(int *input, int N)\n{\n¬† ¬† long maxNum = 0;\n¬†¬† ¬†\n¬† ¬† NSMutableArray *chainArray = [NSMutableArray array];\n¬† ¬† int circle[N];\n¬† ¬† memset(circle, 0, sizeof(circle));\n¬† ¬† for (int i = 0; i < N; i++) {\n¬† ¬† ¬† ¬† bool flag[N];\n¬† ¬† ¬† ¬† memset(flag, false, sizeof(flag));\n¬† ¬† ¬† ¬† NSMutableArray *array = [NSMutableArray array];\n¬† ¬† ¬† ¬† dfs(input, flag, i + 1, array);\n¬† ¬† ¬† ¬† [chainArray addObject:array];\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† for (int j = 0; j < N; j++) {\n¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];\n¬† ¬† ¬† ¬† int length = (int)array.count;\n¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];\n¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];\n¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] && nextValue != [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† length = 0;\n¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† else\n¬† ¬† ¬† ¬† {\n¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] < length) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† }\n¬†¬† ¬† ¬† ¬†\n¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);\n¬† ¬† }\n¬†¬† ¬†\n¬† ¬† int tot = 0;\n¬† ¬† for (int k = 0; k < N; k ++) {\n¬† ¬† ¬† ¬† tot += circle[k];\n¬† ¬† }\n¬† ¬† maxNum = MAX(maxNum, tot / 2);\n¬† ¬† return maxNum;\n}\n\nint main(int argc, const char * argv[]) {\n¬† ¬† @autoreleasepool {\n¬† ¬† ¬† ¬† // insert code here...\n¬† ¬† ¬† ¬† freopen(\"/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.in\", \"r\", stdin);\n//¬† ¬† ¬† ¬† freopen(\"/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.out\", \"w\", stdout);\n¬† ¬† ¬† ¬† int T;\n¬† ¬† ¬† ¬† scanf(\"%d\",&T);\n¬† ¬† ¬† ¬† for (int i = 1; i<=T; i++) {\n¬† ¬† ¬† ¬† ¬† ¬† int N;\n¬† ¬† ¬† ¬† ¬† ¬† scanf(\"%d\",&N);\n¬† ¬† ¬† ¬† ¬† ¬† int Bffs[N];\n¬† ¬† ¬† ¬† ¬† ¬† for (int j = 0; j<N; j++) {\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int bestFriend;\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† scanf(\"%d\",&bestFriend);\n¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† Bffs[j]=bestFriend;\n¬† ¬† ¬† ¬† ¬† ¬† }\n¬† ¬† ¬† ¬† ¬† ¬† printf(\"Case #%d: %ld\\n\",i,maxCircle(Bffs,N));\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n¬† ¬† return 0;\n}\n```\n","slug":"Áî®DFSÊù•ÊéíÂ∫ß‰Ωç","published":1,"updated":"2019-01-08T05:32:46.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpj50020hqox8tlqitdz","content":"<p>DFSÔºàDepth-First-SearchÔºâÊ∑±Â∫¶‰ºòÂÖàÁÆóÊ≥ïÔºåÊòØÊêúÁ¥¢ÁÆóÊ≥ïÁöÑ‰∏ÄÁßç„ÄÇÊòØ‰∏ÄÁßçÂú®ÂºÄÂèëÁà¨Ëô´Êó©Êúü‰ΩøÁî®ËæÉÂ§öÁöÑÊñπÊ≥ï„ÄÇÂÆÉÁöÑÊÄùÊÉ≥ÊòØ‰ªé‰∏Ä‰∏™È°∂ÁÇπ V0 ÂºÄÂßãÔºåÊ≤øÁùÄ‰∏ÄÊù°Ë∑Ø‰∏ÄÁõ¥Ëµ∞Âà∞Â∫ïÔºåÂ¶ÇÊûúÂèëÁé∞‰∏çËÉΩÂà∞ËææÁõÆÊ†áËß£ÔºåÈÇ£Â∞±ËøîÂõûÂà∞‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºåÁÑ∂Âêé‰ªéÂè¶‰∏ÄÊù°Ë∑ØÂºÄÂßãËµ∞Âà∞Â∫ïÔºåËøôÁßçÂ∞ΩÈáèÂæÄÊ∑±Â§ÑËµ∞ÁöÑÊ¶ÇÂøµÂç≥ÊòØÊ∑±Â∫¶‰ºòÂÖàÁöÑÊ¶ÇÂøµ„ÄÇ</p>\n<p>Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÊòØÂõæËÆ∫‰∏≠ÁöÑÁªèÂÖ∏ÁÆóÊ≥ïÔºåÂà©Áî®Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÁÆóÊ≥ïÂèØ‰ª•‰∫ßÁîüÁõÆÊ†áÂõæÁöÑÁõ∏Â∫îÊãìÊâëÊéíÂ∫èË°®ÔºåÂà©Áî®ÊãìÊâëÊéíÂ∫èË°®ÂèØ‰ª•Êñπ‰æøÁöÑËß£ÂÜ≥ÂæàÂ§öÁõ∏ÂÖ≥ÁöÑÂõæËÆ∫ÈóÆÈ¢òÔºåÂ¶ÇÊúÄÂ§ßË∑ØÂæÑÈóÆÈ¢òÁ≠âÁ≠â„ÄÇ</p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"DFS\"></p>\n<p>‰∏ãÈù¢‰ª•‰∏Ä‰∏™ÂÖ∑‰ΩìÈóÆÈ¢òÊù•Áúã DFS ÁöÑÂÆûÁé∞‰∏éÂÆûÁî®„ÄÇÔºàÈóÆÈ¢òÊù•Ê∫ê[GCJ2016-1A]BFFsÔºâ</p>\n<p><strong>Problem</strong><br>\nYou are a teacher at the brand new Little Coders kindergarten. You have<strong>N</strong>kids in your class, and each one has a different student ID number from 1 through<strong>N</strong>. Every kid in your class has a single best friend forever (BFF), and you know who that BFF is for each kid. BFFs are not necessarily reciprocal ‚Äì that is, B being A‚Äôs BFF does not imply that A is B‚Äôs BFF.<br>\nYour lesson plan for tomorrow includes an activity in which the participants must sit in a circle. You want to make the activity as successful as possible by building the largest possible circle of kids such that each kid in the circle is sitting directly next to their BFF, either to the left or to the right. Any kids not in the circle will watch the activity without participating.<br>\nWhat is the greatest number of kids that can be in the circle?<br>\n<strong>Input</strong><br>\nThe first line of the input gives the number of test cases,<strong>T</strong>.<strong>T</strong>test cases follow. Each test case consists of two lines. The first line of a test case contains a single integer<strong>N</strong>, the total number of kids in the class. The second line of a test case contains<strong>N</strong>integers<strong>F1</strong>,<strong>F2</strong>, ‚Ä¶,<strong>FN</strong>, where<strong>Fi</strong>is the student ID number of the BFF of the kid with student ID i.<br>\n<strong>Output</strong><br>\nFor each test case, output one line containing ‚ÄúCase #x: y‚Äù, where x is the test case number (starting from 1) and y is the maximum number of kids in the group that can be arranged in a circle such that each kid in the circle is sitting next to his or her BFF.<br>\n<strong>Limits</strong><br>\n1 ‚â§<strong>T</strong>‚â§ 100.<br>\n1 ‚â§<strong>Fi</strong>‚â§<strong>N</strong>, for all i.<br>\n<strong>Fi</strong>‚â† i, for all i. (No kid is their own BFF.)<br>\n<strong>Small dataset</strong><br>\n3 ‚â§<strong>N</strong>‚â§ 10.<br>\n<strong>Large dataset</strong><br>\n3 ‚â§<strong>N</strong>‚â§ 1000.<br>\n<strong>Sample</strong></p>\n<blockquote>\n<p>Input<br>\n4<br>\n4<br>\n2 3 4 1<br>\n4<br>\n3 3 4 1<br>\n4<br>\n3 3 4 3<br>\n10<br>\n7 8 10 10 9 2 9 6 3 3<br>\nOutput<br>\nCase #1: 4<br>\nCase #2: 3<br>\nCase #3: 3<br>\nCase #4: 6</p>\n</blockquote>\n<p>In sample case #4, the largest possible circle seats the following kids in the following order:7 9 3 10 4 1. (Any reflection or rotation of this circle would also work.) Note that the kid with student ID 1 is next to the kid with student ID 7, as required, because the list represents a circle.</p>\n<p>Ëß£ÈáäÔºö<br>\n‰∏Ä‰∏™ÂπºÂÑøÂõ≠ÔºåÊúâ N ‰∏™Â∞èÊúãÂèãÔºåÁºñÂè∑‰ªé 1 Âà∞ NÔºåÊØè‰∏™Â≠©Â≠êÊúâ‰∏Ä‰∏™Ê∞∏ËøúÊúÄÂ•ΩÁöÑÊúãÂèã„ÄÇËøô‰∏™ BFF ‰∏çÊòØÁõ∏‰∫íÁöÑÔºåA ÊòØ B ÁöÑ BFFÔºå‰∏ç‰ª£Ë°® B ‰πüÊòØ A ÁöÑÁöÑ BFF„ÄÇÊé•‰∏ãÊù•ÊòéÂ§©ÊúâËäÇËØæÈúÄË¶ÅÂ∞èÊúãÂèãÂùêÊàê‰∏Ä‰∏™ÂúàÁé©Ê∏∏ÊàèÔºå‰ΩÜÊòØÊØè‰∏™Â≠©Â≠êÈÉΩÂ∏åÊúõËá™Â∑±ÁöÑÂ∑¶ËæπÊàñËÄÖÂè≥ËæπÂùêÁöÑÊòØËá™Â∑±ÁöÑ BFFÔºåÊ≤°ÂùêËøõÂéªÁöÑÂ∞èÊúãÂèãÂ∞±Âè™ËÉΩËßÇÁúã‰ªñ‰ª¨Áé©ÔºåÈÇ£‰πàËøô‰∏™ÂúàÊúÄÂ§ßËÉΩÂùêÂ§öÂ∞ë‰∏™Â∞èÊúãÂèãÔºü<br>\nËæìÂÖ•Á¨¨‰∏Ä‰∏™Êï∞ T ÊòØÊµãËØïÊï∞ÊçÆÁöÑÁªÑÊï∞ÔºåÁÑ∂ÂêéÊØè‰∏§Ë°å‰∏∫‰∏ÄÁªÑÔºåÁ¨¨‰∏ÄË°å‰∏Ä‰∏™Êï∞Â≠óÊòØ N Â∞èÊúãÂèãÁöÑ‰∏™Êï∞ÔºåÁ¨¨‰∫åË°å N ‰∏™Êï∞Â≠óÊòØÁºñÂè∑ 1 Âà∞ N ÁöÑÂ≠©Â≠êÁöÑÊúÄÂ•ΩÊúãÂèãÁºñÂè∑„ÄÇ<br>\nËæìÂá∫ÊØèË°å‰ª£Ë°®ÊØèÁªÑÊµãËØïÊï∞ÊçÆÁöÑÊúÄÂ§ßÂúàÂùêÂ∞èÊúãÂèãÊï∞Èáè„ÄÇ</p>\n<p>ÂàÜÊûêÔºö<br>\nÁ¨¨‰∏ÄÊ≠•ÔºåÊàë‰ª¨ÈúÄË¶ÅÊâæÂà∞ÊØè‰∏™Â≠©Â≠êÈÄöËøá BFF Ëøô‰∏™ÂÖ≥Á≥ªÂçïÂêëËÉΩ‰∏ÄÂÖ±ËÉΩÈìæÂà∞Â§öÂ∞ëÂ≠©Â≠êËøõÊù•ÔºåËøôÈáåÂ∞±Ë¶ÅÁî®Âà∞ DFS ÊäÄÊúØÊù•ÂÆûÁé∞„ÄÇÊù•Áúã‰∏Ä‰∏ã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void dfs(int *input, bool *flag ,int start, NSMutableArray *array)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (flag[start - 1] == true) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† flag[start - 1] = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];</span><br><span class=\"line\">¬† ¬† ¬† ¬† start = input[start - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, start, array);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáå input ÊòØ BFF ÂÖ≥Á≥ªÊï∞ÁªÑÔºåflag ÊòØÊ†áÂøóÊüê‰∏Ä‰∏™Â∞èÂ≠©ÊòØÂê¶ËÆøÈóÆËøáÁöÑÊï∞ÁªÑÔºåstart ‰ª£Ë°®‰ªéÂì™‰∏™Â∞èÂ≠©ÂºÄÂßãÊêúÁ¥¢Ôºåarray ÊòØÊúÄÂêéÊàë‰ª¨Ë¶ÅÁöÑÈìæ„ÄÇ‰ªé start ‰º†ÂÖ•ÁöÑÂ∞èÂ≠©ÁºñÂè∑ÂºÄÂßãÊêúÁ¥¢ÔºåÂ∞Ü start Ëá™Â∑±ÂÜôÂà∞ array ‰∏≠Âπ∂Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆÔºåÁÑ∂Âêé start Êõ¥Êñ∞‰∏∫Ëá™Â∑±ÁöÑ BFFÔºåËø≠‰ª£Ë∞ÉÁî® dfsÔºåÁõ¥Âà∞Ëµ∞Âà∞Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆËäÇÁÇπÂÅúÊ≠¢ÊêúÁ¥¢„ÄÇÁÑ∂ÂêéÂ∞ÜÂàÜÂà´‰ªé 1 Âà∞ N ÁºñÂè∑ÁöÑÂ∞èÂ≠©‰∏∫Ëµ∑ÁÇπÁöÑÂΩ¢ÊàêÁöÑÊúÄÈïøÈìæÁöÑÈÉΩÂ≠òÂÇ®Ëµ∑Êù•„ÄÇËøôÈáåÊàë‰ª¨Â≠òÂú® chainArray ÈáåÈù¢ÔºåÊñπ‰æøÂêéÈù¢‰ΩøÁî®„ÄÇ</p>\n<p>Á¨¨‰∫åÊ≠•ÔºåÊàë‰ª¨Áî®ÂàöÊâç‰øùÂ≠òÁöÑÈìæÊù•ÊãºÊé•ÁéØÔºåËøôÈáåÊàë‰ª¨Áî®‰∏Ä‰∏™Êï∞ÁªÑÊù•ËÆ∞ÂΩï‰ª•ÊØè‰∏™Â≠©Â≠ê‰∏∫Ëµ∑ÁÇπÁöÑÊúÄÂ§ßÁéØÈïøÂ∫¶ circleÔºåÂêåÊó∂Áî®‰∏Ä‰∏™Êï¥Êï∞ maxNum ËÆ∞ÂΩïÊâÄÊúâÁöÑÁéØ‰∏≠ÊúÄÂ§ßÂÄº„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÂºÄÂßãÈÅçÂéÜÂàöÊâçËÆ∞ÂΩïÂú® chainArray ÈáåÈù¢ÁöÑÈìæÔºåËÆ°ÁÆó‰ªñ‰ª¨ËÉΩÊãºÊé•ÊúÄÈïøÁéØÁöÑÂ§ßÂ∞è„ÄÇËÆ°ÁÆó‰∏≠ÂàÜ‰∏âÁßçÊÉÖÂÜµÔºö<br>\n1„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèã‰∏çÊòØÁ¨¨‰∏Ä‰Ωç‰∏éÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå‰ΩÜÊòØ 4 ÁöÑ BFF ÊòØ 2ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØÊó†ÊïàÁöÑÔºå‰πü‰∏çËÉΩÂ§üÊàêÁéØÔºåÈïøÂ∫¶Â∞±ËÆ∞‰∏∫ 0Ôºõ<br>\n2„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÁ¨¨‰∏Ä‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå4 ÁöÑ BFF ÊòØ 1ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØËá™ÊàêÁéØÔºåÈïøÂ∫¶ËÆ∞‰∏∫ÈìæÈïøÂ∫¶ 4„ÄÇ<br>\n3„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå4 ÁöÑ BFF ÊòØ 3ÔºåËøôÁßçÈìæÊó¢Ëá™ÊàêÁéØÔºåÂèàÂèØ‰ª•ÂíåÂÖ∂ÂÆÉ‰ª• 3 ÁªìÂ∞æÁöÑÈìæÊãºÊé•ÊàêÁéØÔºåÂ¶Ç 5-&gt;4-&gt;3Ôºå‰∏§‰∏™ÈìæÊãºÊé•ÂêéÂ∞±Êàê‰∫Ü 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5„ÄÇÂØπ‰∫éËøôÁßçÊÉÖÂÜµÔºåÊàë‰ª¨Â∞±ÂøÖÈ°ªÂÜçÊ¨°ÈÅçÂéÜÊâÄÊúâÈìæÔºåÊâæÂá∫ÂíåËØ•ÈìæÊãºÊé•ÂêéÁöÑÊúÄÈïøÈìæÔºåËÆ∞ÂΩï‰∏∫‰∏§ÈìæÈïøÂ∫¶ÂíåÂáè 2ÔºåÂπ∂‰øùÂ≠òËøõ circle ‰∏≠„ÄÇ<br>\nÊúÄÂêéÔºåÊØèÊ¨°Êõ¥Êñ∞ËøáÂêéÁéØÈïøÂ∫¶ËøáÂêéÔºåÈúÄË¶ÅÊõ¥Êñ∞ maxNum ÁöÑÂÄº„ÄÇ<br>\nÂÆûÁé∞‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">¬† ¬† for (int j = 0; j &lt; N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int length = (int)array.count;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] &amp;&amp; nextValue != [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† length = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] &lt; length) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);</span><br><span class=\"line\">¬† ¬† &#125;</span><br></pre></td></tr></table></figure>\n<p>Ëá≥Ê≠§ÔºåÊàë‰ª¨Âü∫Êú¨ÊâæÂà∞‰∫Ü‰ª•ÊâÄÊúâÂ≠©Â≠ê‰∏∫Ëµ∑ÁÇπËÉΩÂΩ¢ÊàêÁöÑÂçï‰∏ÄÁéØÔºå‰ΩÜÊòØÂπ∂‰∏çÊòØËÉΩÂΩ¢ÊàêÁöÑÊúÄÂ§ßÁéØ„ÄÇ</p>\n<p>Á¨¨‰∏âÊ≠•ÔºåÊâæÂá∫ÊúÄÂ§ßÁöÑÁéØÂ§ßÂ∞èÔºå‰∏äÈù¢ÁöÑ maxNum Â∑≤ÁªèËÆ∞ÂΩï‰∫ÜÂçïÁéØÊâÄËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄºÔºå‰ΩÜÊòØÂØπ‰∫éÂ¶Ç 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5 ËøôÁßçÂõûÁéØÔºåÂÖ∂ÂÆûËøòÊòØÂèØ‰ª•ÂíåÂÖ∂ÂÆÉÂõûÁéØËøõË°åÊãºÊé•ÔºåÂ¶ÇÂíå 6-&gt;7&lt;-&gt;8&lt;-9 ÊãºÊé•ÔºåÊúÄÂêéÂæóÂà∞Êõ¥Â§ßÁöÑÁéØ 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5\\6-&gt;7&lt;-&gt;8&lt;-9„ÄÇÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÊääÂàöÊâç circle ‰∏≠ËÆ∞ÂΩïÁöÑÂõûÁéØÈïøÂ∫¶ÈÉΩÂä†Ëµ∑Êù•Èô§‰ª• 2ÔºåÂÜçÊù•Êõ¥Êñ∞ maxNum ÂæóÂà∞ÊúÄÁªàÁöÑÁªìÊûúÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">¬† ¬† int tot = 0;</span><br><span class=\"line\">¬† ¬† for (int k = 0; k &lt; N; k ++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† tot += circle[k];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† maxNum = MAX(maxNum, tot / 2);</span><br><span class=\"line\">¬† ¬† return maxNum;</span><br></pre></td></tr></table></figure>\n<p>Ëá≥Ê≠§ÔºåÊàë‰ª¨Â∞±ÂÆåÁæéÁöÑÂà©Áî® DFS ÂÆåÊàê‰∫ÜÂØπÂ∞èÊúãÂèãÊéíÂ∫ß‰ΩçÁöÑ‰ªªÂä°„ÄÇ<br>\nÁúã‰∏Ä‰∏ãËæìÂá∫Âà§ÂÆöÁªìÊûúÔºö</p>\n<blockquote>\n<p>Small input<br>\n16 pointsSolve C-small<br>\nJudge‚Äôs response for last submission: Correct.<br>\nLarge input<br>\n29 pointsSolve C-large<br>\nJudge‚Äôs response for last submission: Correct.</p>\n</blockquote>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//¬† main.m</span><br><span class=\"line\">//¬† BFFs</span><br><span class=\"line\">//</span><br><span class=\"line\">//¬† Created by Jiao Liu on 4/16/16.</span><br><span class=\"line\">//¬† Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void dfs(int *input, bool *flag ,int start, NSMutableArray *array)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (flag[start - 1] == true) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† flag[start - 1] = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];</span><br><span class=\"line\">¬† ¬† ¬† ¬† start = input[start - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, start, array);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">long maxCircle(int *input, int N)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† long maxNum = 0;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *chainArray = [NSMutableArray array];</span><br><span class=\"line\">¬† ¬† int circle[N];</span><br><span class=\"line\">¬† ¬† memset(circle, 0, sizeof(circle));</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; N; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† bool flag[N];</span><br><span class=\"line\">¬† ¬† ¬† ¬† memset(flag, false, sizeof(flag));</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSMutableArray *array = [NSMutableArray array];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, i + 1, array);</span><br><span class=\"line\">¬† ¬† ¬† ¬† [chainArray addObject:array];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† for (int j = 0; j &lt; N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int length = (int)array.count;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] &amp;&amp; nextValue != [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† length = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] &lt; length) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† int tot = 0;</span><br><span class=\"line\">¬† ¬† for (int k = 0; k &lt; N; k ++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† tot += circle[k];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† maxNum = MAX(maxNum, tot / 2);</span><br><span class=\"line\">¬† ¬† return maxNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">¬† ¬† @autoreleasepool &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† // insert code here...</span><br><span class=\"line\">¬† ¬† ¬† ¬† freopen(&quot;/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.in&quot;, &quot;r&quot;, stdin);</span><br><span class=\"line\">//¬† ¬† ¬† ¬† freopen(&quot;/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.out&quot;, &quot;w&quot;, stdout);</span><br><span class=\"line\">¬† ¬† ¬† ¬† int T;</span><br><span class=\"line\">¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">¬† ¬† ¬† ¬† for (int i = 1; i&lt;=T; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† int N;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† int Bffs[N];</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† for (int j = 0; j&lt;N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int bestFriend;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;bestFriend);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† Bffs[j]=bestFriend;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† printf(&quot;Case #%d: %ld\\n&quot;,i,maxCircle(Bffs,N));</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>DFSÔºàDepth-First-SearchÔºâÊ∑±Â∫¶‰ºòÂÖàÁÆóÊ≥ïÔºåÊòØÊêúÁ¥¢ÁÆóÊ≥ïÁöÑ‰∏ÄÁßç„ÄÇÊòØ‰∏ÄÁßçÂú®ÂºÄÂèëÁà¨Ëô´Êó©Êúü‰ΩøÁî®ËæÉÂ§öÁöÑÊñπÊ≥ï„ÄÇÂÆÉÁöÑÊÄùÊÉ≥ÊòØ‰ªé‰∏Ä‰∏™È°∂ÁÇπ V0 ÂºÄÂßãÔºåÊ≤øÁùÄ‰∏ÄÊù°Ë∑Ø‰∏ÄÁõ¥Ëµ∞Âà∞Â∫ïÔºåÂ¶ÇÊûúÂèëÁé∞‰∏çËÉΩÂà∞ËææÁõÆÊ†áËß£ÔºåÈÇ£Â∞±ËøîÂõûÂà∞‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºåÁÑ∂Âêé‰ªéÂè¶‰∏ÄÊù°Ë∑ØÂºÄÂßãËµ∞Âà∞Â∫ïÔºåËøôÁßçÂ∞ΩÈáèÂæÄÊ∑±Â§ÑËµ∞ÁöÑÊ¶ÇÂøµÂç≥ÊòØÊ∑±Â∫¶‰ºòÂÖàÁöÑÊ¶ÇÂøµ„ÄÇ</p>\n<p>Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÊòØÂõæËÆ∫‰∏≠ÁöÑÁªèÂÖ∏ÁÆóÊ≥ïÔºåÂà©Áî®Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÁÆóÊ≥ïÂèØ‰ª•‰∫ßÁîüÁõÆÊ†áÂõæÁöÑÁõ∏Â∫îÊãìÊâëÊéíÂ∫èË°®ÔºåÂà©Áî®ÊãìÊâëÊéíÂ∫èË°®ÂèØ‰ª•Êñπ‰æøÁöÑËß£ÂÜ≥ÂæàÂ§öÁõ∏ÂÖ≥ÁöÑÂõæËÆ∫ÈóÆÈ¢òÔºåÂ¶ÇÊúÄÂ§ßË∑ØÂæÑÈóÆÈ¢òÁ≠âÁ≠â„ÄÇ</p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-5ed96443e4c08337.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"DFS\"></p>\n<p>‰∏ãÈù¢‰ª•‰∏Ä‰∏™ÂÖ∑‰ΩìÈóÆÈ¢òÊù•Áúã DFS ÁöÑÂÆûÁé∞‰∏éÂÆûÁî®„ÄÇÔºàÈóÆÈ¢òÊù•Ê∫ê[GCJ2016-1A]BFFsÔºâ</p>\n<p><strong>Problem</strong><br>\nYou are a teacher at the brand new Little Coders kindergarten. You have<strong>N</strong>kids in your class, and each one has a different student ID number from 1 through<strong>N</strong>. Every kid in your class has a single best friend forever (BFF), and you know who that BFF is for each kid. BFFs are not necessarily reciprocal ‚Äì that is, B being A‚Äôs BFF does not imply that A is B‚Äôs BFF.<br>\nYour lesson plan for tomorrow includes an activity in which the participants must sit in a circle. You want to make the activity as successful as possible by building the largest possible circle of kids such that each kid in the circle is sitting directly next to their BFF, either to the left or to the right. Any kids not in the circle will watch the activity without participating.<br>\nWhat is the greatest number of kids that can be in the circle?<br>\n<strong>Input</strong><br>\nThe first line of the input gives the number of test cases,<strong>T</strong>.<strong>T</strong>test cases follow. Each test case consists of two lines. The first line of a test case contains a single integer<strong>N</strong>, the total number of kids in the class. The second line of a test case contains<strong>N</strong>integers<strong>F1</strong>,<strong>F2</strong>, ‚Ä¶,<strong>FN</strong>, where<strong>Fi</strong>is the student ID number of the BFF of the kid with student ID i.<br>\n<strong>Output</strong><br>\nFor each test case, output one line containing ‚ÄúCase #x: y‚Äù, where x is the test case number (starting from 1) and y is the maximum number of kids in the group that can be arranged in a circle such that each kid in the circle is sitting next to his or her BFF.<br>\n<strong>Limits</strong><br>\n1 ‚â§<strong>T</strong>‚â§ 100.<br>\n1 ‚â§<strong>Fi</strong>‚â§<strong>N</strong>, for all i.<br>\n<strong>Fi</strong>‚â† i, for all i. (No kid is their own BFF.)<br>\n<strong>Small dataset</strong><br>\n3 ‚â§<strong>N</strong>‚â§ 10.<br>\n<strong>Large dataset</strong><br>\n3 ‚â§<strong>N</strong>‚â§ 1000.<br>\n<strong>Sample</strong></p>\n<blockquote>\n<p>Input<br>\n4<br>\n4<br>\n2 3 4 1<br>\n4<br>\n3 3 4 1<br>\n4<br>\n3 3 4 3<br>\n10<br>\n7 8 10 10 9 2 9 6 3 3<br>\nOutput<br>\nCase #1: 4<br>\nCase #2: 3<br>\nCase #3: 3<br>\nCase #4: 6</p>\n</blockquote>\n<p>In sample case #4, the largest possible circle seats the following kids in the following order:7 9 3 10 4 1. (Any reflection or rotation of this circle would also work.) Note that the kid with student ID 1 is next to the kid with student ID 7, as required, because the list represents a circle.</p>\n<p>Ëß£ÈáäÔºö<br>\n‰∏Ä‰∏™ÂπºÂÑøÂõ≠ÔºåÊúâ N ‰∏™Â∞èÊúãÂèãÔºåÁºñÂè∑‰ªé 1 Âà∞ NÔºåÊØè‰∏™Â≠©Â≠êÊúâ‰∏Ä‰∏™Ê∞∏ËøúÊúÄÂ•ΩÁöÑÊúãÂèã„ÄÇËøô‰∏™ BFF ‰∏çÊòØÁõ∏‰∫íÁöÑÔºåA ÊòØ B ÁöÑ BFFÔºå‰∏ç‰ª£Ë°® B ‰πüÊòØ A ÁöÑÁöÑ BFF„ÄÇÊé•‰∏ãÊù•ÊòéÂ§©ÊúâËäÇËØæÈúÄË¶ÅÂ∞èÊúãÂèãÂùêÊàê‰∏Ä‰∏™ÂúàÁé©Ê∏∏ÊàèÔºå‰ΩÜÊòØÊØè‰∏™Â≠©Â≠êÈÉΩÂ∏åÊúõËá™Â∑±ÁöÑÂ∑¶ËæπÊàñËÄÖÂè≥ËæπÂùêÁöÑÊòØËá™Â∑±ÁöÑ BFFÔºåÊ≤°ÂùêËøõÂéªÁöÑÂ∞èÊúãÂèãÂ∞±Âè™ËÉΩËßÇÁúã‰ªñ‰ª¨Áé©ÔºåÈÇ£‰πàËøô‰∏™ÂúàÊúÄÂ§ßËÉΩÂùêÂ§öÂ∞ë‰∏™Â∞èÊúãÂèãÔºü<br>\nËæìÂÖ•Á¨¨‰∏Ä‰∏™Êï∞ T ÊòØÊµãËØïÊï∞ÊçÆÁöÑÁªÑÊï∞ÔºåÁÑ∂ÂêéÊØè‰∏§Ë°å‰∏∫‰∏ÄÁªÑÔºåÁ¨¨‰∏ÄË°å‰∏Ä‰∏™Êï∞Â≠óÊòØ N Â∞èÊúãÂèãÁöÑ‰∏™Êï∞ÔºåÁ¨¨‰∫åË°å N ‰∏™Êï∞Â≠óÊòØÁºñÂè∑ 1 Âà∞ N ÁöÑÂ≠©Â≠êÁöÑÊúÄÂ•ΩÊúãÂèãÁºñÂè∑„ÄÇ<br>\nËæìÂá∫ÊØèË°å‰ª£Ë°®ÊØèÁªÑÊµãËØïÊï∞ÊçÆÁöÑÊúÄÂ§ßÂúàÂùêÂ∞èÊúãÂèãÊï∞Èáè„ÄÇ</p>\n<p>ÂàÜÊûêÔºö<br>\nÁ¨¨‰∏ÄÊ≠•ÔºåÊàë‰ª¨ÈúÄË¶ÅÊâæÂà∞ÊØè‰∏™Â≠©Â≠êÈÄöËøá BFF Ëøô‰∏™ÂÖ≥Á≥ªÂçïÂêëËÉΩ‰∏ÄÂÖ±ËÉΩÈìæÂà∞Â§öÂ∞ëÂ≠©Â≠êËøõÊù•ÔºåËøôÈáåÂ∞±Ë¶ÅÁî®Âà∞ DFS ÊäÄÊúØÊù•ÂÆûÁé∞„ÄÇÊù•Áúã‰∏Ä‰∏ã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void dfs(int *input, bool *flag ,int start, NSMutableArray *array)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (flag[start - 1] == true) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† flag[start - 1] = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];</span><br><span class=\"line\">¬† ¬† ¬† ¬† start = input[start - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, start, array);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËøôÈáå input ÊòØ BFF ÂÖ≥Á≥ªÊï∞ÁªÑÔºåflag ÊòØÊ†áÂøóÊüê‰∏Ä‰∏™Â∞èÂ≠©ÊòØÂê¶ËÆøÈóÆËøáÁöÑÊï∞ÁªÑÔºåstart ‰ª£Ë°®‰ªéÂì™‰∏™Â∞èÂ≠©ÂºÄÂßãÊêúÁ¥¢Ôºåarray ÊòØÊúÄÂêéÊàë‰ª¨Ë¶ÅÁöÑÈìæ„ÄÇ‰ªé start ‰º†ÂÖ•ÁöÑÂ∞èÂ≠©ÁºñÂè∑ÂºÄÂßãÊêúÁ¥¢ÔºåÂ∞Ü start Ëá™Â∑±ÂÜôÂà∞ array ‰∏≠Âπ∂Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆÔºåÁÑ∂Âêé start Êõ¥Êñ∞‰∏∫Ëá™Â∑±ÁöÑ BFFÔºåËø≠‰ª£Ë∞ÉÁî® dfsÔºåÁõ¥Âà∞Ëµ∞Âà∞Ê†áËÆ∞‰∏∫Â∑≤ËÆøÈóÆËäÇÁÇπÂÅúÊ≠¢ÊêúÁ¥¢„ÄÇÁÑ∂ÂêéÂ∞ÜÂàÜÂà´‰ªé 1 Âà∞ N ÁºñÂè∑ÁöÑÂ∞èÂ≠©‰∏∫Ëµ∑ÁÇπÁöÑÂΩ¢ÊàêÁöÑÊúÄÈïøÈìæÁöÑÈÉΩÂ≠òÂÇ®Ëµ∑Êù•„ÄÇËøôÈáåÊàë‰ª¨Â≠òÂú® chainArray ÈáåÈù¢ÔºåÊñπ‰æøÂêéÈù¢‰ΩøÁî®„ÄÇ</p>\n<p>Á¨¨‰∫åÊ≠•ÔºåÊàë‰ª¨Áî®ÂàöÊâç‰øùÂ≠òÁöÑÈìæÊù•ÊãºÊé•ÁéØÔºåËøôÈáåÊàë‰ª¨Áî®‰∏Ä‰∏™Êï∞ÁªÑÊù•ËÆ∞ÂΩï‰ª•ÊØè‰∏™Â≠©Â≠ê‰∏∫Ëµ∑ÁÇπÁöÑÊúÄÂ§ßÁéØÈïøÂ∫¶ circleÔºåÂêåÊó∂Áî®‰∏Ä‰∏™Êï¥Êï∞ maxNum ËÆ∞ÂΩïÊâÄÊúâÁöÑÁéØ‰∏≠ÊúÄÂ§ßÂÄº„ÄÇÁÑ∂ÂêéÊàë‰ª¨ÂºÄÂßãÈÅçÂéÜÂàöÊâçËÆ∞ÂΩïÂú® chainArray ÈáåÈù¢ÁöÑÈìæÔºåËÆ°ÁÆó‰ªñ‰ª¨ËÉΩÊãºÊé•ÊúÄÈïøÁéØÁöÑÂ§ßÂ∞è„ÄÇËÆ°ÁÆó‰∏≠ÂàÜ‰∏âÁßçÊÉÖÂÜµÔºö<br>\n1„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèã‰∏çÊòØÁ¨¨‰∏Ä‰Ωç‰∏éÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå‰ΩÜÊòØ 4 ÁöÑ BFF ÊòØ 2ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØÊó†ÊïàÁöÑÔºå‰πü‰∏çËÉΩÂ§üÊàêÁéØÔºåÈïøÂ∫¶Â∞±ËÆ∞‰∏∫ 0Ôºõ<br>\n2„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÁ¨¨‰∏Ä‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå4 ÁöÑ BFF ÊòØ 1ÔºåÈÇ£‰πàËøôÁßçÈìæÂ∞±ÊòØËá™ÊàêÁéØÔºåÈïøÂ∫¶ËÆ∞‰∏∫ÈìæÈïøÂ∫¶ 4„ÄÇ<br>\n3„ÄÅÈìæÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ∞èÊúãÂèãÁöÑÊúÄÂ•ΩÊúãÂèãÊòØÂÄíÊï∞Á¨¨‰∫å‰ΩçÂ∞èÂ≠©„ÄÇÂ¶ÇÔºö1-&gt;2-&gt;3-&gt;4Ôºå4 ÁöÑ BFF ÊòØ 3ÔºåËøôÁßçÈìæÊó¢Ëá™ÊàêÁéØÔºåÂèàÂèØ‰ª•ÂíåÂÖ∂ÂÆÉ‰ª• 3 ÁªìÂ∞æÁöÑÈìæÊãºÊé•ÊàêÁéØÔºåÂ¶Ç 5-&gt;4-&gt;3Ôºå‰∏§‰∏™ÈìæÊãºÊé•ÂêéÂ∞±Êàê‰∫Ü 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5„ÄÇÂØπ‰∫éËøôÁßçÊÉÖÂÜµÔºåÊàë‰ª¨Â∞±ÂøÖÈ°ªÂÜçÊ¨°ÈÅçÂéÜÊâÄÊúâÈìæÔºåÊâæÂá∫ÂíåËØ•ÈìæÊãºÊé•ÂêéÁöÑÊúÄÈïøÈìæÔºåËÆ∞ÂΩï‰∏∫‰∏§ÈìæÈïøÂ∫¶ÂíåÂáè 2ÔºåÂπ∂‰øùÂ≠òËøõ circle ‰∏≠„ÄÇ<br>\nÊúÄÂêéÔºåÊØèÊ¨°Êõ¥Êñ∞ËøáÂêéÁéØÈïøÂ∫¶ËøáÂêéÔºåÈúÄË¶ÅÊõ¥Êñ∞ maxNum ÁöÑÂÄº„ÄÇ<br>\nÂÆûÁé∞‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">¬† ¬† for (int j = 0; j &lt; N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int length = (int)array.count;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] &amp;&amp; nextValue != [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† length = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] &lt; length) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);</span><br><span class=\"line\">¬† ¬† &#125;</span><br></pre></td></tr></table></figure>\n<p>Ëá≥Ê≠§ÔºåÊàë‰ª¨Âü∫Êú¨ÊâæÂà∞‰∫Ü‰ª•ÊâÄÊúâÂ≠©Â≠ê‰∏∫Ëµ∑ÁÇπËÉΩÂΩ¢ÊàêÁöÑÂçï‰∏ÄÁéØÔºå‰ΩÜÊòØÂπ∂‰∏çÊòØËÉΩÂΩ¢ÊàêÁöÑÊúÄÂ§ßÁéØ„ÄÇ</p>\n<p>Á¨¨‰∏âÊ≠•ÔºåÊâæÂá∫ÊúÄÂ§ßÁöÑÁéØÂ§ßÂ∞èÔºå‰∏äÈù¢ÁöÑ maxNum Â∑≤ÁªèËÆ∞ÂΩï‰∫ÜÂçïÁéØÊâÄËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄºÔºå‰ΩÜÊòØÂØπ‰∫éÂ¶Ç 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5 ËøôÁßçÂõûÁéØÔºåÂÖ∂ÂÆûËøòÊòØÂèØ‰ª•ÂíåÂÖ∂ÂÆÉÂõûÁéØËøõË°åÊãºÊé•ÔºåÂ¶ÇÂíå 6-&gt;7&lt;-&gt;8&lt;-9 ÊãºÊé•ÔºåÊúÄÂêéÂæóÂà∞Êõ¥Â§ßÁöÑÁéØ 1-&gt;2-&gt;3&lt;-&gt;4&lt;-5\\6-&gt;7&lt;-&gt;8&lt;-9„ÄÇÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÊääÂàöÊâç circle ‰∏≠ËÆ∞ÂΩïÁöÑÂõûÁéØÈïøÂ∫¶ÈÉΩÂä†Ëµ∑Êù•Èô§‰ª• 2ÔºåÂÜçÊù•Êõ¥Êñ∞ maxNum ÂæóÂà∞ÊúÄÁªàÁöÑÁªìÊûúÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">¬† ¬† int tot = 0;</span><br><span class=\"line\">¬† ¬† for (int k = 0; k &lt; N; k ++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† tot += circle[k];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† maxNum = MAX(maxNum, tot / 2);</span><br><span class=\"line\">¬† ¬† return maxNum;</span><br></pre></td></tr></table></figure>\n<p>Ëá≥Ê≠§ÔºåÊàë‰ª¨Â∞±ÂÆåÁæéÁöÑÂà©Áî® DFS ÂÆåÊàê‰∫ÜÂØπÂ∞èÊúãÂèãÊéíÂ∫ß‰ΩçÁöÑ‰ªªÂä°„ÄÇ<br>\nÁúã‰∏Ä‰∏ãËæìÂá∫Âà§ÂÆöÁªìÊûúÔºö</p>\n<blockquote>\n<p>Small input<br>\n16 pointsSolve C-small<br>\nJudge‚Äôs response for last submission: Correct.<br>\nLarge input<br>\n29 pointsSolve C-large<br>\nJudge‚Äôs response for last submission: Correct.</p>\n</blockquote>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//¬† main.m</span><br><span class=\"line\">//¬† BFFs</span><br><span class=\"line\">//</span><br><span class=\"line\">//¬† Created by Jiao Liu on 4/16/16.</span><br><span class=\"line\">//¬† Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void dfs(int *input, bool *flag ,int start, NSMutableArray *array)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† if (flag[start - 1] == true) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† return;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† else</span><br><span class=\"line\">¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† flag[start - 1] = true;</span><br><span class=\"line\">¬† ¬† ¬† ¬† [array addObject:[NSNumber numberWithInt:start]];</span><br><span class=\"line\">¬† ¬† ¬† ¬† start = input[start - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, start, array);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">long maxCircle(int *input, int N)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† long maxNum = 0;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *chainArray = [NSMutableArray array];</span><br><span class=\"line\">¬† ¬† int circle[N];</span><br><span class=\"line\">¬† ¬† memset(circle, 0, sizeof(circle));</span><br><span class=\"line\">¬† ¬† for (int i = 0; i &lt; N; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† bool flag[N];</span><br><span class=\"line\">¬† ¬† ¬† ¬† memset(flag, false, sizeof(flag));</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSMutableArray *array = [NSMutableArray array];</span><br><span class=\"line\">¬† ¬† ¬† ¬† dfs(input, flag, i + 1, array);</span><br><span class=\"line\">¬† ¬† ¬† ¬† [chainArray addObject:array];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† for (int j = 0; j &lt; N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† NSArray *array = [chainArray objectAtIndex:j];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int length = (int)array.count;</span><br><span class=\"line\">¬† ¬† ¬† ¬† int LastIndex = [[array lastObject] intValue];</span><br><span class=\"line\">¬† ¬† ¬† ¬† int nextValue = input[LastIndex - 1];</span><br><span class=\"line\">¬† ¬† ¬† ¬† if (nextValue != [[array firstObject] intValue] &amp;&amp; nextValue != [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† length = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† else</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† if (nextValue == [[array objectAtIndex:array.count - 2] intValue]) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int MaxLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† for (NSArray *item in chainArray) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int newLength = 0;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if ([[item lastObject] intValue] == nextValue) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† newLength = length + (int)[item count] - 2;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† MaxLength = MAX(MaxLength, newLength);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† length = MaxLength;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† if (circle[nextValue - 1] &lt; length) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† circle[nextValue - 1] = length;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬† ¬† ¬†</span><br><span class=\"line\">¬† ¬† ¬† ¬† maxNum = MAX(maxNum, length);</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† int tot = 0;</span><br><span class=\"line\">¬† ¬† for (int k = 0; k &lt; N; k ++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† tot += circle[k];</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† maxNum = MAX(maxNum, tot / 2);</span><br><span class=\"line\">¬† ¬† return maxNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">¬† ¬† @autoreleasepool &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† // insert code here...</span><br><span class=\"line\">¬† ¬† ¬† ¬† freopen(&quot;/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.in&quot;, &quot;r&quot;, stdin);</span><br><span class=\"line\">//¬† ¬† ¬† ¬† freopen(&quot;/Users/Jiao/Desktop/CodeJam/BFFs/C-large-practice.out&quot;, &quot;w&quot;, stdout);</span><br><span class=\"line\">¬† ¬† ¬† ¬† int T;</span><br><span class=\"line\">¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">¬† ¬† ¬† ¬† for (int i = 1; i&lt;=T; i++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† int N;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† int Bffs[N];</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† for (int j = 0; j&lt;N; j++) &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† int bestFriend;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† scanf(&quot;%d&quot;,&amp;bestFriend);</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† Bffs[j]=bestFriend;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† ¬† ¬† ¬† ¬† printf(&quot;Case #%d: %ld\\n&quot;,i,maxCircle(Bffs,N));</span><br><span class=\"line\">¬† ¬† ¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂","date":"2016-08-22T02:58:02.000Z","thumbnail":"http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","_content":"\nÂú® OC ÁºñÁ®ã‰∏≠ÔºåÂ∏∏Â∏∏‰ºöÁî®Âà∞ÂØπÂØπË±°ÁöÑÂ§çÂà∂ÔºåÁÑ∂ÂêéÊìç‰ΩúÂâØÊú¨ÂØπË±°„ÄÇÁÑ∂ËÄåÂØπ‰∏éÂ∫îËØ•ÈÄâÊã©‰ΩïÁßçÂØπË±°Â§çÂà∂ÁöÑÊñπÂºèÔºåÂ§çÂà∂ÂêéÂâØÊú¨ÂØπË±°Êìç‰Ωú‰ºö‰∏ç‰ºöÂΩ±ÂìçÂéüÂßãÂØπË±°Á≠âÈóÆÈ¢òÔºåÊàë‰ª¨ÂæÄÂæÄÊ≤°ÊúâËøáÂ§öËÄÉËôëÔºåËÄåÊòØÂá≠ÂÄüÁªèÈ™åÂú®ÁºñÁ†Å„ÄÇÊé•‰∏ãÊù•Â∞±ÂØπ OC ‰∏≠ÂØπË±°Â§çÂà∂Êú∫Âà∂ËøõË°åÂâñÊûêÔºåÈÄöËøáÂØπÂ§çÂà∂Êú∫Âà∂ÁöÑÁ†îÁ©∂ÂèØ‰ª•Âú®ÁºñÁ†Å‰∏≠ÂØπÂØπË±°ÁöÑÂ§çÂà∂Êõ¥Âä†Ê∏∏ÂàÉÊúâ‰Ωô„ÄÇ\n\nÈ¶ñÂÖàÔºåÂú® OC ‰∏≠Â§çÂà∂ÂàÜ‰∏∫Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂Ôºå‰∏Ä‰∏™ÊØîËæÉËÆ§ÂèØÁöÑÂÆö‰πâÊòØÔºö\n\n> **Ê∑±Â§çÂà∂Ôºö**Â§çÂà∂ÂØπË±°ÂºïÁî®‰∏éÂØπË±°Êú¨Ë∫´„ÄÇ¬†\n> **ÊµÖÂ§çÂà∂Ôºö**Âè™Â§çÂà∂ÂØπË±°ÂºïÁî®„ÄÇ\n\n<!-- more -->\n\n![](http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n---\n\n**ÈÇ£‰πàÂì™‰∫õÊìç‰ΩúÊâçÊòØÊµÖÂ§çÂà∂ÔºåÂì™‰∫õÊìç‰ΩúÊòØÊ∑±Â§çÂà∂Ôºü**\n\nÊâÄÊúâÁöÑÂØπË±°Èó¥ËµãÂÄºÊìç‰ΩúÈÉΩÊòØ**ÊµÖÂ§çÂà∂**Ôºå‰ªÖ‰ªÖÂ§çÂà∂‰∫ÜÂºïÁî®„ÄÇÂ¶Ç CopyStr = Str1ÔºåËøôÈáå CopyStr Âíå Str1 ÊåáÂêëÁöÑÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄÔºåÊîπÂèò‰∏§ËÄÖ‰πãÈó¥‰ªª‰Ωï‰∏Ä‰∏™ÂÄºÔºåÂè¶‰∏Ä‰∏™ÈÉΩ‰ºöÈöè‰πãÊîπÂèò„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid assignTest()\n{\n¬† ¬† printf(\"-----Assign Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = str1;\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSMutableString *str4 = str3;\n¬† ¬† [str3 appendString:@\" World\"];\n¬† ¬† [str4 appendString:@\"!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str4 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str3);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str4);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str4);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@\"Hello\", nil];\n¬† ¬† NSMutableArray *arr2 = arr1;\n¬† ¬† [arr1 addObject:@\"World\"];\n¬† ¬† [arr2 addObject:@\"!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----Assign Test-----**\n\n---\n\n**orignalStr : Hello**\n**copyStr : Hello**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x100002060**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello World!**\n**copyStr : Hello World!**\n**orignalStr value address: 0x1002005c0**\n**copyStr value address: 0x1002005c0**\n**orignalStr pointer address: 0x7fff5fbff798**\n**copyStr pointer address: 0x7fff5fbff790**\n\n---\n\n**2016-08-22 11:35:20.312 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† Hello,**\n**¬† ¬† World,**\n**¬† ¬† \"!\"**\n**)**\n**2016-08-22 11:35:20.313 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† Hello,**\n**¬† ¬† World,**\n**¬† ¬† \"!\"**\n**)**\n**orignalArray value address: 0x100406910**\n**copyArray value address: 0x100406910**\n**orignalArray pointer address: 0x7fff5fbff788**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nÈÄöËøá‰∏äÈù¢ÁªìÊûúÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ôºåvalue ÁöÑÂú∞ÂùÄÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑÔºåËÄå pointer ÁöÑÂú∞ÂùÄÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåËøôÂ∞±ËØ¥Êòé‰∫ÜËµãÂÄºÊìç‰ΩúÊòØÊµÖÂ§çÂà∂ÔºåÂè™ÊòØÁîüÊàê‰∏§‰ªΩÂØπË±°ÁöÑÂºïÁî®ÔºåËÄåÂØπË±°Êú¨Ë∫´ËøòÊòØÂêå‰∏Ä‰ªΩ„ÄÇÂéüÂØπË±°ÂÄºÂíåÂâØÊú¨ÂØπË±°ÁöÑÂÄºÊìç‰ΩúÊòØÁõ∏‰∫íÂΩ±ÂìçÁöÑ„ÄÇ\n\n---\n\n**ÈÇ£‰πà OC ‰∏≠Â¶Ç‰ΩïÂÆûÁé∞Ê∑±Â§çÂà∂Âë¢Ôºü¬†**\n\nOC ‰∏≠Ê∑±Â§çÂà∂ÊòØÈÄöËøá copy ‰∏é mutableCopy ÊñπÊ≥ïÂÆûÁé∞Ôºà‰ΩÜ‰∏çÊòØÈÉΩËÉΩËææÂà∞Ê∑±Â§çÂà∂ÁöÑÁõÆÁöÑÔºâÔºåÈÄöËøá copy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÈÄöËøá mutableCopy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØÂèØÂèòÁöÑ„ÄÇÂ¶ÇÂàùÂßãÂØπË±°‰∏∫ NSString ‰∏é NSMutableStringÔºåÈÄöËøá copy ÂêéÂâØÊú¨ÈÉΩÊòØ NSStringÔºåËÄåÈÄöËøá mutableCopy ÂêéÈÉΩÊòØ NSMutableString„ÄÇ\nÊé•‰∏ãÊù•ÂàÜ‰∏§ÁßçÊÉÖÂÜµËÆ®ËÆ∫ copy ‰∏é mutableCopyÔºö\n\n**ÂàùÂßãÂØπË±°‰∏çÂèØÂèòÔºàÂ¶Ç NSString„ÄÅNSArray Á≠âÔºâ**\n\nË∞ÉÁî® copy ÊñπÊ≥ï‰πüÊòØ**ÊµÖÂ§çÂà∂**ÔºåÁ≠âÂêå‰∫éÁõ¥Êé•ËµãÂÄºÔºåÂõ†‰∏∫Â§çÂà∂ËøáÂêéÁöÑÂâØÊú¨ÂíåÂéüÊù•ÁöÑÂØπË±°ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Ë∞ÉÁî® copy Êú¨Ë¥®Â∞±ÊòØËµãÂÄºÊìç‰ΩúÔºåÂ§çÂà∂‰∫ÜÂºïÁî®Ôºå‰ΩÜÊòØÈÉΩÊåáÂêëÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇ\nË∞ÉÁî® mutableCopy ÊòØ**Ê∑±Â§çÂà∂**ÔºåÂâØÊú¨Êàê‰∏∫‰∫ÜÂèØÂèòÂØπË±°Ôºå‰ΩÜÊòØÊìç‰ΩúÂâØÊú¨ÔºåÂØπÂàùÂßãÂØπË±°ÁöÑÂÄº‰∏ç‰ºö‰∫ßÁîüÂΩ±Âìç„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid constCopyTest()\n{\n¬† ¬† printf(\"-----ConstCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str3 appendString:@\" World!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr3 addObject:@\"World\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----ConstCopy Test-----**\n\n---\n\n**-NSString Copy-**\n**orignalStr : Hello**\n**copyStr : Hello**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x100002060**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello**\n**copyStr : Hello World!**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x1004074d0**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff798**\n\n---\n\n**-NSArray Copy-**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**orignalArray value address: 0x1001016b0**\n**copyArray value address: 0x1001016b0**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff788**\n\n---\n\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† World**\n**)**\n**orignalArray value address: 0x1001016b0**\n**copyArray value address: 0x100300000**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÈÄöËøá copy ÊñπÊ≥ïÂ§çÂà∂ÂêéÁöÑÂâØÊú¨ÂØπË±°ÁöÑ value Âú∞ÂùÄÂíåÂéüÂØπË±°ÊòØ‰∏ÄÊ†∑ÁöÑÔºåÊâÄ‰ª•ÈíàÂØπ‰∏çÂèØÂèòÂØπË±°ÊòØÁî® copy ÊñπÊ≥ïÊòØÊµÖÂ§çÂà∂„ÄÇËÄå mutableCopy ÊñπÊ≥ïÂ§çÂà∂ÂêéÔºåÂâØÊú¨ÂØπË±°ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩÂíåÂéüÂØπË±°‰∏ç‰∏ÄÊ†∑‰∫ÜÔºåËØ¥Êòé mutableCopy ÊñπÊ≥ïÊòØÊ∑±Â§çÂà∂„ÄÇ\n\n**ÂàùÂßãÂØπË±°ÂèØÂèòÔºàÂ¶Ç NSMutableString„ÄÅNSMutableArray Á≠âÔºâ**\n\nË∞ÉÁî® copy ÊñπÊ≥ïÊòØ**Ê∑±Â§çÂà∂**ÔºåÂõ†‰∏∫ËøôÈáåÂâØÊú¨ÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Âè™ËÄÉËôëÂàùÂßãÂØπË±°ÊîπÂèò„ÄÇÂõ†‰∏∫ÊòØÊ∑±Â§çÂà∂ÔºåÂàùÂßãÂØπË±°Êó†ËÆ∫ÊÄé‰πàÊîπÂèòÔºåÂâØÊú¨ÁöÑÂÄºÈÉΩÊòØ‰∏çÂèòÁöÑ„ÄÇ\nË∞ÉÁî® mutableCopy ‰πüÊòØ**Ê∑±Â§çÂà∂**ÔºåÂ§çÂà∂ËøáÂêéÔºåÂâØÊú¨‰∏éÂàùÂßãÂØπË±°‰πãÈó¥ÁöÑÊîπÂèòÈÉΩÊòØÁã¨Á´ã‰∏çÂΩ±ÂìçÁöÑÔºåÂ¶ÇÂàùÂßãÂØπË±° str = ‚Äúexample‚ÄùÔºåstr+‚Äù append1‚ÄùÔºåÂâØÊú¨ str+‚Äù append2‚ÄùÔºåÊúÄÁªàËæìÂá∫ÁªìÊûú‰ºöÊòØÂàùÂßãÂØπË±°‰∏∫‚Äùexample append1‚ÄùÔºåÂâØÊú¨‰∏∫‚Äùexample append2‚Äù„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid mutableCopyTest()\n{\n¬† ¬† printf(\"-----MutableCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† [str1 appendString:@\" World\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str1 appendString:@\" + str1\"];\n¬† ¬† [str3 appendString:@\" + str3\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† [arr1 addObject:@\"Word\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr1 addObject:@\"+arr1\"];\n¬† ¬† [arr3 addObject:@\"+arr3\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----MutableCopy Test-----**\n\n---\n\n**-NSString Copy-**\n**orignalStr : Hello World**\n**copyStr : Hello**\n**orignalStr value address: 0x100300080**\n**copyStr value address: 0x6f6c6c654855**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello World + str1**\n**copyStr : Hello World + str3**\n**orignalStr value address: 0x100300080**\n**copyStr value address: 0x100300320**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff798**\n\n---\n\n**-NSArray Copy-**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World!\",**\n**¬† ¬† Word**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**orignalArray value address: 0x100300000**\n**copyArray value address: 0x100300b00**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff788**\n\n---\n\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† Word,**\n**¬† ¬† \"+arr1\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† Word,**\n**¬† ¬† \"+arr3\"**\n**)**\n**orignalArray value address: 0x100300000**\n**copyArray value address: 0x100300e40**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nÈÄöËøáËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÂØπ‰∫éÂèØÂèòÂØπË±°ÔºåË∞ÉÁî® copy ‰∏é mutableCopy ÊñπÊ≥ïÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂõ†‰∏∫ÂâØÊú¨ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩ‰∏éÂéüÂØπË±°‰∏çÂêå„ÄÇ\n\n`Ê≥®ÔºöÂØπ‰∫éÁΩë‰∏äÊüê‰∫õËß£ÈáäËØ¥NSArray/NSMutableArray NSDictionary/NSMutableDictionaryÂè™ÊúâÊµÖÂ§çÂà∂ÔºåËøôÈáåËÆ§‰∏∫ÂØπ‰∫éÂØπË±°Êú¨Ë∫´Êù•ËØ¥Ë∞ÉÁî®mutableCopyÊàñÂØπ‰∫éÂèØÂèòÂØπË±°Ë∞ÉÁî®copyÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂè™ËÉΩËØ¥ÂØπ‰∫éÊï∞ÁªÑÂíåÂ≠óÂÖ∏ËøôÁßçÂ§çÂêàÁªìÊûÑÊ∑±Â§çÂà∂Êìç‰ΩúÂè™ÊòØ‰ΩúÁî®Âà∞Â§ñÂ±ÇÂØπË±°ÔºåÂÜÖÈÉ®Â¶ÇÊûúËøòÊúâÂèØÂèòÂØπË±°Ôºå‰ªÖ‰ªÖÂ∞±ÊòØÂºïÁî®ÁöÑÂ§çÂà∂„ÄÇÔºà‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠ÂØπ‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰ΩúÂèØ‰ª•ÂæàÊ∏ÖÊ•öÁöÑÁúãÂá∫Êù•„ÄÇÂç≥‰ΩøÊòØÂØπÊï∞ÁªÑÁöÑÊ∑±Â§çÂà∂ÔºåÁÑ∂ËÄåÊîπÂèòÁ¨¨‰∏Ä‰∏™ÂèØÂèòÂ≠óÁ¨¶‰∏≤ÔºåÊó†ËÆ∫ÊòØÂâØÊú¨Êï∞ÁªÑËøòÊòØÂéüÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÈÉΩÊîπÂèò‰∫Ü„ÄÇÔºâ`\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//¬† main.m\n//¬† CopyDemo\n//\n//¬† Created by Jiao Liu on 6/23/16.\n//¬† Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#import <Foundation/Foundation.h>\n\nvoid mutableCopyTest()\n{\n¬† ¬† printf(\"-----MutableCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† [str1 appendString:@\" World\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str1 appendString:@\" + str1\"];\n¬† ¬† [str3 appendString:@\" + str3\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† [arr1 addObject:@\"Word\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr1 addObject:@\"+arr1\"];\n¬† ¬† [arr3 addObject:@\"+arr3\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n\nvoid constCopyTest()\n{\n¬† ¬† printf(\"-----ConstCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str3 appendString:@\" World!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr3 addObject:@\"World\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n\nvoid assignTest()\n{\n¬† ¬† printf(\"-----Assign Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = str1;\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSMutableString *str4 = str3;\n¬† ¬† [str3 appendString:@\" World\"];\n¬† ¬† [str4 appendString:@\"!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str4 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str3);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str4);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str4);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@\"Hello\", nil];\n¬† ¬† NSMutableArray *arr2 = arr1;\n¬† ¬† [arr1 addObject:@\"World\"];\n¬† ¬† [arr2 addObject:@\"!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n}\n\nint main(int argc, const char * argv[]) {\n¬† ¬† @autoreleasepool {\n¬† ¬† ¬† ¬† // insert code here...\n¬† ¬† ¬† ¬† assignTest();\n¬† ¬† ¬† ¬† constCopyTest();\n¬† ¬† ¬† ¬† mutableCopyTest();\n¬† ¬† }\n¬† ¬† return 0;\n}\n```\n\n---\n\nÊú¨ÊñáÊúÄÊó©ÂèëÂ∏É‰∫éÈïøËôπËΩØÊúçÂÖ¨‰ºóÂè∑ÔºåÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÂéªÁúã‰∏Ä‰∏ãÔºö\n[ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂](http://mp.weixin.qq.com/s?__biz=MzAwMjkxNjYzNA==&mid=2247483852&idx=1&sn=9da01b2399427654ad12e36452f612c9&scene=23&srcid=0822iBXKqaGYwMOnRhVLxNVt#rd)\n","source":"_posts/ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂.md","raw":"---\ntitle: ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂\ndate: 2016-08-22 10:58:02\ntags: ÁßªÂä®Á´Ø\ncategories:\n  - Â∑•‰Ωú\n  - iOS\nthumbnail: http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n---\n\nÂú® OC ÁºñÁ®ã‰∏≠ÔºåÂ∏∏Â∏∏‰ºöÁî®Âà∞ÂØπÂØπË±°ÁöÑÂ§çÂà∂ÔºåÁÑ∂ÂêéÊìç‰ΩúÂâØÊú¨ÂØπË±°„ÄÇÁÑ∂ËÄåÂØπ‰∏éÂ∫îËØ•ÈÄâÊã©‰ΩïÁßçÂØπË±°Â§çÂà∂ÁöÑÊñπÂºèÔºåÂ§çÂà∂ÂêéÂâØÊú¨ÂØπË±°Êìç‰Ωú‰ºö‰∏ç‰ºöÂΩ±ÂìçÂéüÂßãÂØπË±°Á≠âÈóÆÈ¢òÔºåÊàë‰ª¨ÂæÄÂæÄÊ≤°ÊúâËøáÂ§öËÄÉËôëÔºåËÄåÊòØÂá≠ÂÄüÁªèÈ™åÂú®ÁºñÁ†Å„ÄÇÊé•‰∏ãÊù•Â∞±ÂØπ OC ‰∏≠ÂØπË±°Â§çÂà∂Êú∫Âà∂ËøõË°åÂâñÊûêÔºåÈÄöËøáÂØπÂ§çÂà∂Êú∫Âà∂ÁöÑÁ†îÁ©∂ÂèØ‰ª•Âú®ÁºñÁ†Å‰∏≠ÂØπÂØπË±°ÁöÑÂ§çÂà∂Êõ¥Âä†Ê∏∏ÂàÉÊúâ‰Ωô„ÄÇ\n\nÈ¶ñÂÖàÔºåÂú® OC ‰∏≠Â§çÂà∂ÂàÜ‰∏∫Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂Ôºå‰∏Ä‰∏™ÊØîËæÉËÆ§ÂèØÁöÑÂÆö‰πâÊòØÔºö\n\n> **Ê∑±Â§çÂà∂Ôºö**Â§çÂà∂ÂØπË±°ÂºïÁî®‰∏éÂØπË±°Êú¨Ë∫´„ÄÇ¬†\n> **ÊµÖÂ§çÂà∂Ôºö**Âè™Â§çÂà∂ÂØπË±°ÂºïÁî®„ÄÇ\n\n<!-- more -->\n\n![](http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n---\n\n**ÈÇ£‰πàÂì™‰∫õÊìç‰ΩúÊâçÊòØÊµÖÂ§çÂà∂ÔºåÂì™‰∫õÊìç‰ΩúÊòØÊ∑±Â§çÂà∂Ôºü**\n\nÊâÄÊúâÁöÑÂØπË±°Èó¥ËµãÂÄºÊìç‰ΩúÈÉΩÊòØ**ÊµÖÂ§çÂà∂**Ôºå‰ªÖ‰ªÖÂ§çÂà∂‰∫ÜÂºïÁî®„ÄÇÂ¶Ç CopyStr = Str1ÔºåËøôÈáå CopyStr Âíå Str1 ÊåáÂêëÁöÑÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄÔºåÊîπÂèò‰∏§ËÄÖ‰πãÈó¥‰ªª‰Ωï‰∏Ä‰∏™ÂÄºÔºåÂè¶‰∏Ä‰∏™ÈÉΩ‰ºöÈöè‰πãÊîπÂèò„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid assignTest()\n{\n¬† ¬† printf(\"-----Assign Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = str1;\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSMutableString *str4 = str3;\n¬† ¬† [str3 appendString:@\" World\"];\n¬† ¬† [str4 appendString:@\"!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str4 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str3);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str4);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str4);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@\"Hello\", nil];\n¬† ¬† NSMutableArray *arr2 = arr1;\n¬† ¬† [arr1 addObject:@\"World\"];\n¬† ¬† [arr2 addObject:@\"!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----Assign Test-----**\n\n---\n\n**orignalStr : Hello**\n**copyStr : Hello**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x100002060**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello World!**\n**copyStr : Hello World!**\n**orignalStr value address: 0x1002005c0**\n**copyStr value address: 0x1002005c0**\n**orignalStr pointer address: 0x7fff5fbff798**\n**copyStr pointer address: 0x7fff5fbff790**\n\n---\n\n**2016-08-22 11:35:20.312 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† Hello,**\n**¬† ¬† World,**\n**¬† ¬† \"!\"**\n**)**\n**2016-08-22 11:35:20.313 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† Hello,**\n**¬† ¬† World,**\n**¬† ¬† \"!\"**\n**)**\n**orignalArray value address: 0x100406910**\n**copyArray value address: 0x100406910**\n**orignalArray pointer address: 0x7fff5fbff788**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nÈÄöËøá‰∏äÈù¢ÁªìÊûúÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ôºåvalue ÁöÑÂú∞ÂùÄÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑÔºåËÄå pointer ÁöÑÂú∞ÂùÄÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåËøôÂ∞±ËØ¥Êòé‰∫ÜËµãÂÄºÊìç‰ΩúÊòØÊµÖÂ§çÂà∂ÔºåÂè™ÊòØÁîüÊàê‰∏§‰ªΩÂØπË±°ÁöÑÂºïÁî®ÔºåËÄåÂØπË±°Êú¨Ë∫´ËøòÊòØÂêå‰∏Ä‰ªΩ„ÄÇÂéüÂØπË±°ÂÄºÂíåÂâØÊú¨ÂØπË±°ÁöÑÂÄºÊìç‰ΩúÊòØÁõ∏‰∫íÂΩ±ÂìçÁöÑ„ÄÇ\n\n---\n\n**ÈÇ£‰πà OC ‰∏≠Â¶Ç‰ΩïÂÆûÁé∞Ê∑±Â§çÂà∂Âë¢Ôºü¬†**\n\nOC ‰∏≠Ê∑±Â§çÂà∂ÊòØÈÄöËøá copy ‰∏é mutableCopy ÊñπÊ≥ïÂÆûÁé∞Ôºà‰ΩÜ‰∏çÊòØÈÉΩËÉΩËææÂà∞Ê∑±Â§çÂà∂ÁöÑÁõÆÁöÑÔºâÔºåÈÄöËøá copy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÈÄöËøá mutableCopy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØÂèØÂèòÁöÑ„ÄÇÂ¶ÇÂàùÂßãÂØπË±°‰∏∫ NSString ‰∏é NSMutableStringÔºåÈÄöËøá copy ÂêéÂâØÊú¨ÈÉΩÊòØ NSStringÔºåËÄåÈÄöËøá mutableCopy ÂêéÈÉΩÊòØ NSMutableString„ÄÇ\nÊé•‰∏ãÊù•ÂàÜ‰∏§ÁßçÊÉÖÂÜµËÆ®ËÆ∫ copy ‰∏é mutableCopyÔºö\n\n**ÂàùÂßãÂØπË±°‰∏çÂèØÂèòÔºàÂ¶Ç NSString„ÄÅNSArray Á≠âÔºâ**\n\nË∞ÉÁî® copy ÊñπÊ≥ï‰πüÊòØ**ÊµÖÂ§çÂà∂**ÔºåÁ≠âÂêå‰∫éÁõ¥Êé•ËµãÂÄºÔºåÂõ†‰∏∫Â§çÂà∂ËøáÂêéÁöÑÂâØÊú¨ÂíåÂéüÊù•ÁöÑÂØπË±°ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Ë∞ÉÁî® copy Êú¨Ë¥®Â∞±ÊòØËµãÂÄºÊìç‰ΩúÔºåÂ§çÂà∂‰∫ÜÂºïÁî®Ôºå‰ΩÜÊòØÈÉΩÊåáÂêëÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇ\nË∞ÉÁî® mutableCopy ÊòØ**Ê∑±Â§çÂà∂**ÔºåÂâØÊú¨Êàê‰∏∫‰∫ÜÂèØÂèòÂØπË±°Ôºå‰ΩÜÊòØÊìç‰ΩúÂâØÊú¨ÔºåÂØπÂàùÂßãÂØπË±°ÁöÑÂÄº‰∏ç‰ºö‰∫ßÁîüÂΩ±Âìç„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid constCopyTest()\n{\n¬† ¬† printf(\"-----ConstCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str3 appendString:@\" World!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr3 addObject:@\"World\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----ConstCopy Test-----**\n\n---\n\n**-NSString Copy-**\n**orignalStr : Hello**\n**copyStr : Hello**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x100002060**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello**\n**copyStr : Hello World!**\n**orignalStr value address: 0x100002060**\n**copyStr value address: 0x1004074d0**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff798**\n\n---\n\n**-NSArray Copy-**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**orignalArray value address: 0x1001016b0**\n**copyArray value address: 0x1001016b0**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff788**\n\n---\n\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† World**\n**)**\n**orignalArray value address: 0x1001016b0**\n**copyArray value address: 0x100300000**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÈÄöËøá copy ÊñπÊ≥ïÂ§çÂà∂ÂêéÁöÑÂâØÊú¨ÂØπË±°ÁöÑ value Âú∞ÂùÄÂíåÂéüÂØπË±°ÊòØ‰∏ÄÊ†∑ÁöÑÔºåÊâÄ‰ª•ÈíàÂØπ‰∏çÂèØÂèòÂØπË±°ÊòØÁî® copy ÊñπÊ≥ïÊòØÊµÖÂ§çÂà∂„ÄÇËÄå mutableCopy ÊñπÊ≥ïÂ§çÂà∂ÂêéÔºåÂâØÊú¨ÂØπË±°ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩÂíåÂéüÂØπË±°‰∏ç‰∏ÄÊ†∑‰∫ÜÔºåËØ¥Êòé mutableCopy ÊñπÊ≥ïÊòØÊ∑±Â§çÂà∂„ÄÇ\n\n**ÂàùÂßãÂØπË±°ÂèØÂèòÔºàÂ¶Ç NSMutableString„ÄÅNSMutableArray Á≠âÔºâ**\n\nË∞ÉÁî® copy ÊñπÊ≥ïÊòØ**Ê∑±Â§çÂà∂**ÔºåÂõ†‰∏∫ËøôÈáåÂâØÊú¨ÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Âè™ËÄÉËôëÂàùÂßãÂØπË±°ÊîπÂèò„ÄÇÂõ†‰∏∫ÊòØÊ∑±Â§çÂà∂ÔºåÂàùÂßãÂØπË±°Êó†ËÆ∫ÊÄé‰πàÊîπÂèòÔºåÂâØÊú¨ÁöÑÂÄºÈÉΩÊòØ‰∏çÂèòÁöÑ„ÄÇ\nË∞ÉÁî® mutableCopy ‰πüÊòØ**Ê∑±Â§çÂà∂**ÔºåÂ§çÂà∂ËøáÂêéÔºåÂâØÊú¨‰∏éÂàùÂßãÂØπË±°‰πãÈó¥ÁöÑÊîπÂèòÈÉΩÊòØÁã¨Á´ã‰∏çÂΩ±ÂìçÁöÑÔºåÂ¶ÇÂàùÂßãÂØπË±° str = ‚Äúexample‚ÄùÔºåstr+‚Äù append1‚ÄùÔºåÂâØÊú¨ str+‚Äù append2‚ÄùÔºåÊúÄÁªàËæìÂá∫ÁªìÊûú‰ºöÊòØÂàùÂßãÂØπË±°‰∏∫‚Äùexample append1‚ÄùÔºåÂâØÊú¨‰∏∫‚Äùexample append2‚Äù„ÄÇ\n\nËØï‰æã‰ª£Á†ÅÔºö\n\n```\nvoid mutableCopyTest()\n{\n¬† ¬† printf(\"-----MutableCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† [str1 appendString:@\" World\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str1 appendString:@\" + str1\"];\n¬† ¬† [str3 appendString:@\" + str3\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† [arr1 addObject:@\"Word\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr1 addObject:@\"+arr1\"];\n¬† ¬† [arr3 addObject:@\"+arr3\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n```\n\nËæìÂá∫ÁªìÊûúÔºö\n\n> **-----MutableCopy Test-----**\n\n---\n\n**-NSString Copy-**\n**orignalStr : Hello World**\n**copyStr : Hello**\n**orignalStr value address: 0x100300080**\n**copyStr value address: 0x6f6c6c654855**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff7a0**\n\n---\n\n**orignalStr : Hello World + str1**\n**copyStr : Hello World + str3**\n**orignalStr value address: 0x100300080**\n**copyStr value address: 0x100300320**\n**orignalStr pointer address: 0x7fff5fbff7a8**\n**copyStr pointer address: 0x7fff5fbff798**\n\n---\n\n**-NSArray Copy-**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World!\",**\n**¬† ¬† Word**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World!\"**\n**)**\n**orignalArray value address: 0x100300000**\n**copyArray value address: 0x100300b00**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff788**\n\n---\n\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† Word,**\n**¬† ¬† \"+arr1\"**\n**)**\n**2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (**\n**¬† ¬† \"Hello World! + str1 + str3\",**\n**¬† ¬† Word,**\n**¬† ¬† \"+arr3\"**\n**)**\n**orignalArray value address: 0x100300000**\n**copyArray value address: 0x100300e40**\n**orignalArray pointer address: 0x7fff5fbff790**\n**copyArray pointer address: 0x7fff5fbff780**\n\n---\n\nÈÄöËøáËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÂØπ‰∫éÂèØÂèòÂØπË±°ÔºåË∞ÉÁî® copy ‰∏é mutableCopy ÊñπÊ≥ïÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂõ†‰∏∫ÂâØÊú¨ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩ‰∏éÂéüÂØπË±°‰∏çÂêå„ÄÇ\n\n`Ê≥®ÔºöÂØπ‰∫éÁΩë‰∏äÊüê‰∫õËß£ÈáäËØ¥NSArray/NSMutableArray NSDictionary/NSMutableDictionaryÂè™ÊúâÊµÖÂ§çÂà∂ÔºåËøôÈáåËÆ§‰∏∫ÂØπ‰∫éÂØπË±°Êú¨Ë∫´Êù•ËØ¥Ë∞ÉÁî®mutableCopyÊàñÂØπ‰∫éÂèØÂèòÂØπË±°Ë∞ÉÁî®copyÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂè™ËÉΩËØ¥ÂØπ‰∫éÊï∞ÁªÑÂíåÂ≠óÂÖ∏ËøôÁßçÂ§çÂêàÁªìÊûÑÊ∑±Â§çÂà∂Êìç‰ΩúÂè™ÊòØ‰ΩúÁî®Âà∞Â§ñÂ±ÇÂØπË±°ÔºåÂÜÖÈÉ®Â¶ÇÊûúËøòÊúâÂèØÂèòÂØπË±°Ôºå‰ªÖ‰ªÖÂ∞±ÊòØÂºïÁî®ÁöÑÂ§çÂà∂„ÄÇÔºà‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠ÂØπ‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰ΩúÂèØ‰ª•ÂæàÊ∏ÖÊ•öÁöÑÁúãÂá∫Êù•„ÄÇÂç≥‰ΩøÊòØÂØπÊï∞ÁªÑÁöÑÊ∑±Â§çÂà∂ÔºåÁÑ∂ËÄåÊîπÂèòÁ¨¨‰∏Ä‰∏™ÂèØÂèòÂ≠óÁ¨¶‰∏≤ÔºåÊó†ËÆ∫ÊòØÂâØÊú¨Êï∞ÁªÑËøòÊòØÂéüÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÈÉΩÊîπÂèò‰∫Ü„ÄÇÔºâ`\n\nÂÆåÊï¥‰ª£Á†ÅÔºö\n\n```\n//\n//¬† main.m\n//¬† CopyDemo\n//\n//¬† Created by Jiao Liu on 6/23/16.\n//¬† Copyright ¬© 2016 ChangHong. All rights reserved.\n//\n\n#import <Foundation/Foundation.h>\n\nvoid mutableCopyTest()\n{\n¬† ¬† printf(\"-----MutableCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† [str1 appendString:@\" World\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str1 appendString:@\" + str1\"];\n¬† ¬† [str3 appendString:@\" + str3\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† [arr1 addObject:@\"Word\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr1 addObject:@\"+arr1\"];\n¬† ¬† [arr3 addObject:@\"+arr3\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n\nvoid constCopyTest()\n{\n¬† ¬† printf(\"-----ConstCopy Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSString Copy-\\n\");\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = [str1 copy];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [str1 mutableCopy];\n¬† ¬† [str3 appendString:@\" World!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str3);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† printf(\"-NSArray Copy-\\n\");\n¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@\"Hello\"], nil];\n¬† ¬† NSArray *arr2 = [arr1 copy];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" World!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];\n¬† ¬† [arr3 addObject:@\"World\"];\n¬† ¬† [[arr1 objectAtIndex:0] appendString:@\" + str1\"];\n¬† ¬† [[arr3 objectAtIndex:0] appendString:@\" + str3\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr3);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr3);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr3);\n¬† ¬† printf(\"\\n\");\n}\n\nvoid assignTest()\n{\n¬† ¬† printf(\"-----Assign Test-----\\n\\n\");\n¬†¬† ¬†\n¬† ¬† NSString *str1 = @\"Hello\";\n¬† ¬† NSString *str2 = str1;\n¬† ¬† printf(\"orignalStr : %s\\n\",[str1 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str2 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str1);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str2);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str1);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str2);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@\"Hello\"];\n¬† ¬† NSMutableString *str4 = str3;\n¬† ¬† [str3 appendString:@\" World\"];\n¬† ¬† [str4 appendString:@\"!\"];\n¬† ¬† printf(\"orignalStr : %s\\n\",[str3 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"copyStr : %s\\n\",[str4 cStringUsingEncoding:NSUTF8StringEncoding]);\n¬† ¬† printf(\"orignalStr value address: %p\\n\",str3);\n¬† ¬† printf(\"copyStr value address: %p\\n\",str4);\n¬† ¬† printf(\"orignalStr pointer address: %p\\n\",&str3);\n¬† ¬† printf(\"copyStr pointer address: %p\\n\",&str4);\n¬† ¬† printf(\"\\n\");\n¬†¬† ¬†\n¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@\"Hello\", nil];\n¬† ¬† NSMutableArray *arr2 = arr1;\n¬† ¬† [arr1 addObject:@\"World\"];\n¬† ¬† [arr2 addObject:@\"!\"];\n¬† ¬† NSLog(@\"orignalArray : %@\",arr1);\n¬† ¬† NSLog(@\"copyArray : %@\",arr2);\n¬† ¬† printf(\"orignalArray value address: %p\\n\",arr1);\n¬† ¬† printf(\"copyArray value address: %p\\n\",arr2);\n¬† ¬† printf(\"orignalArray pointer address: %p\\n\",&arr1);\n¬† ¬† printf(\"copyArray pointer address: %p\\n\",&arr2);\n¬† ¬† printf(\"\\n\");\n}\n\nint main(int argc, const char * argv[]) {\n¬† ¬† @autoreleasepool {\n¬† ¬† ¬† ¬† // insert code here...\n¬† ¬† ¬† ¬† assignTest();\n¬† ¬† ¬† ¬† constCopyTest();\n¬† ¬† ¬† ¬† mutableCopyTest();\n¬† ¬† }\n¬† ¬† return 0;\n}\n```\n\n---\n\nÊú¨ÊñáÊúÄÊó©ÂèëÂ∏É‰∫éÈïøËôπËΩØÊúçÂÖ¨‰ºóÂè∑ÔºåÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÂéªÁúã‰∏Ä‰∏ãÔºö\n[ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂](http://mp.weixin.qq.com/s?__biz=MzAwMjkxNjYzNA==&mid=2247483852&idx=1&sn=9da01b2399427654ad12e36452f612c9&scene=23&srcid=0822iBXKqaGYwMOnRhVLxNVt#rd)\n","slug":"ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂","published":1,"updated":"2019-01-08T05:33:04.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjscxlpjh002vhqoxpdgexiir","content":"<p>Âú® OC ÁºñÁ®ã‰∏≠ÔºåÂ∏∏Â∏∏‰ºöÁî®Âà∞ÂØπÂØπË±°ÁöÑÂ§çÂà∂ÔºåÁÑ∂ÂêéÊìç‰ΩúÂâØÊú¨ÂØπË±°„ÄÇÁÑ∂ËÄåÂØπ‰∏éÂ∫îËØ•ÈÄâÊã©‰ΩïÁßçÂØπË±°Â§çÂà∂ÁöÑÊñπÂºèÔºåÂ§çÂà∂ÂêéÂâØÊú¨ÂØπË±°Êìç‰Ωú‰ºö‰∏ç‰ºöÂΩ±ÂìçÂéüÂßãÂØπË±°Á≠âÈóÆÈ¢òÔºåÊàë‰ª¨ÂæÄÂæÄÊ≤°ÊúâËøáÂ§öËÄÉËôëÔºåËÄåÊòØÂá≠ÂÄüÁªèÈ™åÂú®ÁºñÁ†Å„ÄÇÊé•‰∏ãÊù•Â∞±ÂØπ OC ‰∏≠ÂØπË±°Â§çÂà∂Êú∫Âà∂ËøõË°åÂâñÊûêÔºåÈÄöËøáÂØπÂ§çÂà∂Êú∫Âà∂ÁöÑÁ†îÁ©∂ÂèØ‰ª•Âú®ÁºñÁ†Å‰∏≠ÂØπÂØπË±°ÁöÑÂ§çÂà∂Êõ¥Âä†Ê∏∏ÂàÉÊúâ‰Ωô„ÄÇ</p>\n<p>È¶ñÂÖàÔºåÂú® OC ‰∏≠Â§çÂà∂ÂàÜ‰∏∫Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂Ôºå‰∏Ä‰∏™ÊØîËæÉËÆ§ÂèØÁöÑÂÆö‰πâÊòØÔºö</p>\n<blockquote>\n<p>**Ê∑±Â§çÂà∂Ôºö**Â§çÂà∂ÂØπË±°ÂºïÁî®‰∏éÂØπË±°Êú¨Ë∫´„ÄÇ¬†<br>\n**ÊµÖÂ§çÂà∂Ôºö**Âè™Â§çÂà∂ÂØπË±°ÂºïÁî®„ÄÇ</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p><strong>ÈÇ£‰πàÂì™‰∫õÊìç‰ΩúÊâçÊòØÊµÖÂ§çÂà∂ÔºåÂì™‰∫õÊìç‰ΩúÊòØÊ∑±Â§çÂà∂Ôºü</strong></p>\n<p>ÊâÄÊúâÁöÑÂØπË±°Èó¥ËµãÂÄºÊìç‰ΩúÈÉΩÊòØ<strong>ÊµÖÂ§çÂà∂</strong>Ôºå‰ªÖ‰ªÖÂ§çÂà∂‰∫ÜÂºïÁî®„ÄÇÂ¶Ç CopyStr = Str1ÔºåËøôÈáå CopyStr Âíå Str1 ÊåáÂêëÁöÑÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄÔºåÊîπÂèò‰∏§ËÄÖ‰πãÈó¥‰ªª‰Ωï‰∏Ä‰∏™ÂÄºÔºåÂè¶‰∏Ä‰∏™ÈÉΩ‰ºöÈöè‰πãÊîπÂèò„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void assignTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----Assign Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = str1;</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSMutableString *str4 = str3;</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† [str4 appendString:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str4 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@&quot;Hello&quot;, nil];</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr2 = arr1;</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [arr2 addObject:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----Assign Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x100002060</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello World!</strong><br>\n<strong>copyStr : Hello World!</strong><br>\n<strong>orignalStr value address: 0x1002005c0</strong><br>\n<strong>copyStr value address: 0x1002005c0</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff798</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff790</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.312 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† Hello,**<br>\n**¬† ¬† World,**<br>\n**¬† ¬† ‚Äú!‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.313 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† Hello,**<br>\n**¬† ¬† World,**<br>\n**¬† ¬† ‚Äú!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100406910</strong><br>\n<strong>copyArray value address: 0x100406910</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff788</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ÈÄöËøá‰∏äÈù¢ÁªìÊûúÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ôºåvalue ÁöÑÂú∞ÂùÄÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑÔºåËÄå pointer ÁöÑÂú∞ÂùÄÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåËøôÂ∞±ËØ¥Êòé‰∫ÜËµãÂÄºÊìç‰ΩúÊòØÊµÖÂ§çÂà∂ÔºåÂè™ÊòØÁîüÊàê‰∏§‰ªΩÂØπË±°ÁöÑÂºïÁî®ÔºåËÄåÂØπË±°Êú¨Ë∫´ËøòÊòØÂêå‰∏Ä‰ªΩ„ÄÇÂéüÂØπË±°ÂÄºÂíåÂâØÊú¨ÂØπË±°ÁöÑÂÄºÊìç‰ΩúÊòØÁõ∏‰∫íÂΩ±ÂìçÁöÑ„ÄÇ</p>\n<hr>\n<p>**ÈÇ£‰πà OC ‰∏≠Â¶Ç‰ΩïÂÆûÁé∞Ê∑±Â§çÂà∂Âë¢Ôºü¬†**</p>\n<p>OC ‰∏≠Ê∑±Â§çÂà∂ÊòØÈÄöËøá copy ‰∏é mutableCopy ÊñπÊ≥ïÂÆûÁé∞Ôºà‰ΩÜ‰∏çÊòØÈÉΩËÉΩËææÂà∞Ê∑±Â§çÂà∂ÁöÑÁõÆÁöÑÔºâÔºåÈÄöËøá copy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÈÄöËøá mutableCopy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØÂèØÂèòÁöÑ„ÄÇÂ¶ÇÂàùÂßãÂØπË±°‰∏∫ NSString ‰∏é NSMutableStringÔºåÈÄöËøá copy ÂêéÂâØÊú¨ÈÉΩÊòØ NSStringÔºåËÄåÈÄöËøá mutableCopy ÂêéÈÉΩÊòØ NSMutableString„ÄÇ<br>\nÊé•‰∏ãÊù•ÂàÜ‰∏§ÁßçÊÉÖÂÜµËÆ®ËÆ∫ copy ‰∏é mutableCopyÔºö</p>\n<p><strong>ÂàùÂßãÂØπË±°‰∏çÂèØÂèòÔºàÂ¶Ç NSString„ÄÅNSArray Á≠âÔºâ</strong></p>\n<p>Ë∞ÉÁî® copy ÊñπÊ≥ï‰πüÊòØ<strong>ÊµÖÂ§çÂà∂</strong>ÔºåÁ≠âÂêå‰∫éÁõ¥Êé•ËµãÂÄºÔºåÂõ†‰∏∫Â§çÂà∂ËøáÂêéÁöÑÂâØÊú¨ÂíåÂéüÊù•ÁöÑÂØπË±°ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Ë∞ÉÁî® copy Êú¨Ë¥®Â∞±ÊòØËµãÂÄºÊìç‰ΩúÔºåÂ§çÂà∂‰∫ÜÂºïÁî®Ôºå‰ΩÜÊòØÈÉΩÊåáÂêëÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇ<br>\nË∞ÉÁî® mutableCopy ÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂâØÊú¨Êàê‰∏∫‰∫ÜÂèØÂèòÂØπË±°Ôºå‰ΩÜÊòØÊìç‰ΩúÂâØÊú¨ÔºåÂØπÂàùÂßãÂØπË±°ÁöÑÂÄº‰∏ç‰ºö‰∫ßÁîüÂΩ±Âìç„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void constCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----ConstCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----ConstCopy Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>-NSString Copy-</strong><br>\n<strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x100002060</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello World!</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x1004074d0</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff798</strong></p>\n<hr>\n<p><strong>-NSArray Copy-</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x1001016b0</strong><br>\n<strong>copyArray value address: 0x1001016b0</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff788</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† World**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x1001016b0</strong><br>\n<strong>copyArray value address: 0x100300000</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÈÄöËøá copy ÊñπÊ≥ïÂ§çÂà∂ÂêéÁöÑÂâØÊú¨ÂØπË±°ÁöÑ value Âú∞ÂùÄÂíåÂéüÂØπË±°ÊòØ‰∏ÄÊ†∑ÁöÑÔºåÊâÄ‰ª•ÈíàÂØπ‰∏çÂèØÂèòÂØπË±°ÊòØÁî® copy ÊñπÊ≥ïÊòØÊµÖÂ§çÂà∂„ÄÇËÄå mutableCopy ÊñπÊ≥ïÂ§çÂà∂ÂêéÔºåÂâØÊú¨ÂØπË±°ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩÂíåÂéüÂØπË±°‰∏ç‰∏ÄÊ†∑‰∫ÜÔºåËØ¥Êòé mutableCopy ÊñπÊ≥ïÊòØÊ∑±Â§çÂà∂„ÄÇ</p>\n<p><strong>ÂàùÂßãÂØπË±°ÂèØÂèòÔºàÂ¶Ç NSMutableString„ÄÅNSMutableArray Á≠âÔºâ</strong></p>\n<p>Ë∞ÉÁî® copy ÊñπÊ≥ïÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂõ†‰∏∫ËøôÈáåÂâØÊú¨ÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Âè™ËÄÉËôëÂàùÂßãÂØπË±°ÊîπÂèò„ÄÇÂõ†‰∏∫ÊòØÊ∑±Â§çÂà∂ÔºåÂàùÂßãÂØπË±°Êó†ËÆ∫ÊÄé‰πàÊîπÂèòÔºåÂâØÊú¨ÁöÑÂÄºÈÉΩÊòØ‰∏çÂèòÁöÑ„ÄÇ<br>\nË∞ÉÁî® mutableCopy ‰πüÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂ§çÂà∂ËøáÂêéÔºåÂâØÊú¨‰∏éÂàùÂßãÂØπË±°‰πãÈó¥ÁöÑÊîπÂèòÈÉΩÊòØÁã¨Á´ã‰∏çÂΩ±ÂìçÁöÑÔºåÂ¶ÇÂàùÂßãÂØπË±° str = ‚Äúexample‚ÄùÔºåstr+‚Äù append1‚ÄùÔºåÂâØÊú¨ str+‚Äù append2‚ÄùÔºåÊúÄÁªàËæìÂá∫ÁªìÊûú‰ºöÊòØÂàùÂßãÂØπË±°‰∏∫‚Äùexample append1‚ÄùÔºåÂâØÊú¨‰∏∫‚Äùexample append2‚Äù„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void mutableCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----MutableCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;Word&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;+arr1&quot;];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;+arr3&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----MutableCopy Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>-NSString Copy-</strong><br>\n<strong>orignalStr : Hello World</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100300080</strong><br>\n<strong>copyStr value address: 0x6f6c6c654855</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello World + str1</strong><br>\n<strong>copyStr : Hello World + str3</strong><br>\n<strong>orignalStr value address: 0x100300080</strong><br>\n<strong>copyStr value address: 0x100300320</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff798</strong></p>\n<hr>\n<p><strong>-NSArray Copy-</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù,**<br>\n**¬† ¬† Word**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100300000</strong><br>\n<strong>copyArray value address: 0x100300b00</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff788</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† Word,**<br>\n**¬† ¬† ‚Äú+arr1‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† Word,**<br>\n**¬† ¬† ‚Äú+arr3‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100300000</strong><br>\n<strong>copyArray value address: 0x100300e40</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ÈÄöËøáËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÂØπ‰∫éÂèØÂèòÂØπË±°ÔºåË∞ÉÁî® copy ‰∏é mutableCopy ÊñπÊ≥ïÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂõ†‰∏∫ÂâØÊú¨ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩ‰∏éÂéüÂØπË±°‰∏çÂêå„ÄÇ</p>\n<p><code>Ê≥®ÔºöÂØπ‰∫éÁΩë‰∏äÊüê‰∫õËß£ÈáäËØ¥NSArray/NSMutableArray NSDictionary/NSMutableDictionaryÂè™ÊúâÊµÖÂ§çÂà∂ÔºåËøôÈáåËÆ§‰∏∫ÂØπ‰∫éÂØπË±°Êú¨Ë∫´Êù•ËØ¥Ë∞ÉÁî®mutableCopyÊàñÂØπ‰∫éÂèØÂèòÂØπË±°Ë∞ÉÁî®copyÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂè™ËÉΩËØ¥ÂØπ‰∫éÊï∞ÁªÑÂíåÂ≠óÂÖ∏ËøôÁßçÂ§çÂêàÁªìÊûÑÊ∑±Â§çÂà∂Êìç‰ΩúÂè™ÊòØ‰ΩúÁî®Âà∞Â§ñÂ±ÇÂØπË±°ÔºåÂÜÖÈÉ®Â¶ÇÊûúËøòÊúâÂèØÂèòÂØπË±°Ôºå‰ªÖ‰ªÖÂ∞±ÊòØÂºïÁî®ÁöÑÂ§çÂà∂„ÄÇÔºà‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠ÂØπ‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰ΩúÂèØ‰ª•ÂæàÊ∏ÖÊ•öÁöÑÁúãÂá∫Êù•„ÄÇÂç≥‰ΩøÊòØÂØπÊï∞ÁªÑÁöÑÊ∑±Â§çÂà∂ÔºåÁÑ∂ËÄåÊîπÂèòÁ¨¨‰∏Ä‰∏™ÂèØÂèòÂ≠óÁ¨¶‰∏≤ÔºåÊó†ËÆ∫ÊòØÂâØÊú¨Êï∞ÁªÑËøòÊòØÂéüÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÈÉΩÊîπÂèò‰∫Ü„ÄÇÔºâ</code></p>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//¬† main.m</span><br><span class=\"line\">//¬† CopyDemo</span><br><span class=\"line\">//</span><br><span class=\"line\">//¬† Created by Jiao Liu on 6/23/16.</span><br><span class=\"line\">//¬† Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void mutableCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----MutableCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;Word&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;+arr1&quot;];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;+arr3&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void constCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----ConstCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void assignTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----Assign Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = str1;</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSMutableString *str4 = str3;</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† [str4 appendString:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str4 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@&quot;Hello&quot;, nil];</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr2 = arr1;</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [arr2 addObject:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">¬† ¬† @autoreleasepool &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† // insert code here...</span><br><span class=\"line\">¬† ¬† ¬† ¬† assignTest();</span><br><span class=\"line\">¬† ¬† ¬† ¬† constCopyTest();</span><br><span class=\"line\">¬† ¬† ¬† ¬† mutableCopyTest();</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>Êú¨ÊñáÊúÄÊó©ÂèëÂ∏É‰∫éÈïøËôπËΩØÊúçÂÖ¨‰ºóÂè∑ÔºåÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÂéªÁúã‰∏Ä‰∏ãÔºö<br>\n<a href=\"http://mp.weixin.qq.com/s?__biz=MzAwMjkxNjYzNA==&amp;mid=2247483852&amp;idx=1&amp;sn=9da01b2399427654ad12e36452f612c9&amp;scene=23&amp;srcid=0822iBXKqaGYwMOnRhVLxNVt#rd\" target=\"_blank\" rel=\"noopener\">ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂</a></p>\n","site":{"data":{}},"excerpt":"<p>Âú® OC ÁºñÁ®ã‰∏≠ÔºåÂ∏∏Â∏∏‰ºöÁî®Âà∞ÂØπÂØπË±°ÁöÑÂ§çÂà∂ÔºåÁÑ∂ÂêéÊìç‰ΩúÂâØÊú¨ÂØπË±°„ÄÇÁÑ∂ËÄåÂØπ‰∏éÂ∫îËØ•ÈÄâÊã©‰ΩïÁßçÂØπË±°Â§çÂà∂ÁöÑÊñπÂºèÔºåÂ§çÂà∂ÂêéÂâØÊú¨ÂØπË±°Êìç‰Ωú‰ºö‰∏ç‰ºöÂΩ±ÂìçÂéüÂßãÂØπË±°Á≠âÈóÆÈ¢òÔºåÊàë‰ª¨ÂæÄÂæÄÊ≤°ÊúâËøáÂ§öËÄÉËôëÔºåËÄåÊòØÂá≠ÂÄüÁªèÈ™åÂú®ÁºñÁ†Å„ÄÇÊé•‰∏ãÊù•Â∞±ÂØπ OC ‰∏≠ÂØπË±°Â§çÂà∂Êú∫Âà∂ËøõË°åÂâñÊûêÔºåÈÄöËøáÂØπÂ§çÂà∂Êú∫Âà∂ÁöÑÁ†îÁ©∂ÂèØ‰ª•Âú®ÁºñÁ†Å‰∏≠ÂØπÂØπË±°ÁöÑÂ§çÂà∂Êõ¥Âä†Ê∏∏ÂàÉÊúâ‰Ωô„ÄÇ</p>\n<p>È¶ñÂÖàÔºåÂú® OC ‰∏≠Â§çÂà∂ÂàÜ‰∏∫Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂Ôºå‰∏Ä‰∏™ÊØîËæÉËÆ§ÂèØÁöÑÂÆö‰πâÊòØÔºö</p>\n<blockquote>\n<p>**Ê∑±Â§çÂà∂Ôºö**Â§çÂà∂ÂØπË±°ÂºïÁî®‰∏éÂØπË±°Êú¨Ë∫´„ÄÇ¬†<br>\n**ÊµÖÂ§çÂà∂Ôºö**Âè™Â§çÂà∂ÂØπË±°ÂºïÁî®„ÄÇ</p>\n</blockquote>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/2641798-03dca550cc87313d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p><strong>ÈÇ£‰πàÂì™‰∫õÊìç‰ΩúÊâçÊòØÊµÖÂ§çÂà∂ÔºåÂì™‰∫õÊìç‰ΩúÊòØÊ∑±Â§çÂà∂Ôºü</strong></p>\n<p>ÊâÄÊúâÁöÑÂØπË±°Èó¥ËµãÂÄºÊìç‰ΩúÈÉΩÊòØ<strong>ÊµÖÂ§çÂà∂</strong>Ôºå‰ªÖ‰ªÖÂ§çÂà∂‰∫ÜÂºïÁî®„ÄÇÂ¶Ç CopyStr = Str1ÔºåËøôÈáå CopyStr Âíå Str1 ÊåáÂêëÁöÑÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄÔºåÊîπÂèò‰∏§ËÄÖ‰πãÈó¥‰ªª‰Ωï‰∏Ä‰∏™ÂÄºÔºåÂè¶‰∏Ä‰∏™ÈÉΩ‰ºöÈöè‰πãÊîπÂèò„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void assignTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----Assign Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = str1;</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSMutableString *str4 = str3;</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† [str4 appendString:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str4 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@&quot;Hello&quot;, nil];</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr2 = arr1;</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [arr2 addObject:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----Assign Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x100002060</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello World!</strong><br>\n<strong>copyStr : Hello World!</strong><br>\n<strong>orignalStr value address: 0x1002005c0</strong><br>\n<strong>copyStr value address: 0x1002005c0</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff798</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff790</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.312 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† Hello,**<br>\n**¬† ¬† World,**<br>\n**¬† ¬† ‚Äú!‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.313 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† Hello,**<br>\n**¬† ¬† World,**<br>\n**¬† ¬† ‚Äú!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100406910</strong><br>\n<strong>copyArray value address: 0x100406910</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff788</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ÈÄöËøá‰∏äÈù¢ÁªìÊûúÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ôºåvalue ÁöÑÂú∞ÂùÄÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑÔºåËÄå pointer ÁöÑÂú∞ÂùÄÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåËøôÂ∞±ËØ¥Êòé‰∫ÜËµãÂÄºÊìç‰ΩúÊòØÊµÖÂ§çÂà∂ÔºåÂè™ÊòØÁîüÊàê‰∏§‰ªΩÂØπË±°ÁöÑÂºïÁî®ÔºåËÄåÂØπË±°Êú¨Ë∫´ËøòÊòØÂêå‰∏Ä‰ªΩ„ÄÇÂéüÂØπË±°ÂÄºÂíåÂâØÊú¨ÂØπË±°ÁöÑÂÄºÊìç‰ΩúÊòØÁõ∏‰∫íÂΩ±ÂìçÁöÑ„ÄÇ</p>\n<hr>\n<p>**ÈÇ£‰πà OC ‰∏≠Â¶Ç‰ΩïÂÆûÁé∞Ê∑±Â§çÂà∂Âë¢Ôºü¬†**</p>\n<p>OC ‰∏≠Ê∑±Â§çÂà∂ÊòØÈÄöËøá copy ‰∏é mutableCopy ÊñπÊ≥ïÂÆûÁé∞Ôºà‰ΩÜ‰∏çÊòØÈÉΩËÉΩËææÂà∞Ê∑±Â§çÂà∂ÁöÑÁõÆÁöÑÔºâÔºåÈÄöËøá copy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÈÄöËøá mutableCopy Â§çÂà∂ÂêéÁöÑÂâØÊú¨ÈÉΩÊòØÂèØÂèòÁöÑ„ÄÇÂ¶ÇÂàùÂßãÂØπË±°‰∏∫ NSString ‰∏é NSMutableStringÔºåÈÄöËøá copy ÂêéÂâØÊú¨ÈÉΩÊòØ NSStringÔºåËÄåÈÄöËøá mutableCopy ÂêéÈÉΩÊòØ NSMutableString„ÄÇ<br>\nÊé•‰∏ãÊù•ÂàÜ‰∏§ÁßçÊÉÖÂÜµËÆ®ËÆ∫ copy ‰∏é mutableCopyÔºö</p>\n<p><strong>ÂàùÂßãÂØπË±°‰∏çÂèØÂèòÔºàÂ¶Ç NSString„ÄÅNSArray Á≠âÔºâ</strong></p>\n<p>Ë∞ÉÁî® copy ÊñπÊ≥ï‰πüÊòØ<strong>ÊµÖÂ§çÂà∂</strong>ÔºåÁ≠âÂêå‰∫éÁõ¥Êé•ËµãÂÄºÔºåÂõ†‰∏∫Â§çÂà∂ËøáÂêéÁöÑÂâØÊú¨ÂíåÂéüÊù•ÁöÑÂØπË±°ÈÉΩÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Ë∞ÉÁî® copy Êú¨Ë¥®Â∞±ÊòØËµãÂÄºÊìç‰ΩúÔºåÂ§çÂà∂‰∫ÜÂºïÁî®Ôºå‰ΩÜÊòØÈÉΩÊåáÂêëÂêå‰∏ÄÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇ<br>\nË∞ÉÁî® mutableCopy ÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂâØÊú¨Êàê‰∏∫‰∫ÜÂèØÂèòÂØπË±°Ôºå‰ΩÜÊòØÊìç‰ΩúÂâØÊú¨ÔºåÂØπÂàùÂßãÂØπË±°ÁöÑÂÄº‰∏ç‰ºö‰∫ßÁîüÂΩ±Âìç„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void constCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----ConstCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----ConstCopy Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>-NSString Copy-</strong><br>\n<strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x100002060</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello</strong><br>\n<strong>copyStr : Hello World!</strong><br>\n<strong>orignalStr value address: 0x100002060</strong><br>\n<strong>copyStr value address: 0x1004074d0</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff798</strong></p>\n<hr>\n<p><strong>-NSArray Copy-</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x1001016b0</strong><br>\n<strong>copyArray value address: 0x1001016b0</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff788</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† World**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x1001016b0</strong><br>\n<strong>copyArray value address: 0x100300000</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÈÄöËøá copy ÊñπÊ≥ïÂ§çÂà∂ÂêéÁöÑÂâØÊú¨ÂØπË±°ÁöÑ value Âú∞ÂùÄÂíåÂéüÂØπË±°ÊòØ‰∏ÄÊ†∑ÁöÑÔºåÊâÄ‰ª•ÈíàÂØπ‰∏çÂèØÂèòÂØπË±°ÊòØÁî® copy ÊñπÊ≥ïÊòØÊµÖÂ§çÂà∂„ÄÇËÄå mutableCopy ÊñπÊ≥ïÂ§çÂà∂ÂêéÔºåÂâØÊú¨ÂØπË±°ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩÂíåÂéüÂØπË±°‰∏ç‰∏ÄÊ†∑‰∫ÜÔºåËØ¥Êòé mutableCopy ÊñπÊ≥ïÊòØÊ∑±Â§çÂà∂„ÄÇ</p>\n<p><strong>ÂàùÂßãÂØπË±°ÂèØÂèòÔºàÂ¶Ç NSMutableString„ÄÅNSMutableArray Á≠âÔºâ</strong></p>\n<p>Ë∞ÉÁî® copy ÊñπÊ≥ïÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂõ†‰∏∫ËøôÈáåÂâØÊú¨ÊòØ‰∏çÂèØÂèòÁöÑÔºåÊâÄ‰ª•Âè™ËÄÉËôëÂàùÂßãÂØπË±°ÊîπÂèò„ÄÇÂõ†‰∏∫ÊòØÊ∑±Â§çÂà∂ÔºåÂàùÂßãÂØπË±°Êó†ËÆ∫ÊÄé‰πàÊîπÂèòÔºåÂâØÊú¨ÁöÑÂÄºÈÉΩÊòØ‰∏çÂèòÁöÑ„ÄÇ<br>\nË∞ÉÁî® mutableCopy ‰πüÊòØ<strong>Ê∑±Â§çÂà∂</strong>ÔºåÂ§çÂà∂ËøáÂêéÔºåÂâØÊú¨‰∏éÂàùÂßãÂØπË±°‰πãÈó¥ÁöÑÊîπÂèòÈÉΩÊòØÁã¨Á´ã‰∏çÂΩ±ÂìçÁöÑÔºåÂ¶ÇÂàùÂßãÂØπË±° str = ‚Äúexample‚ÄùÔºåstr+‚Äù append1‚ÄùÔºåÂâØÊú¨ str+‚Äù append2‚ÄùÔºåÊúÄÁªàËæìÂá∫ÁªìÊûú‰ºöÊòØÂàùÂßãÂØπË±°‰∏∫‚Äùexample append1‚ÄùÔºåÂâØÊú¨‰∏∫‚Äùexample append2‚Äù„ÄÇ</p>\n<p>ËØï‰æã‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void mutableCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----MutableCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;Word&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;+arr1&quot;];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;+arr3&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ËæìÂá∫ÁªìÊûúÔºö</p>\n<blockquote>\n<p><strong>-----MutableCopy Test-----</strong></p>\n</blockquote>\n<hr>\n<p><strong>-NSString Copy-</strong><br>\n<strong>orignalStr : Hello World</strong><br>\n<strong>copyStr : Hello</strong><br>\n<strong>orignalStr value address: 0x100300080</strong><br>\n<strong>copyStr value address: 0x6f6c6c654855</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff7a0</strong></p>\n<hr>\n<p><strong>orignalStr : Hello World + str1</strong><br>\n<strong>copyStr : Hello World + str3</strong><br>\n<strong>orignalStr value address: 0x100300080</strong><br>\n<strong>copyStr value address: 0x100300320</strong><br>\n<strong>orignalStr pointer address: 0x7fff5fbff7a8</strong><br>\n<strong>copyStr pointer address: 0x7fff5fbff798</strong></p>\n<hr>\n<p><strong>-NSArray Copy-</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù,**<br>\n**¬† ¬† Word**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World!‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100300000</strong><br>\n<strong>copyArray value address: 0x100300b00</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff788</strong></p>\n<hr>\n<p><strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] orignalArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† Word,**<br>\n**¬† ¬† ‚Äú+arr1‚Äù**<br>\n<strong>)</strong><br>\n<strong>2016-08-22 11:35:20.314 CopyDemo[2046:72936] copyArray : (</strong><br>\n**¬† ¬† ‚ÄúHello World! + str1 + str3‚Äù,**<br>\n**¬† ¬† Word,**<br>\n**¬† ¬† ‚Äú+arr3‚Äù**<br>\n<strong>)</strong><br>\n<strong>orignalArray value address: 0x100300000</strong><br>\n<strong>copyArray value address: 0x100300e40</strong><br>\n<strong>orignalArray pointer address: 0x7fff5fbff790</strong><br>\n<strong>copyArray pointer address: 0x7fff5fbff780</strong></p>\n<hr>\n<p>ÈÄöËøáËæìÂá∫ÁªìÊûúÂèØ‰ª•ÁúãÂà∞ÔºåÂØπ‰∫éÂèØÂèòÂØπË±°ÔºåË∞ÉÁî® copy ‰∏é mutableCopy ÊñπÊ≥ïÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂõ†‰∏∫ÂâØÊú¨ÁöÑ value Âíå pointer Âú∞ÂùÄÈÉΩ‰∏éÂéüÂØπË±°‰∏çÂêå„ÄÇ</p>\n<p><code>Ê≥®ÔºöÂØπ‰∫éÁΩë‰∏äÊüê‰∫õËß£ÈáäËØ¥NSArray/NSMutableArray NSDictionary/NSMutableDictionaryÂè™ÊúâÊµÖÂ§çÂà∂ÔºåËøôÈáåËÆ§‰∏∫ÂØπ‰∫éÂØπË±°Êú¨Ë∫´Êù•ËØ¥Ë∞ÉÁî®mutableCopyÊàñÂØπ‰∫éÂèØÂèòÂØπË±°Ë∞ÉÁî®copyÈÉΩÊòØÊ∑±Â§çÂà∂ÔºåÂè™ËÉΩËØ¥ÂØπ‰∫éÊï∞ÁªÑÂíåÂ≠óÂÖ∏ËøôÁßçÂ§çÂêàÁªìÊûÑÊ∑±Â§çÂà∂Êìç‰ΩúÂè™ÊòØ‰ΩúÁî®Âà∞Â§ñÂ±ÇÂØπË±°ÔºåÂÜÖÈÉ®Â¶ÇÊûúËøòÊúâÂèØÂèòÂØπË±°Ôºå‰ªÖ‰ªÖÂ∞±ÊòØÂºïÁî®ÁöÑÂ§çÂà∂„ÄÇÔºà‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠ÂØπ‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰ΩúÂèØ‰ª•ÂæàÊ∏ÖÊ•öÁöÑÁúãÂá∫Êù•„ÄÇÂç≥‰ΩøÊòØÂØπÊï∞ÁªÑÁöÑÊ∑±Â§çÂà∂ÔºåÁÑ∂ËÄåÊîπÂèòÁ¨¨‰∏Ä‰∏™ÂèØÂèòÂ≠óÁ¨¶‰∏≤ÔºåÊó†ËÆ∫ÊòØÂâØÊú¨Êï∞ÁªÑËøòÊòØÂéüÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÈÉΩÊîπÂèò‰∫Ü„ÄÇÔºâ</code></p>\n<p>ÂÆåÊï¥‰ª£Á†ÅÔºö</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//</span><br><span class=\"line\">//¬† main.m</span><br><span class=\"line\">//¬† CopyDemo</span><br><span class=\"line\">//</span><br><span class=\"line\">//¬† Created by Jiao Liu on 6/23/16.</span><br><span class=\"line\">//¬† Copyright ¬© 2016 ChangHong. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void mutableCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----MutableCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableString *str1 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str1 appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;Word&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;+arr1&quot;];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;+arr3&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void constCopyTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----ConstCopy Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSString Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = [str1 copy];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [str1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† printf(&quot;-NSArray Copy-\\n&quot;);</span><br><span class=\"line\">¬† ¬† NSArray *arr1 = [NSArray arrayWithObjects:[NSMutableString stringWithString:@&quot;Hello&quot;], nil];</span><br><span class=\"line\">¬† ¬† NSArray *arr2 = [arr1 copy];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; World!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr3 = [arr1 mutableCopy];</span><br><span class=\"line\">¬† ¬† [arr3 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [[arr1 objectAtIndex:0] appendString:@&quot; + str1&quot;];</span><br><span class=\"line\">¬† ¬† [[arr3 objectAtIndex:0] appendString:@&quot; + str3&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr3);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void assignTest()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">¬† ¬† printf(&quot;-----Assign Test-----\\n\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSString *str1 = @&quot;Hello&quot;;</span><br><span class=\"line\">¬† ¬† NSString *str2 = str1;</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str1 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str2 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableString *str3 = [NSMutableString stringWithString:@&quot;Hello&quot;];</span><br><span class=\"line\">¬† ¬† NSMutableString *str4 = str3;</span><br><span class=\"line\">¬† ¬† [str3 appendString:@&quot; World&quot;];</span><br><span class=\"line\">¬† ¬† [str4 appendString:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr : %s\\n&quot;,[str3 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr : %s\\n&quot;,[str4 cStringUsingEncoding:NSUTF8StringEncoding]);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr value address: %p\\n&quot;,str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr value address: %p\\n&quot;,str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalStr pointer address: %p\\n&quot;,&amp;str3);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyStr pointer address: %p\\n&quot;,&amp;str4);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">¬†¬† ¬†</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr1 = [NSMutableArray arrayWithObjects:@&quot;Hello&quot;, nil];</span><br><span class=\"line\">¬† ¬† NSMutableArray *arr2 = arr1;</span><br><span class=\"line\">¬† ¬† [arr1 addObject:@&quot;World&quot;];</span><br><span class=\"line\">¬† ¬† [arr2 addObject:@&quot;!&quot;];</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;orignalArray : %@&quot;,arr1);</span><br><span class=\"line\">¬† ¬† NSLog(@&quot;copyArray : %@&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray value address: %p\\n&quot;,arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray value address: %p\\n&quot;,arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;orignalArray pointer address: %p\\n&quot;,&amp;arr1);</span><br><span class=\"line\">¬† ¬† printf(&quot;copyArray pointer address: %p\\n&quot;,&amp;arr2);</span><br><span class=\"line\">¬† ¬† printf(&quot;\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">¬† ¬† @autoreleasepool &#123;</span><br><span class=\"line\">¬† ¬† ¬† ¬† // insert code here...</span><br><span class=\"line\">¬† ¬† ¬† ¬† assignTest();</span><br><span class=\"line\">¬† ¬† ¬† ¬† constCopyTest();</span><br><span class=\"line\">¬† ¬† ¬† ¬† mutableCopyTest();</span><br><span class=\"line\">¬† ¬† &#125;</span><br><span class=\"line\">¬† ¬† return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>Êú¨ÊñáÊúÄÊó©ÂèëÂ∏É‰∫éÈïøËôπËΩØÊúçÂÖ¨‰ºóÂè∑ÔºåÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÂéªÁúã‰∏Ä‰∏ãÔºö<br>\n<a href=\"http://mp.weixin.qq.com/s?__biz=MzAwMjkxNjYzNA==&amp;mid=2247483852&amp;idx=1&amp;sn=9da01b2399427654ad12e36452f612c9&amp;scene=23&amp;srcid=0822iBXKqaGYwMOnRhVLxNVt#rd\" target=\"_blank\" rel=\"noopener\">ÂâñÊûê„ÄêOC„Äë‰∏≠Ê∑±Â§çÂà∂‰∏éÊµÖÂ§çÂà∂</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjscxlphr0006hqoxb6yegl0k","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpi8000vhqox6gg8flh6"},{"post_id":"cjscxlphr0006hqoxb6yegl0k","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpi9000xhqoxe73joqrf"},{"post_id":"cjscxlpi5000phqoxwkiq3mw5","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpi90010hqoxmdr7ajvc"},{"post_id":"cjscxlpi5000phqoxwkiq3mw5","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpia0012hqox6hxhz0tr"},{"post_id":"cjscxlpi7000shqox6ie5awa3","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpia0015hqoxkou9ksap"},{"post_id":"cjscxlpi7000shqox6ie5awa3","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpib0017hqox6tv1vq1j"},{"post_id":"cjscxlphf0000hqoxx558ulqv","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpib0019hqoxydxz1teb"},{"post_id":"cjscxlphf0000hqoxx558ulqv","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpib001ahqoxugc5tj8a"},{"post_id":"cjscxlphs0007hqoxehu7z483","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpic001chqoxtolxgkmj"},{"post_id":"cjscxlphs0007hqoxehu7z483","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpic001dhqoxukg2iq9l"},{"post_id":"cjscxlphv000bhqoxttz3v2i3","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpid001fhqoxcp2ougve"},{"post_id":"cjscxlphv000bhqoxttz3v2i3","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpid001ghqoxhbrozurb"},{"post_id":"cjscxlphl0002hqox48njsinf","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpid001hhqoxa6c0uaos"},{"post_id":"cjscxlphl0002hqox48njsinf","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpie001jhqox4vyrez2b"},{"post_id":"cjscxlphx000dhqoxtz0lrvyo","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpie001khqoxbwpzlscj"},{"post_id":"cjscxlphx000dhqoxtz0lrvyo","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpie001mhqoxe46q604k"},{"post_id":"cjscxlphz000hhqoxyyxcynj4","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpif001nhqoxnq0olkv3"},{"post_id":"cjscxlphz000hhqoxyyxcynj4","category_id":"cjscxlpi3000khqoxzah5ixey","_id":"cjscxlpif001ohqox1lx3zb2l"},{"post_id":"cjscxlphp0005hqoxmkatvc7o","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpif001phqox09oqjg5g"},{"post_id":"cjscxlphp0005hqoxmkatvc7o","category_id":"cjscxlpic001ehqoxk3de39t5","_id":"cjscxlpif001qhqox6akrngg6"},{"post_id":"cjscxlpi1000jhqoxdphuz7q2","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpif001rhqoxc34lwhc7"},{"post_id":"cjscxlpi1000jhqoxdphuz7q2","category_id":"cjscxlpic001ehqoxk3de39t5","_id":"cjscxlpig001shqoxzd8vwad1"},{"post_id":"cjscxlpi4000nhqox57dt4tqj","category_id":"cjscxlphn0003hqox3ejahvub","_id":"cjscxlpig001thqoxtl9zc4tb"},{"post_id":"cjscxlpi4000nhqox57dt4tqj","category_id":"cjscxlpic001ehqoxk3de39t5","_id":"cjscxlpig001uhqoxfj9hs87z"},{"post_id":"cjscxlpj50020hqox8tlqitdz","category_id":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpja002chqoxwre0sccn"},{"post_id":"cjscxlpj50020hqox8tlqitdz","category_id":"cjscxlpj90026hqoxn101j8yx","_id":"cjscxlpjb002fhqox9f48doss"},{"post_id":"cjscxlpiz001vhqoxwlhp7msq","category_id":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpjb002hhqox2azo9d11"},{"post_id":"cjscxlpiz001vhqoxwlhp7msq","category_id":"cjscxlpj90026hqoxn101j8yx","_id":"cjscxlpjc002jhqoxkut65fq0"},{"post_id":"cjscxlpj1001whqoxzbvx3vqu","category_id":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpjc002lhqoxwhg3bpge"},{"post_id":"cjscxlpj1001whqoxzbvx3vqu","category_id":"cjscxlpja002bhqox7nwust5u","_id":"cjscxlpjc002mhqoxwsucemlo"},{"post_id":"cjscxlpj3001zhqoxlrujnuvf","category_id":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpjd002phqox33zqcvl4"},{"post_id":"cjscxlpj3001zhqoxlrujnuvf","category_id":"cjscxlpjc002ihqoxyc8luzxp","_id":"cjscxlpjd002rhqoxdz42gox2"},{"post_id":"cjscxlpjh002vhqoxpdgexiir","category_id":"cjscxlpj2001xhqoxyp595jub","_id":"cjscxlpjk002xhqoxwbm1e653"},{"post_id":"cjscxlpjh002vhqoxpdgexiir","category_id":"cjscxlpja002bhqox7nwust5u","_id":"cjscxlpjk002yhqoxrdejekrh"}],"PostTag":[{"post_id":"cjscxlphr0006hqoxb6yegl0k","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlphv000ahqoxutsp28fg"},{"post_id":"cjscxlphf0000hqoxx558ulqv","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlphx000chqoxgktuhagz"},{"post_id":"cjscxlphs0007hqoxehu7z483","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlphz000ghqoxjz7u52yi"},{"post_id":"cjscxlphl0002hqox48njsinf","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpi1000ihqox5r2gynqu"},{"post_id":"cjscxlphx000dhqoxtz0lrvyo","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpi4000mhqox3i7h01hi"},{"post_id":"cjscxlphz000hhqoxyyxcynj4","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpi5000ohqox4jo21467"},{"post_id":"cjscxlphp0005hqoxmkatvc7o","tag_id":"cjscxlphy000fhqoxhd7fuqf8","_id":"cjscxlpi6000rhqoxvybjtejh"},{"post_id":"cjscxlpi1000jhqoxdphuz7q2","tag_id":"cjscxlphy000fhqoxhd7fuqf8","_id":"cjscxlpi8000thqoxr4rtk3wd"},{"post_id":"cjscxlpi4000nhqox57dt4tqj","tag_id":"cjscxlphy000fhqoxhd7fuqf8","_id":"cjscxlpi9000whqox8b5wmu9p"},{"post_id":"cjscxlphv000bhqoxttz3v2i3","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpi9000yhqoxwqbkcj01"},{"post_id":"cjscxlphv000bhqoxttz3v2i3","tag_id":"cjscxlpi3000lhqoxqmjasq8d","_id":"cjscxlpia0011hqox3y7qfvqd"},{"post_id":"cjscxlpi5000phqoxwkiq3mw5","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpia0013hqox1yqnnlby"},{"post_id":"cjscxlpi7000shqox6ie5awa3","tag_id":"cjscxlphp0004hqoxjlg8mqa7","_id":"cjscxlpia0016hqox7y9c5oez"},{"post_id":"cjscxlpiz001vhqoxwlhp7msq","tag_id":"cjscxlpj3001yhqoxhby33jbs","_id":"cjscxlpj80023hqox4etw1b58"},{"post_id":"cjscxlpj1001whqoxzbvx3vqu","tag_id":"cjscxlpj70022hqoxlllbr5ta","_id":"cjscxlpja002ahqox428thoov"},{"post_id":"cjscxlpj1001whqoxzbvx3vqu","tag_id":"cjscxlpj90025hqoxr5bah41f","_id":"cjscxlpjb002dhqox7bgsfs6t"},{"post_id":"cjscxlpj1001whqoxzbvx3vqu","tag_id":"cjscxlpj90027hqoxvo4u1s52","_id":"cjscxlpjb002ghqox2oz1n694"},{"post_id":"cjscxlpj3001zhqoxlrujnuvf","tag_id":"cjscxlpja0029hqoxyiblpyfv","_id":"cjscxlpjd002ohqoxm3z38qv0"},{"post_id":"cjscxlpj3001zhqoxlrujnuvf","tag_id":"cjscxlpjb002ehqox18la0vls","_id":"cjscxlpjd002qhqoxadgg1ieh"},{"post_id":"cjscxlpj3001zhqoxlrujnuvf","tag_id":"cjscxlpjc002khqoxgcyt1tlb","_id":"cjscxlpjd002shqoxn0b869u1"},{"post_id":"cjscxlpj50020hqox8tlqitdz","tag_id":"cjscxlpj3001yhqoxhby33jbs","_id":"cjscxlpjd002thqox1gwn73pv"},{"post_id":"cjscxlpj50020hqox8tlqitdz","tag_id":"cjscxlpjc002nhqoxoaduzk0b","_id":"cjscxlpjd002uhqox87rqsuj1"},{"post_id":"cjscxlpjh002vhqoxpdgexiir","tag_id":"cjscxlpj70022hqoxlllbr5ta","_id":"cjscxlpjj002whqoxprjqxrx8"}],"Tag":[{"name":"Â∞èÁÜäÁå´","_id":"cjscxlphp0004hqoxjlg8mqa7"},{"name":"ÊãõË¥¢","_id":"cjscxlphy000fhqoxhd7fuqf8"},{"name":"Êñ∞Áîü","_id":"cjscxlpi3000lhqoxqmjasq8d"},{"name":"ÁÆóÊ≥ï","_id":"cjscxlpj3001yhqoxhby33jbs"},{"name":"ÁßªÂä®Á´Ø","_id":"cjscxlpj70022hqoxlllbr5ta"},{"name":"Êú∫Âô®Â≠¶‰π†","_id":"cjscxlpj90025hqoxr5bah41f"},{"name":"tensorflow","_id":"cjscxlpj90027hqoxvo4u1s52"},{"name":"Â∞èÁ®ãÂ∫è","_id":"cjscxlpja0029hqoxyiblpyfv"},{"name":"html","_id":"cjscxlpjb002ehqox18la0vls"},{"name":"ÂâçÁ´Ø","_id":"cjscxlpjc002khqoxgcyt1tlb"},{"name":"GCJ","_id":"cjscxlpjc002nhqoxoaduzk0b"}]}}